(() => {
    var e = {
            1232: (e, t, n) => {
                var r = n(4010)(n(9905), "DataView");
                e.exports = r;
            },
            7433: (e, t, n) => {
                var r = n(4100),
                    o = n(2146),
                    i = n(3229),
                    s = n(8625),
                    a = n(6937);
                function c(e) {
                    var t = -1,
                        n = null == e ? 0 : e.length;
                    for (this.clear(); ++t < n; ) {
                        var r = e[t];
                        this.set(r[0], r[1]);
                    }
                }
                (c.prototype.clear = r), (c.prototype.delete = o), (c.prototype.get = i), (c.prototype.has = s), (c.prototype.set = a), (e.exports = c);
            },
            6795: (e, t, n) => {
                var r = n(3498),
                    o = n(7068),
                    i = n(7087),
                    s = n(4675),
                    a = n(4667);
                function c(e) {
                    var t = -1,
                        n = null == e ? 0 : e.length;
                    for (this.clear(); ++t < n; ) {
                        var r = e[t];
                        this.set(r[0], r[1]);
                    }
                }
                (c.prototype.clear = r), (c.prototype.delete = o), (c.prototype.get = i), (c.prototype.has = s), (c.prototype.set = a), (e.exports = c);
            },
            1803: (e, t, n) => {
                var r = n(4010)(n(9905), "Map");
                e.exports = r;
            },
            1817: (e, t, n) => {
                var r = n(2468),
                    o = n(9778),
                    i = n(7005),
                    s = n(5873),
                    a = n(6633);
                function c(e) {
                    var t = -1,
                        n = null == e ? 0 : e.length;
                    for (this.clear(); ++t < n; ) {
                        var r = e[t];
                        this.set(r[0], r[1]);
                    }
                }
                (c.prototype.clear = r), (c.prototype.delete = o), (c.prototype.get = i), (c.prototype.has = s), (c.prototype.set = a), (e.exports = c);
            },
            5664: (e, t, n) => {
                var r = n(4010)(n(9905), "Promise");
                e.exports = r;
            },
            6293: (e, t, n) => {
                var r = n(4010)(n(9905), "Set");
                e.exports = r;
            },
            6063: (e, t, n) => {
                var r = n(1817),
                    o = n(8864),
                    i = n(159);
                function s(e) {
                    var t = -1,
                        n = null == e ? 0 : e.length;
                    for (this.__data__ = new r(); ++t < n; ) this.add(e[t]);
                }
                (s.prototype.add = s.prototype.push = o), (s.prototype.has = i), (e.exports = s);
            },
            3165: (e, t, n) => {
                var r = n(6795),
                    o = n(6240),
                    i = n(1318),
                    s = n(7297),
                    a = n(7405),
                    c = n(6133);
                function u(e) {
                    var t = (this.__data__ = new r(e));
                    this.size = t.size;
                }
                (u.prototype.clear = o), (u.prototype.delete = i), (u.prototype.get = s), (u.prototype.has = a), (u.prototype.set = c), (e.exports = u);
            },
            3509: (e, t, n) => {
                var r = n(9905).Symbol;
                e.exports = r;
            },
            9656: (e, t, n) => {
                var r = n(9905).Uint8Array;
                e.exports = r;
            },
            491: (e, t, n) => {
                var r = n(4010)(n(9905), "WeakMap");
                e.exports = r;
            },
            4958: (e) => {
                e.exports = function (e, t) {
                    for (var n = -1, r = null == e ? 0 : e.length, o = 0, i = []; ++n < r; ) {
                        var s = e[n];
                        t(s, n, e) && (i[o++] = s);
                    }
                    return i;
                };
            },
            8883: (e, t, n) => {
                var r = n(1780),
                    o = n(3040),
                    i = n(7285),
                    s = n(9399),
                    a = n(8757),
                    c = n(2739),
                    u = Object.prototype.hasOwnProperty;
                e.exports = function (e, t) {
                    var n = i(e),
                        l = !n && o(e),
                        d = !n && !l && s(e),
                        p = !n && !l && !d && c(e),
                        f = n || l || d || p,
                        h = f ? r(e.length, String) : [],
                        m = h.length;
                    for (var g in e) (!t && !u.call(e, g)) || (f && ("length" == g || (d && ("offset" == g || "parent" == g)) || (p && ("buffer" == g || "byteLength" == g || "byteOffset" == g)) || a(g, m))) || h.push(g);
                    return h;
                };
            },
            7292: (e) => {
                e.exports = function (e, t) {
                    for (var n = -1, r = t.length, o = e.length; ++n < r; ) e[o + n] = t[n];
                    return e;
                };
            },
            3700: (e) => {
                e.exports = function (e, t) {
                    for (var n = -1, r = null == e ? 0 : e.length; ++n < r; ) if (t(e[n], n, e)) return !0;
                    return !1;
                };
            },
            2229: (e, t, n) => {
                var r = n(1548);
                e.exports = function (e, t) {
                    for (var n = e.length; n--; ) if (r(e[n][0], t)) return n;
                    return -1;
                };
            },
            8379: (e, t, n) => {
                var r = n(7292),
                    o = n(7285);
                e.exports = function (e, t, n) {
                    var i = t(e);
                    return o(e) ? i : r(i, n(e));
                };
            },
            9732: (e, t, n) => {
                var r = n(3509),
                    o = n(9335),
                    i = n(8178),
                    s = r ? r.toStringTag : void 0;
                e.exports = function (e) {
                    return null == e ? (void 0 === e ? "[object Undefined]" : "[object Null]") : s && s in Object(e) ? o(e) : i(e);
                };
            },
            4490: (e, t, n) => {
                var r = n(9732),
                    o = n(9054);
                e.exports = function (e) {
                    return o(e) && "[object Arguments]" == r(e);
                };
            },
            6658: (e, t, n) => {
                var r = n(9464),
                    o = n(9054);
                e.exports = function e(t, n, i, s, a) {
                    return t === n || (null == t || null == n || (!o(t) && !o(n)) ? t != t && n != n : r(t, n, i, s, e, a));
                };
            },
            9464: (e, t, n) => {
                var r = n(3165),
                    o = n(8707),
                    i = n(4694),
                    s = n(8877),
                    a = n(8185),
                    c = n(7285),
                    u = n(9399),
                    l = n(2739),
                    d = "[object Arguments]",
                    p = "[object Array]",
                    f = "[object Object]",
                    h = Object.prototype.hasOwnProperty;
                e.exports = function (e, t, n, m, g, v) {
                    var y = c(e),
                        _ = c(t),
                        b = y ? p : a(e),
                        w = _ ? p : a(t),
                        S = (b = b == d ? f : b) == f,
                        k = (w = w == d ? f : w) == f,
                        x = b == w;
                    if (x && u(e)) {
                        if (!u(t)) return !1;
                        (y = !0), (S = !1);
                    }
                    if (x && !S) return v || (v = new r()), y || l(e) ? o(e, t, n, m, g, v) : i(e, t, b, n, m, g, v);
                    if (!(1 & n)) {
                        var E = S && h.call(e, "__wrapped__"),
                            I = k && h.call(t, "__wrapped__");
                        if (E || I) {
                            var T = E ? e.value() : e,
                                C = I ? t.value() : t;
                            return v || (v = new r()), g(T, C, n, m, v);
                        }
                    }
                    return !!x && (v || (v = new r()), s(e, t, n, m, g, v));
                };
            },
            655: (e, t, n) => {
                var r = n(6950),
                    o = n(7876),
                    i = n(5745),
                    s = n(2277),
                    a = /^\[object .+?Constructor\]$/,
                    c = Function.prototype,
                    u = Object.prototype,
                    l = c.toString,
                    d = u.hasOwnProperty,
                    p = RegExp(
                        "^" +
                            l
                                .call(d)
                                .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                                .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") +
                            "$"
                    );
                e.exports = function (e) {
                    return !(!i(e) || o(e)) && (r(e) ? p : a).test(s(e));
                };
            },
            9761: (e, t, n) => {
                var r = n(9732),
                    o = n(7066),
                    i = n(9054),
                    s = {};
                (s["[object Float32Array]"] = s["[object Float64Array]"] = s["[object Int8Array]"] = s["[object Int16Array]"] = s["[object Int32Array]"] = s["[object Uint8Array]"] = s["[object Uint8ClampedArray]"] = s[
                    "[object Uint16Array]"
                ] = s["[object Uint32Array]"] = !0),
                    (s["[object Arguments]"] = s["[object Array]"] = s["[object ArrayBuffer]"] = s["[object Boolean]"] = s["[object DataView]"] = s["[object Date]"] = s["[object Error]"] = s["[object Function]"] = s["[object Map]"] = s[
                        "[object Number]"
                    ] = s["[object Object]"] = s["[object RegExp]"] = s["[object Set]"] = s["[object String]"] = s["[object WeakMap]"] = !1),
                    (e.exports = function (e) {
                        return i(e) && o(e.length) && !!s[r(e)];
                    });
            },
            548: (e, t, n) => {
                var r = n(947),
                    o = n(3062),
                    i = Object.prototype.hasOwnProperty;
                e.exports = function (e) {
                    if (!r(e)) return o(e);
                    var t = [];
                    for (var n in Object(e)) i.call(e, n) && "constructor" != n && t.push(n);
                    return t;
                };
            },
            1780: (e) => {
                e.exports = function (e, t) {
                    for (var n = -1, r = Array(e); ++n < e; ) r[n] = t(n);
                    return r;
                };
            },
            7105: (e) => {
                e.exports = function (e) {
                    return function (t) {
                        return e(t);
                    };
                };
            },
            6919: (e) => {
                e.exports = function (e, t) {
                    return e.has(t);
                };
            },
            9973: (e, t, n) => {
                var r = n(9905)["__core-js_shared__"];
                e.exports = r;
            },
            8707: (e, t, n) => {
                var r = n(6063),
                    o = n(3700),
                    i = n(6919);
                e.exports = function (e, t, n, s, a, c) {
                    var u = 1 & n,
                        l = e.length,
                        d = t.length;
                    if (l != d && !(u && d > l)) return !1;
                    var p = c.get(e),
                        f = c.get(t);
                    if (p && f) return p == t && f == e;
                    var h = -1,
                        m = !0,
                        g = 2 & n ? new r() : void 0;
                    for (c.set(e, t), c.set(t, e); ++h < l; ) {
                        var v = e[h],
                            y = t[h];
                        if (s) var _ = u ? s(y, v, h, t, e, c) : s(v, y, h, e, t, c);
                        if (void 0 !== _) {
                            if (_) continue;
                            m = !1;
                            break;
                        }
                        if (g) {
                            if (
                                !o(t, function (e, t) {
                                    if (!i(g, t) && (v === e || a(v, e, n, s, c))) return g.push(t);
                                })
                            ) {
                                m = !1;
                                break;
                            }
                        } else if (v !== y && !a(v, y, n, s, c)) {
                            m = !1;
                            break;
                        }
                    }
                    return c.delete(e), c.delete(t), m;
                };
            },
            4694: (e, t, n) => {
                var r = n(3509),
                    o = n(9656),
                    i = n(1548),
                    s = n(8707),
                    a = n(3409),
                    c = n(8691),
                    u = r ? r.prototype : void 0,
                    l = u ? u.valueOf : void 0;
                e.exports = function (e, t, n, r, u, d, p) {
                    switch (n) {
                        case "[object DataView]":
                            if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) return !1;
                            (e = e.buffer), (t = t.buffer);
                        case "[object ArrayBuffer]":
                            return !(e.byteLength != t.byteLength || !d(new o(e), new o(t)));
                        case "[object Boolean]":
                        case "[object Date]":
                        case "[object Number]":
                            return i(+e, +t);
                        case "[object Error]":
                            return e.name == t.name && e.message == t.message;
                        case "[object RegExp]":
                        case "[object String]":
                            return e == t + "";
                        case "[object Map]":
                            var f = a;
                        case "[object Set]":
                            var h = 1 & r;
                            if ((f || (f = c), e.size != t.size && !h)) return !1;
                            var m = p.get(e);
                            if (m) return m == t;
                            (r |= 2), p.set(e, t);
                            var g = s(f(e), f(t), r, u, d, p);
                            return p.delete(e), g;
                        case "[object Symbol]":
                            if (l) return l.call(e) == l.call(t);
                    }
                    return !1;
                };
            },
            8877: (e, t, n) => {
                var r = n(6286),
                    o = Object.prototype.hasOwnProperty;
                e.exports = function (e, t, n, i, s, a) {
                    var c = 1 & n,
                        u = r(e),
                        l = u.length;
                    if (l != r(t).length && !c) return !1;
                    for (var d = l; d--; ) {
                        var p = u[d];
                        if (!(c ? p in t : o.call(t, p))) return !1;
                    }
                    var f = a.get(e),
                        h = a.get(t);
                    if (f && h) return f == t && h == e;
                    var m = !0;
                    a.set(e, t), a.set(t, e);
                    for (var g = c; ++d < l; ) {
                        var v = e[(p = u[d])],
                            y = t[p];
                        if (i) var _ = c ? i(y, v, p, t, e, a) : i(v, y, p, e, t, a);
                        if (!(void 0 === _ ? v === y || s(v, y, n, i, a) : _)) {
                            m = !1;
                            break;
                        }
                        g || (g = "constructor" == p);
                    }
                    if (m && !g) {
                        var b = e.constructor,
                            w = t.constructor;
                        b == w || !("constructor" in e) || !("constructor" in t) || ("function" == typeof b && b instanceof b && "function" == typeof w && w instanceof w) || (m = !1);
                    }
                    return a.delete(e), a.delete(t), m;
                };
            },
            812: (e, t, n) => {
                var r = "object" == typeof n.g && n.g && n.g.Object === Object && n.g;
                e.exports = r;
            },
            6286: (e, t, n) => {
                var r = n(8379),
                    o = n(1492),
                    i = n(9186);
                e.exports = function (e) {
                    return r(e, i, o);
                };
            },
            6839: (e, t, n) => {
                var r = n(4262);
                e.exports = function (e, t) {
                    var n = e.__data__;
                    return r(t) ? n["string" == typeof t ? "string" : "hash"] : n.map;
                };
            },
            4010: (e, t, n) => {
                var r = n(655),
                    o = n(652);
                e.exports = function (e, t) {
                    var n = o(e, t);
                    return r(n) ? n : void 0;
                };
            },
            9335: (e, t, n) => {
                var r = n(3509),
                    o = Object.prototype,
                    i = o.hasOwnProperty,
                    s = o.toString,
                    a = r ? r.toStringTag : void 0;
                e.exports = function (e) {
                    var t = i.call(e, a),
                        n = e[a];
                    try {
                        e[a] = void 0;
                        var r = !0;
                    } catch (e) {}
                    var o = s.call(e);
                    return r && (t ? (e[a] = n) : delete e[a]), o;
                };
            },
            1492: (e, t, n) => {
                var r = n(4958),
                    o = n(4677),
                    i = Object.prototype.propertyIsEnumerable,
                    s = Object.getOwnPropertySymbols,
                    a = s
                        ? function (e) {
                              return null == e
                                  ? []
                                  : ((e = Object(e)),
                                    r(s(e), function (t) {
                                        return i.call(e, t);
                                    }));
                          }
                        : o;
                e.exports = a;
            },
            8185: (e, t, n) => {
                var r = n(1232),
                    o = n(1803),
                    i = n(5664),
                    s = n(6293),
                    a = n(491),
                    c = n(9732),
                    u = n(2277),
                    l = "[object Map]",
                    d = "[object Promise]",
                    p = "[object Set]",
                    f = "[object WeakMap]",
                    h = "[object DataView]",
                    m = u(r),
                    g = u(o),
                    v = u(i),
                    y = u(s),
                    _ = u(a),
                    b = c;
                ((r && b(new r(new ArrayBuffer(1))) != h) || (o && b(new o()) != l) || (i && b(i.resolve()) != d) || (s && b(new s()) != p) || (a && b(new a()) != f)) &&
                    (b = function (e) {
                        var t = c(e),
                            n = "[object Object]" == t ? e.constructor : void 0,
                            r = n ? u(n) : "";
                        if (r)
                            switch (r) {
                                case m:
                                    return h;
                                case g:
                                    return l;
                                case v:
                                    return d;
                                case y:
                                    return p;
                                case _:
                                    return f;
                            }
                        return t;
                    }),
                    (e.exports = b);
            },
            652: (e) => {
                e.exports = function (e, t) {
                    return null == e ? void 0 : e[t];
                };
            },
            4100: (e, t, n) => {
                var r = n(7142);
                e.exports = function () {
                    (this.__data__ = r ? r(null) : {}), (this.size = 0);
                };
            },
            2146: (e) => {
                e.exports = function (e) {
                    var t = this.has(e) && delete this.__data__[e];
                    return (this.size -= t ? 1 : 0), t;
                };
            },
            3229: (e, t, n) => {
                var r = n(7142),
                    o = Object.prototype.hasOwnProperty;
                e.exports = function (e) {
                    var t = this.__data__;
                    if (r) {
                        var n = t[e];
                        return "__lodash_hash_undefined__" === n ? void 0 : n;
                    }
                    return o.call(t, e) ? t[e] : void 0;
                };
            },
            8625: (e, t, n) => {
                var r = n(7142),
                    o = Object.prototype.hasOwnProperty;
                e.exports = function (e) {
                    var t = this.__data__;
                    return r ? void 0 !== t[e] : o.call(t, e);
                };
            },
            6937: (e, t, n) => {
                var r = n(7142);
                e.exports = function (e, t) {
                    var n = this.__data__;
                    return (this.size += this.has(e) ? 0 : 1), (n[e] = r && void 0 === t ? "__lodash_hash_undefined__" : t), this;
                };
            },
            8757: (e) => {
                var t = /^(?:0|[1-9]\d*)$/;
                e.exports = function (e, n) {
                    var r = typeof e;
                    return !!(n = null == n ? 9007199254740991 : n) && ("number" == r || ("symbol" != r && t.test(e))) && e > -1 && e % 1 == 0 && e < n;
                };
            },
            4262: (e) => {
                e.exports = function (e) {
                    var t = typeof e;
                    return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e : null === e;
                };
            },
            7876: (e, t, n) => {
                var r,
                    o = n(9973),
                    i = (r = /[^.]+$/.exec((o && o.keys && o.keys.IE_PROTO) || "")) ? "Symbol(src)_1." + r : "";
                e.exports = function (e) {
                    return !!i && i in e;
                };
            },
            947: (e) => {
                var t = Object.prototype;
                e.exports = function (e) {
                    var n = e && e.constructor;
                    return e === (("function" == typeof n && n.prototype) || t);
                };
            },
            3498: (e) => {
                e.exports = function () {
                    (this.__data__ = []), (this.size = 0);
                };
            },
            7068: (e, t, n) => {
                var r = n(2229),
                    o = Array.prototype.splice;
                e.exports = function (e) {
                    var t = this.__data__,
                        n = r(t, e);
                    return !(n < 0) && (n == t.length - 1 ? t.pop() : o.call(t, n, 1), --this.size, !0);
                };
            },
            7087: (e, t, n) => {
                var r = n(2229);
                e.exports = function (e) {
                    var t = this.__data__,
                        n = r(t, e);
                    return n < 0 ? void 0 : t[n][1];
                };
            },
            4675: (e, t, n) => {
                var r = n(2229);
                e.exports = function (e) {
                    return r(this.__data__, e) > -1;
                };
            },
            4667: (e, t, n) => {
                var r = n(2229);
                e.exports = function (e, t) {
                    var n = this.__data__,
                        o = r(n, e);
                    return o < 0 ? (++this.size, n.push([e, t])) : (n[o][1] = t), this;
                };
            },
            2468: (e, t, n) => {
                var r = n(7433),
                    o = n(6795),
                    i = n(1803);
                e.exports = function () {
                    (this.size = 0), (this.__data__ = { hash: new r(), map: new (i || o)(), string: new r() });
                };
            },
            9778: (e, t, n) => {
                var r = n(6839);
                e.exports = function (e) {
                    var t = r(this, e).delete(e);
                    return (this.size -= t ? 1 : 0), t;
                };
            },
            7005: (e, t, n) => {
                var r = n(6839);
                e.exports = function (e) {
                    return r(this, e).get(e);
                };
            },
            5873: (e, t, n) => {
                var r = n(6839);
                e.exports = function (e) {
                    return r(this, e).has(e);
                };
            },
            6633: (e, t, n) => {
                var r = n(6839);
                e.exports = function (e, t) {
                    var n = r(this, e),
                        o = n.size;
                    return n.set(e, t), (this.size += n.size == o ? 0 : 1), this;
                };
            },
            3409: (e) => {
                e.exports = function (e) {
                    var t = -1,
                        n = Array(e.size);
                    return (
                        e.forEach(function (e, r) {
                            n[++t] = [r, e];
                        }),
                        n
                    );
                };
            },
            7142: (e, t, n) => {
                var r = n(4010)(Object, "create");
                e.exports = r;
            },
            3062: (e, t, n) => {
                var r = n(3539)(Object.keys, Object);
                e.exports = r;
            },
            7597: (e, t, n) => {
                e = n.nmd(e);
                var r = n(812),
                    o = t && !t.nodeType && t,
                    i = o && e && !e.nodeType && e,
                    s = i && i.exports === o && r.process,
                    a = (function () {
                        try {
                            var e = i && i.require && i.require("util").types;
                            return e || (s && s.binding && s.binding("util"));
                        } catch (e) {}
                    })();
                e.exports = a;
            },
            8178: (e) => {
                var t = Object.prototype.toString;
                e.exports = function (e) {
                    return t.call(e);
                };
            },
            3539: (e) => {
                e.exports = function (e, t) {
                    return function (n) {
                        return e(t(n));
                    };
                };
            },
            9905: (e, t, n) => {
                var r = n(812),
                    o = "object" == typeof self && self && self.Object === Object && self,
                    i = r || o || Function("return this")();
                e.exports = i;
            },
            8864: (e) => {
                e.exports = function (e) {
                    return this.__data__.set(e, "__lodash_hash_undefined__"), this;
                };
            },
            159: (e) => {
                e.exports = function (e) {
                    return this.__data__.has(e);
                };
            },
            8691: (e) => {
                e.exports = function (e) {
                    var t = -1,
                        n = Array(e.size);
                    return (
                        e.forEach(function (e) {
                            n[++t] = e;
                        }),
                        n
                    );
                };
            },
            6240: (e, t, n) => {
                var r = n(6795);
                e.exports = function () {
                    (this.__data__ = new r()), (this.size = 0);
                };
            },
            1318: (e) => {
                e.exports = function (e) {
                    var t = this.__data__,
                        n = t.delete(e);
                    return (this.size = t.size), n;
                };
            },
            7297: (e) => {
                e.exports = function (e) {
                    return this.__data__.get(e);
                };
            },
            7405: (e) => {
                e.exports = function (e) {
                    return this.__data__.has(e);
                };
            },
            6133: (e, t, n) => {
                var r = n(6795),
                    o = n(1803),
                    i = n(1817);
                e.exports = function (e, t) {
                    var n = this.__data__;
                    if (n instanceof r) {
                        var s = n.__data__;
                        if (!o || s.length < 199) return s.push([e, t]), (this.size = ++n.size), this;
                        n = this.__data__ = new i(s);
                    }
                    return n.set(e, t), (this.size = n.size), this;
                };
            },
            2277: (e) => {
                var t = Function.prototype.toString;
                e.exports = function (e) {
                    if (null != e) {
                        try {
                            return t.call(e);
                        } catch (e) {}
                        try {
                            return e + "";
                        } catch (e) {}
                    }
                    return "";
                };
            },
            1548: (e) => {
                e.exports = function (e, t) {
                    return e === t || (e != e && t != t);
                };
            },
            3040: (e, t, n) => {
                var r = n(4490),
                    o = n(9054),
                    i = Object.prototype,
                    s = i.hasOwnProperty,
                    a = i.propertyIsEnumerable,
                    c = r(
                        (function () {
                            return arguments;
                        })()
                    )
                        ? r
                        : function (e) {
                              return o(e) && s.call(e, "callee") && !a.call(e, "callee");
                          };
                e.exports = c;
            },
            7285: (e) => {
                var t = Array.isArray;
                e.exports = t;
            },
            4066: (e, t, n) => {
                var r = n(6950),
                    o = n(7066);
                e.exports = function (e) {
                    return null != e && o(e.length) && !r(e);
                };
            },
            9399: (e, t, n) => {
                e = n.nmd(e);
                var r = n(9905),
                    o = n(5083),
                    i = t && !t.nodeType && t,
                    s = i && e && !e.nodeType && e,
                    a = s && s.exports === i ? r.Buffer : void 0,
                    c = (a ? a.isBuffer : void 0) || o;
                e.exports = c;
            },
            624: (e, t, n) => {
                var r = n(6658);
                e.exports = function (e, t) {
                    return r(e, t);
                };
            },
            6950: (e, t, n) => {
                var r = n(9732),
                    o = n(5745);
                e.exports = function (e) {
                    if (!o(e)) return !1;
                    var t = r(e);
                    return "[object Function]" == t || "[object GeneratorFunction]" == t || "[object AsyncFunction]" == t || "[object Proxy]" == t;
                };
            },
            7066: (e) => {
                e.exports = function (e) {
                    return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991;
                };
            },
            5745: (e) => {
                e.exports = function (e) {
                    var t = typeof e;
                    return null != e && ("object" == t || "function" == t);
                };
            },
            9054: (e) => {
                e.exports = function (e) {
                    return null != e && "object" == typeof e;
                };
            },
            2739: (e, t, n) => {
                var r = n(9761),
                    o = n(7105),
                    i = n(7597),
                    s = i && i.isTypedArray,
                    a = s ? o(s) : r;
                e.exports = a;
            },
            9186: (e, t, n) => {
                var r = n(8883),
                    o = n(548),
                    i = n(4066);
                e.exports = function (e) {
                    return i(e) ? r(e) : o(e);
                };
            },
            4677: (e) => {
                e.exports = function () {
                    return [];
                };
            },
            5083: (e) => {
                e.exports = function () {
                    return !1;
                };
            },
            9775: function (e, t) {
                var n, r, o;
                "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self,
                    (r = [e]),
                    (n = function (e) {
                        "use strict";
                        if (!(globalThis.chrome && globalThis.chrome.runtime && globalThis.chrome.runtime.id)) throw new Error("This script should only be loaded in a browser extension.");
                        if (globalThis.browser && globalThis.browser.runtime && globalThis.browser.runtime.id) e.exports = globalThis.browser;
                        else {
                            const t = "The message port closed before a response was received.",
                                n = (e) => {
                                    const n = {
                                        alarms: { clear: { minArgs: 0, maxArgs: 1 }, clearAll: { minArgs: 0, maxArgs: 0 }, get: { minArgs: 0, maxArgs: 1 }, getAll: { minArgs: 0, maxArgs: 0 } },
                                        bookmarks: {
                                            create: { minArgs: 1, maxArgs: 1 },
                                            get: { minArgs: 1, maxArgs: 1 },
                                            getChildren: { minArgs: 1, maxArgs: 1 },
                                            getRecent: { minArgs: 1, maxArgs: 1 },
                                            getSubTree: { minArgs: 1, maxArgs: 1 },
                                            getTree: { minArgs: 0, maxArgs: 0 },
                                            move: { minArgs: 2, maxArgs: 2 },
                                            remove: { minArgs: 1, maxArgs: 1 },
                                            removeTree: { minArgs: 1, maxArgs: 1 },
                                            search: { minArgs: 1, maxArgs: 1 },
                                            update: { minArgs: 2, maxArgs: 2 },
                                        },
                                        browserAction: {
                                            disable: { minArgs: 0, maxArgs: 1, fallbackToNoCallback: !0 },
                                            enable: { minArgs: 0, maxArgs: 1, fallbackToNoCallback: !0 },
                                            getBadgeBackgroundColor: { minArgs: 1, maxArgs: 1 },
                                            getBadgeText: { minArgs: 1, maxArgs: 1 },
                                            getPopup: { minArgs: 1, maxArgs: 1 },
                                            getTitle: { minArgs: 1, maxArgs: 1 },
                                            openPopup: { minArgs: 0, maxArgs: 0 },
                                            setBadgeBackgroundColor: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                            setBadgeText: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                            setIcon: { minArgs: 1, maxArgs: 1 },
                                            setPopup: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                            setTitle: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                        },
                                        browsingData: {
                                            remove: { minArgs: 2, maxArgs: 2 },
                                            removeCache: { minArgs: 1, maxArgs: 1 },
                                            removeCookies: { minArgs: 1, maxArgs: 1 },
                                            removeDownloads: { minArgs: 1, maxArgs: 1 },
                                            removeFormData: { minArgs: 1, maxArgs: 1 },
                                            removeHistory: { minArgs: 1, maxArgs: 1 },
                                            removeLocalStorage: { minArgs: 1, maxArgs: 1 },
                                            removePasswords: { minArgs: 1, maxArgs: 1 },
                                            removePluginData: { minArgs: 1, maxArgs: 1 },
                                            settings: { minArgs: 0, maxArgs: 0 },
                                        },
                                        commands: { getAll: { minArgs: 0, maxArgs: 0 } },
                                        contextMenus: { remove: { minArgs: 1, maxArgs: 1 }, removeAll: { minArgs: 0, maxArgs: 0 }, update: { minArgs: 2, maxArgs: 2 } },
                                        cookies: { get: { minArgs: 1, maxArgs: 1 }, getAll: { minArgs: 1, maxArgs: 1 }, getAllCookieStores: { minArgs: 0, maxArgs: 0 }, remove: { minArgs: 1, maxArgs: 1 }, set: { minArgs: 1, maxArgs: 1 } },
                                        devtools: {
                                            inspectedWindow: { eval: { minArgs: 1, maxArgs: 2, singleCallbackArg: !1 } },
                                            panels: { create: { minArgs: 3, maxArgs: 3, singleCallbackArg: !0 }, elements: { createSidebarPane: { minArgs: 1, maxArgs: 1 } } },
                                        },
                                        downloads: {
                                            cancel: { minArgs: 1, maxArgs: 1 },
                                            download: { minArgs: 1, maxArgs: 1 },
                                            erase: { minArgs: 1, maxArgs: 1 },
                                            getFileIcon: { minArgs: 1, maxArgs: 2 },
                                            open: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                            pause: { minArgs: 1, maxArgs: 1 },
                                            removeFile: { minArgs: 1, maxArgs: 1 },
                                            resume: { minArgs: 1, maxArgs: 1 },
                                            search: { minArgs: 1, maxArgs: 1 },
                                            show: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                        },
                                        extension: { isAllowedFileSchemeAccess: { minArgs: 0, maxArgs: 0 }, isAllowedIncognitoAccess: { minArgs: 0, maxArgs: 0 } },
                                        history: {
                                            addUrl: { minArgs: 1, maxArgs: 1 },
                                            deleteAll: { minArgs: 0, maxArgs: 0 },
                                            deleteRange: { minArgs: 1, maxArgs: 1 },
                                            deleteUrl: { minArgs: 1, maxArgs: 1 },
                                            getVisits: { minArgs: 1, maxArgs: 1 },
                                            search: { minArgs: 1, maxArgs: 1 },
                                        },
                                        i18n: { detectLanguage: { minArgs: 1, maxArgs: 1 }, getAcceptLanguages: { minArgs: 0, maxArgs: 0 } },
                                        identity: { launchWebAuthFlow: { minArgs: 1, maxArgs: 1 } },
                                        idle: { queryState: { minArgs: 1, maxArgs: 1 } },
                                        management: {
                                            get: { minArgs: 1, maxArgs: 1 },
                                            getAll: { minArgs: 0, maxArgs: 0 },
                                            getSelf: { minArgs: 0, maxArgs: 0 },
                                            setEnabled: { minArgs: 2, maxArgs: 2 },
                                            uninstallSelf: { minArgs: 0, maxArgs: 1 },
                                        },
                                        notifications: {
                                            clear: { minArgs: 1, maxArgs: 1 },
                                            create: { minArgs: 1, maxArgs: 2 },
                                            getAll: { minArgs: 0, maxArgs: 0 },
                                            getPermissionLevel: { minArgs: 0, maxArgs: 0 },
                                            update: { minArgs: 2, maxArgs: 2 },
                                        },
                                        pageAction: {
                                            getPopup: { minArgs: 1, maxArgs: 1 },
                                            getTitle: { minArgs: 1, maxArgs: 1 },
                                            hide: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                            setIcon: { minArgs: 1, maxArgs: 1 },
                                            setPopup: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                            setTitle: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                            show: { minArgs: 1, maxArgs: 1, fallbackToNoCallback: !0 },
                                        },
                                        permissions: { contains: { minArgs: 1, maxArgs: 1 }, getAll: { minArgs: 0, maxArgs: 0 }, remove: { minArgs: 1, maxArgs: 1 }, request: { minArgs: 1, maxArgs: 1 } },
                                        runtime: {
                                            getBackgroundPage: { minArgs: 0, maxArgs: 0 },
                                            getPlatformInfo: { minArgs: 0, maxArgs: 0 },
                                            openOptionsPage: { minArgs: 0, maxArgs: 0 },
                                            requestUpdateCheck: { minArgs: 0, maxArgs: 0 },
                                            sendMessage: { minArgs: 1, maxArgs: 3 },
                                            sendNativeMessage: { minArgs: 2, maxArgs: 2 },
                                            setUninstallURL: { minArgs: 1, maxArgs: 1 },
                                        },
                                        sessions: { getDevices: { minArgs: 0, maxArgs: 1 }, getRecentlyClosed: { minArgs: 0, maxArgs: 1 }, restore: { minArgs: 0, maxArgs: 1 } },
                                        storage: {
                                            local: { clear: { minArgs: 0, maxArgs: 0 }, get: { minArgs: 0, maxArgs: 1 }, getBytesInUse: { minArgs: 0, maxArgs: 1 }, remove: { minArgs: 1, maxArgs: 1 }, set: { minArgs: 1, maxArgs: 1 } },
                                            managed: { get: { minArgs: 0, maxArgs: 1 }, getBytesInUse: { minArgs: 0, maxArgs: 1 } },
                                            sync: { clear: { minArgs: 0, maxArgs: 0 }, get: { minArgs: 0, maxArgs: 1 }, getBytesInUse: { minArgs: 0, maxArgs: 1 }, remove: { minArgs: 1, maxArgs: 1 }, set: { minArgs: 1, maxArgs: 1 } },
                                        },
                                        tabs: {
                                            captureVisibleTab: { minArgs: 0, maxArgs: 2 },
                                            create: { minArgs: 1, maxArgs: 1 },
                                            detectLanguage: { minArgs: 0, maxArgs: 1 },
                                            discard: { minArgs: 0, maxArgs: 1 },
                                            duplicate: { minArgs: 1, maxArgs: 1 },
                                            executeScript: { minArgs: 1, maxArgs: 2 },
                                            get: { minArgs: 1, maxArgs: 1 },
                                            getCurrent: { minArgs: 0, maxArgs: 0 },
                                            getZoom: { minArgs: 0, maxArgs: 1 },
                                            getZoomSettings: { minArgs: 0, maxArgs: 1 },
                                            goBack: { minArgs: 0, maxArgs: 1 },
                                            goForward: { minArgs: 0, maxArgs: 1 },
                                            highlight: { minArgs: 1, maxArgs: 1 },
                                            insertCSS: { minArgs: 1, maxArgs: 2 },
                                            move: { minArgs: 2, maxArgs: 2 },
                                            query: { minArgs: 1, maxArgs: 1 },
                                            reload: { minArgs: 0, maxArgs: 2 },
                                            remove: { minArgs: 1, maxArgs: 1 },
                                            removeCSS: { minArgs: 1, maxArgs: 2 },
                                            sendMessage: { minArgs: 2, maxArgs: 3 },
                                            setZoom: { minArgs: 1, maxArgs: 2 },
                                            setZoomSettings: { minArgs: 1, maxArgs: 2 },
                                            update: { minArgs: 1, maxArgs: 2 },
                                        },
                                        topSites: { get: { minArgs: 0, maxArgs: 0 } },
                                        webNavigation: { getAllFrames: { minArgs: 1, maxArgs: 1 }, getFrame: { minArgs: 1, maxArgs: 1 } },
                                        webRequest: { handlerBehaviorChanged: { minArgs: 0, maxArgs: 0 } },
                                        windows: {
                                            create: { minArgs: 0, maxArgs: 1 },
                                            get: { minArgs: 1, maxArgs: 2 },
                                            getAll: { minArgs: 0, maxArgs: 1 },
                                            getCurrent: { minArgs: 0, maxArgs: 1 },
                                            getLastFocused: { minArgs: 0, maxArgs: 1 },
                                            remove: { minArgs: 1, maxArgs: 1 },
                                            update: { minArgs: 2, maxArgs: 2 },
                                        },
                                    };
                                    if (0 === Object.keys(n).length) throw new Error("api-metadata.json has not been included in browser-polyfill");
                                    class r extends WeakMap {
                                        constructor(e, t = void 0) {
                                            super(t), (this.createItem = e);
                                        }
                                        get(e) {
                                            return this.has(e) || this.set(e, this.createItem(e)), super.get(e);
                                        }
                                    }
                                    const o = (e) => e && "object" == typeof e && "function" == typeof e.then,
                                        i = (t, n) => (...r) => {
                                            e.runtime.lastError ? t.reject(new Error(e.runtime.lastError.message)) : n.singleCallbackArg || (r.length <= 1 && !1 !== n.singleCallbackArg) ? t.resolve(r[0]) : t.resolve(r);
                                        },
                                        s = (e) => (1 == e ? "argument" : "arguments"),
                                        a = (e, t) =>
                                            function (n, ...r) {
                                                if (r.length < t.minArgs) throw new Error(`Expected at least ${t.minArgs} ${s(t.minArgs)} for ${e}(), got ${r.length}`);
                                                if (r.length > t.maxArgs) throw new Error(`Expected at most ${t.maxArgs} ${s(t.maxArgs)} for ${e}(), got ${r.length}`);
                                                return new Promise((o, s) => {
                                                    if (t.fallbackToNoCallback)
                                                        try {
                                                            n[e](...r, i({ resolve: o, reject: s }, t));
                                                        } catch (i) {
                                                            console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `, i),
                                                                n[e](...r),
                                                                (t.fallbackToNoCallback = !1),
                                                                (t.noCallback = !0),
                                                                o();
                                                        }
                                                    else t.noCallback ? (n[e](...r), o()) : n[e](...r, i({ resolve: o, reject: s }, t));
                                                });
                                            },
                                        c = (e, t, n) => new Proxy(t, { apply: (t, r, o) => n.call(r, e, ...o) });
                                    let u = Function.call.bind(Object.prototype.hasOwnProperty);
                                    const l = (e, t = {}, n = {}) => {
                                            let r = Object.create(null),
                                                o = {
                                                    has: (t, n) => n in e || n in r,
                                                    get(o, i, s) {
                                                        if (i in r) return r[i];
                                                        if (!(i in e)) return;
                                                        let d = e[i];
                                                        if ("function" == typeof d)
                                                            if ("function" == typeof t[i]) d = c(e, e[i], t[i]);
                                                            else if (u(n, i)) {
                                                                let t = a(i, n[i]);
                                                                d = c(e, e[i], t);
                                                            } else d = d.bind(e);
                                                        else if ("object" == typeof d && null !== d && (u(t, i) || u(n, i))) d = l(d, t[i], n[i]);
                                                        else {
                                                            if (!u(n, "*"))
                                                                return (
                                                                    Object.defineProperty(r, i, {
                                                                        configurable: !0,
                                                                        enumerable: !0,
                                                                        get: () => e[i],
                                                                        set(t) {
                                                                            e[i] = t;
                                                                        },
                                                                    }),
                                                                    d
                                                                );
                                                            d = l(d, t[i], n["*"]);
                                                        }
                                                        return (r[i] = d), d;
                                                    },
                                                    set: (t, n, o, i) => (n in r ? (r[n] = o) : (e[n] = o), !0),
                                                    defineProperty: (e, t, n) => Reflect.defineProperty(r, t, n),
                                                    deleteProperty: (e, t) => Reflect.deleteProperty(r, t),
                                                },
                                                i = Object.create(e);
                                            return new Proxy(i, o);
                                        },
                                        d = (e) => ({
                                            addListener(t, n, ...r) {
                                                t.addListener(e.get(n), ...r);
                                            },
                                            hasListener: (t, n) => t.hasListener(e.get(n)),
                                            removeListener(t, n) {
                                                t.removeListener(e.get(n));
                                            },
                                        }),
                                        p = new r((e) =>
                                            "function" != typeof e
                                                ? e
                                                : function (t) {
                                                      const n = l(t, {}, { getContent: { minArgs: 0, maxArgs: 0 } });
                                                      e(n);
                                                  }
                                        ),
                                        f = new r((e) =>
                                            "function" != typeof e
                                                ? e
                                                : function (t, n, r) {
                                                      let i,
                                                          s,
                                                          a = !1,
                                                          c = new Promise((e) => {
                                                              i = function (t) {
                                                                  (a = !0), e(t);
                                                              };
                                                          });
                                                      try {
                                                          s = e(t, n, i);
                                                      } catch (e) {
                                                          s = Promise.reject(e);
                                                      }
                                                      const u = !0 !== s && o(s);
                                                      if (!0 !== s && !u && !a) return !1;
                                                      const l = (e) => {
                                                          e.then(
                                                              (e) => {
                                                                  r(e);
                                                              },
                                                              (e) => {
                                                                  let t;
                                                                  (t = e && (e instanceof Error || "string" == typeof e.message) ? e.message : "An unexpected error occurred"), r({ __mozWebExtensionPolyfillReject__: !0, message: t });
                                                              }
                                                          ).catch((e) => {
                                                              console.error("Failed to send onMessage rejected reply", e);
                                                          });
                                                      };
                                                      return l(u ? s : c), !0;
                                                  }
                                        ),
                                        h = ({ reject: n, resolve: r }, o) => {
                                            e.runtime.lastError ? (e.runtime.lastError.message === t ? r() : n(new Error(e.runtime.lastError.message))) : o && o.__mozWebExtensionPolyfillReject__ ? n(new Error(o.message)) : r(o);
                                        },
                                        m = (e, t, n, ...r) => {
                                            if (r.length < t.minArgs) throw new Error(`Expected at least ${t.minArgs} ${s(t.minArgs)} for ${e}(), got ${r.length}`);
                                            if (r.length > t.maxArgs) throw new Error(`Expected at most ${t.maxArgs} ${s(t.maxArgs)} for ${e}(), got ${r.length}`);
                                            return new Promise((e, t) => {
                                                const o = h.bind(null, { resolve: e, reject: t });
                                                r.push(o), n.sendMessage(...r);
                                            });
                                        },
                                        g = {
                                            devtools: { network: { onRequestFinished: d(p) } },
                                            runtime: { onMessage: d(f), onMessageExternal: d(f), sendMessage: m.bind(null, "sendMessage", { minArgs: 1, maxArgs: 3 }) },
                                            tabs: { sendMessage: m.bind(null, "sendMessage", { minArgs: 2, maxArgs: 3 }) },
                                        },
                                        v = { clear: { minArgs: 1, maxArgs: 1 }, get: { minArgs: 1, maxArgs: 1 }, set: { minArgs: 1, maxArgs: 1 } };
                                    return (n.privacy = { network: { "*": v }, services: { "*": v }, websites: { "*": v } }), l(e, g, n);
                                };
                            e.exports = n(chrome);
                        }
                    }),
                    void 0 === (o = "function" == typeof n ? n.apply(t, r) : n) || (e.exports = o);
            },
        },
        t = {};
    function n(r) {
        var o = t[r];
        if (void 0 !== o) return o.exports;
        var i = (t[r] = { id: r, loaded: !1, exports: {} });
        return e[r].call(i.exports, i, i.exports, n), (i.loaded = !0), i.exports;
    }
    (n.n = (e) => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return n.d(t, { a: t }), t;
    }),
        (n.d = (e, t) => {
            for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
        }),
        (n.g = (function () {
            if ("object" == typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")();
            } catch (e) {
                if ("object" == typeof window) return window;
            }
        })()),
        (n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
        (n.r = (e) => {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 });
        }),
        (n.nmd = (e) => ((e.paths = []), e.children || (e.children = []), e)),
        (() => {
            "use strict";
            var e = {};
            n.r(e),
                n.d(e, {
                    BrowserClient: () => Uo,
                    SDK_VERSION: () => t,
                    SEMANTIC_ATTRIBUTE_SENTRY_OP: () => i,
                    SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN: () => s,
                    SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE: () => o,
                    SEMANTIC_ATTRIBUTE_SENTRY_SOURCE: () => r,
                    Scope: () => ge,
                    WINDOW: () => _o,
                    addBreadcrumb: () => Oe,
                    addEventProcessor: () => nn,
                    addIntegration: () => pn,
                    addTracingExtensions: () => Tn,
                    breadcrumbsIntegration: () => Di,
                    browserApiErrorsIntegration: () => Fi,
                    browserProfilingIntegration: () => Nm,
                    browserTracingIntegration: () => Qh,
                    captureConsoleIntegration: () => On,
                    captureEvent: () => Wt,
                    captureException: () => zt,
                    captureFeedback: () => Nn,
                    captureMessage: () => Ht,
                    captureSession: () => an,
                    captureUserFeedback: () => ns,
                    chromeStackLineParser: () => ni,
                    close: () => en,
                    contextLinesIntegration: () => _s,
                    continueTrace: () => hr,
                    createTransport: () => Mr,
                    createUserFeedbackEnvelope: () => $o,
                    debugIntegration: () => Or,
                    dedupeIntegration: () => Nr,
                    defaultRequestInstrumentationOptions: () => kh,
                    defaultStackLineParsers: () => pi,
                    defaultStackParser: () => fi,
                    endSession: () => on,
                    eventFromException: () => Po,
                    eventFromMessage: () => Do,
                    exceptionFromError: () => Co,
                    extraErrorDataIntegration: () => Fr,
                    feedbackAsyncIntegration: () => oh,
                    feedbackIntegration: () => ih,
                    feedbackSyncIntegration: () => ih,
                    flush: () => Zt,
                    forceLoad: () => es,
                    functionToStringIntegration: () => Ur,
                    geckoStackLineParser: () => ii,
                    getActiveSpan: () => At,
                    getClient: () => Me,
                    getCurrentHub: () => Br,
                    getCurrentScope: () => Ee,
                    getDefaultIntegrations: () => Xi,
                    getFeedback: () => kp,
                    getGlobalScope: () => Te,
                    getIsolationScope: () => Ie,
                    getReplay: () => Md,
                    getRootSpan: () => Ct,
                    getSpanDescendants: () => Tt,
                    getSpanStatusFromHttpCode: () => ft,
                    globalHandlersIntegration: () => qi,
                    httpClientIntegration: () => ds,
                    httpContextIntegration: () => Wi,
                    inboundFiltersIntegration: () => zr,
                    init: () => Qi,
                    instrumentOutgoingRequests: () => xh,
                    isInitialized: () => tn,
                    lastEventId: () => Qt,
                    lazyLoadIntegration: () => is,
                    linkedErrorsIntegration: () => Ji,
                    makeBrowserOfflineTransport: () => um,
                    makeFetchTransport: () => Xo,
                    makeMultiplexedTransport: () => Jr,
                    metrics: () => wh,
                    moduleMetadataIntegration: () => no,
                    onLoad: () => ts,
                    opera10StackLineParser: () => ui,
                    opera11StackLineParser: () => di,
                    parameterize: () => ro,
                    registerSpanErrorInstrumentation: () => En,
                    replayCanvasIntegration: () => ip,
                    replayIntegration: () => Td,
                    reportingObserverIntegration: () => cs,
                    rewriteFramesIntegration: () => uo,
                    sendFeedback: () => dp,
                    sessionTimingIntegration: () => lo,
                    setContext: () => Vt,
                    setCurrentClient: () => po,
                    setExtra: () => Gt,
                    setExtras: () => Yt,
                    setHttpStatus: () => ht,
                    setMeasurement: () => nr,
                    setTag: () => Jt,
                    setTags: () => Kt,
                    setUser: () => Xt,
                    showReportDialog: () => Zi,
                    spanToBaggageHeader: () => Dt,
                    spanToJSON: () => wt,
                    spanToTraceHeader: () => yt,
                    startBrowserTracingNavigationSpan: () => em,
                    startBrowserTracingPageLoadSpan: () => Zh,
                    startInactiveSpan: () => fr,
                    startNewTrace: () => gr,
                    startSession: () => rn,
                    startSpan: () => dr,
                    startSpanManual: () => pr,
                    thirdPartyErrorFilterIntegration: () => fo,
                    winjsStackLineParser: () => ai,
                    withActiveSpan: () => mr,
                    withIsolationScope: () => Ae,
                    withScope: () => Ce,
                    zodErrorsIntegration: () => yo,
                });
            const t = "8.20.0",
                r = "sentry.source",
                o = "sentry.sample_rate",
                i = "sentry.op",
                s = "sentry.origin",
                a = "sentry.idle_span_finish_reason",
                c = "sentry.measurement_unit",
                u = "sentry.measurement_value",
                l = "sentry.exclusive_time",
                d = Object.prototype.toString;
            function p(e) {
                switch (d.call(e)) {
                    case "[object Error]":
                    case "[object Exception]":
                    case "[object DOMException]":
                        return !0;
                    default:
                        return S(e, Error);
                }
            }
            function f(e, t) {
                return d.call(e) === `[object ${t}]`;
            }
            function h(e) {
                return f(e, "ErrorEvent");
            }
            function m(e) {
                return f(e, "DOMError");
            }
            function g(e) {
                return f(e, "String");
            }
            function v(e) {
                return "object" == typeof e && null !== e && "__sentry_template_string__" in e && "__sentry_template_values__" in e;
            }
            function y(e) {
                return null === e || v(e) || ("object" != typeof e && "function" != typeof e);
            }
            function _(e) {
                return f(e, "Object");
            }
            function b(e) {
                return "undefined" != typeof Event && S(e, Event);
            }
            function w(e) {
                return Boolean(e && e.then && "function" == typeof e.then);
            }
            function S(e, t) {
                try {
                    return e instanceof t;
                } catch (e) {
                    return !1;
                }
            }
            function k(e) {
                return !("object" != typeof e || null === e || (!e.__isVue && !e._isVue));
            }
            const x = globalThis;
            function E(e, n, r) {
                const o = r || x,
                    i = (o.__SENTRY__ = o.__SENTRY__ || {}),
                    s = (i[t] = i[t] || {});
                return s[e] || (s[e] = n());
            }
            const I = x,
                T = 80;
            function C(e, t = {}) {
                if (!e) return "<unknown>";
                try {
                    let n = e;
                    const r = 5,
                        o = [];
                    let i = 0,
                        s = 0;
                    const a = " > ",
                        c = a.length;
                    let u;
                    const l = Array.isArray(t) ? t : t.keyAttrs,
                        d = (!Array.isArray(t) && t.maxStringLength) || T;
                    for (; n && i++ < r && ((u = A(n, l)), !("html" === u || (i > 1 && s + o.length * c + u.length >= d))); ) o.push(u), (s += u.length), (n = n.parentNode);
                    return o.reverse().join(a);
                } catch (e) {
                    return "<unknown>";
                }
            }
            function A(e, t) {
                const n = e,
                    r = [];
                if (!n || !n.tagName) return "";
                if (I.HTMLElement && n instanceof HTMLElement && n.dataset) {
                    if (n.dataset.sentryComponent) return n.dataset.sentryComponent;
                    if (n.dataset.sentryElement) return n.dataset.sentryElement;
                }
                r.push(n.tagName.toLowerCase());
                const o = t && t.length ? t.filter((e) => n.getAttribute(e)).map((e) => [e, n.getAttribute(e)]) : null;
                if (o && o.length)
                    o.forEach((e) => {
                        r.push(`[${e[0]}="${e[1]}"]`);
                    });
                else {
                    n.id && r.push(`#${n.id}`);
                    const e = n.className;
                    if (e && g(e)) {
                        const t = e.split(/\s+/);
                        for (const e of t) r.push(`.${e}`);
                    }
                }
                const i = ["aria-label", "type", "name", "title", "alt"];
                for (const e of i) {
                    const t = n.getAttribute(e);
                    t && r.push(`[${e}="${t}"]`);
                }
                return r.join("");
            }
            function M() {
                try {
                    return I.document.location.href;
                } catch (e) {
                    return "";
                }
            }
            function R(e) {
                if (!I.HTMLElement) return null;
                let t = e;
                for (let e = 0; e < 5; e++) {
                    if (!t) return null;
                    if (t instanceof HTMLElement) {
                        if (t.dataset.sentryComponent) return t.dataset.sentryComponent;
                        if (t.dataset.sentryElement) return t.dataset.sentryElement;
                    }
                    t = t.parentNode;
                }
                return null;
            }
            const O = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__,
                N = ["debug", "info", "warn", "error", "log", "assert", "trace"],
                P = {};
            function D(e) {
                if (!("console" in x)) return e();
                const t = x.console,
                    n = {},
                    r = Object.keys(P);
                r.forEach((e) => {
                    const r = P[e];
                    (n[e] = t[e]), (t[e] = r);
                });
                try {
                    return e();
                } finally {
                    r.forEach((e) => {
                        t[e] = n[e];
                    });
                }
            }
            const L = (function () {
                let e = !1;
                const t = {
                    enable: () => {
                        e = !0;
                    },
                    disable: () => {
                        e = !1;
                    },
                    isEnabled: () => e,
                };
                return (
                    O
                        ? N.forEach((n) => {
                              t[n] = (...t) => {
                                  e &&
                                      D(() => {
                                          x.console[n](`Sentry Logger [${n}]:`, ...t);
                                      });
                              };
                          })
                        : N.forEach((e) => {
                              t[e] = () => {};
                          }),
                    t
                );
            })();
            function F(e, t = 0) {
                return "string" != typeof e || 0 === t || e.length <= t ? e : `${e.slice(0, t)}...`;
            }
            function j(e, t) {
                let n = e;
                const r = n.length;
                if (r <= 150) return n;
                t > r && (t = r);
                let o = Math.max(t - 60, 0);
                o < 5 && (o = 0);
                let i = Math.min(o + 140, r);
                return i > r - 5 && (i = r), i === r && (o = Math.max(i - 140, 0)), (n = n.slice(o, i)), o > 0 && (n = `'{snip} ${n}`), i < r && (n += " {snip}"), n;
            }
            function $(e, t) {
                if (!Array.isArray(e)) return "";
                const n = [];
                for (let t = 0; t < e.length; t++) {
                    const r = e[t];
                    try {
                        k(r) ? n.push("[VueViewModel]") : n.push(String(r));
                    } catch (e) {
                        n.push("[value cannot be serialized]");
                    }
                }
                return n.join(t);
            }
            function U(e, t, n = !1) {
                return !!g(e) && (f(t, "RegExp") ? t.test(e) : !!g(t) && (n ? e === t : e.includes(t)));
            }
            function B(e, t = [], n = !1) {
                return t.some((t) => U(e, t, n));
            }
            function q(e, t, n) {
                if (!(t in e)) return;
                const r = e[t],
                    o = n(r);
                "function" == typeof o && H(o, r), (e[t] = o);
            }
            function z(e, t, n) {
                try {
                    Object.defineProperty(e, t, { value: n, writable: !0, configurable: !0 });
                } catch (n) {
                    O && L.log(`Failed to add non-enumerable property "${t}" to object`, e);
                }
            }
            function H(e, t) {
                try {
                    const n = t.prototype || {};
                    (e.prototype = t.prototype = n), z(e, "__sentry_original__", t);
                } catch (e) {}
            }
            function W(e) {
                return e.__sentry_original__;
            }
            function V(e) {
                if (p(e)) return { message: e.message, name: e.name, stack: e.stack, ...G(e) };
                if (b(e)) {
                    const t = { type: e.type, target: Y(e.target), currentTarget: Y(e.currentTarget), ...G(e) };
                    return "undefined" != typeof CustomEvent && S(e, CustomEvent) && (t.detail = e.detail), t;
                }
                return e;
            }
            function Y(e) {
                try {
                    return (t = e), "undefined" != typeof Element && S(t, Element) ? C(e) : Object.prototype.toString.call(e);
                } catch (e) {
                    return "<unknown>";
                }
                var t;
            }
            function G(e) {
                if ("object" == typeof e && null !== e) {
                    const t = {};
                    for (const n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                    return t;
                }
                return {};
            }
            function K(e) {
                return J(e, new Map());
            }
            function J(e, t) {
                if (
                    (function (e) {
                        if (!_(e)) return !1;
                        try {
                            const t = Object.getPrototypeOf(e).constructor.name;
                            return !t || "Object" === t;
                        } catch (e) {
                            return !0;
                        }
                    })(e)
                ) {
                    const n = t.get(e);
                    if (void 0 !== n) return n;
                    const r = {};
                    t.set(e, r);
                    for (const n of Object.keys(e)) void 0 !== e[n] && (r[n] = J(e[n], t));
                    return r;
                }
                if (Array.isArray(e)) {
                    const n = t.get(e);
                    if (void 0 !== n) return n;
                    const r = [];
                    return (
                        t.set(e, r),
                        e.forEach((e) => {
                            r.push(J(e, t));
                        }),
                        r
                    );
                }
                return e;
            }
            function X() {
                const e = x,
                    t = e.crypto || e.msCrypto;
                let n = () => 16 * Math.random();
                try {
                    if (t && t.randomUUID) return t.randomUUID().replace(/-/g, "");
                    t &&
                        t.getRandomValues &&
                        (n = () => {
                            const e = new Uint8Array(1);
                            return t.getRandomValues(e), e[0];
                        });
                } catch (e) {}
                return ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, (e) => (e ^ ((15 & n()) >> (e / 4))).toString(16));
            }
            function Q(e) {
                return e.exception && e.exception.values ? e.exception.values[0] : void 0;
            }
            function Z(e) {
                const { message: t, event_id: n } = e;
                if (t) return t;
                const r = Q(e);
                return r ? (r.type && r.value ? `${r.type}: ${r.value}` : r.type || r.value || n || "<unknown>") : n || "<unknown>";
            }
            function ee(e, t, n) {
                const r = (e.exception = e.exception || {}),
                    o = (r.values = r.values || []),
                    i = (o[0] = o[0] || {});
                i.value || (i.value = t || ""), i.type || (i.type = n || "Error");
            }
            function te(e, t) {
                const n = Q(e);
                if (!n) return;
                const r = n.mechanism;
                if (((n.mechanism = { type: "generic", handled: !0, ...r, ...t }), t && "data" in t)) {
                    const e = { ...(r && r.data), ...t.data };
                    n.mechanism.data = e;
                }
            }
            function ne(e) {
                if (e && e.__sentry_captured__) return !0;
                try {
                    z(e, "__sentry_captured__", !0);
                } catch (e) {}
                return !1;
            }
            function re(e) {
                return Array.isArray(e) ? e : [e];
            }
            function oe() {
                return { traceId: X(), spanId: X().substring(16) };
            }
            const ie = 1e3;
            function se() {
                return Date.now() / ie;
            }
            const ae = (function () {
                const { performance: e } = x;
                if (!e || !e.now) return se;
                const t = Date.now() - e.now(),
                    n = null == e.timeOrigin ? t : e.timeOrigin;
                return () => (n + e.now()) / ie;
            })();
            let ce;
            const ue = (() => {
                const { performance: e } = x;
                if (!e || !e.now) return void (ce = "none");
                const t = 36e5,
                    n = e.now(),
                    r = Date.now(),
                    o = e.timeOrigin ? Math.abs(e.timeOrigin + n - r) : t,
                    i = o < t,
                    s = e.timing && e.timing.navigationStart,
                    a = "number" == typeof s ? Math.abs(s + n - r) : t;
                return i || a < t ? (o <= a ? ((ce = "timeOrigin"), e.timeOrigin) : ((ce = "navigationStart"), s)) : ((ce = "dateNow"), r);
            })();
            function le(e) {
                const t = ae(),
                    n = {
                        sid: X(),
                        init: !0,
                        timestamp: t,
                        started: t,
                        duration: 0,
                        status: "ok",
                        errors: 0,
                        ignoreDuration: !1,
                        toJSON: () =>
                            (function (e) {
                                return K({
                                    sid: `${e.sid}`,
                                    init: e.init,
                                    started: new Date(1e3 * e.started).toISOString(),
                                    timestamp: new Date(1e3 * e.timestamp).toISOString(),
                                    status: e.status,
                                    errors: e.errors,
                                    did: "number" == typeof e.did || "string" == typeof e.did ? `${e.did}` : void 0,
                                    duration: e.duration,
                                    abnormal_mechanism: e.abnormal_mechanism,
                                    attrs: { release: e.release, environment: e.environment, ip_address: e.ipAddress, user_agent: e.userAgent },
                                });
                            })(n),
                    };
                return e && de(n, e), n;
            }
            function de(e, t = {}) {
                if (
                    (t.user && (!e.ipAddress && t.user.ip_address && (e.ipAddress = t.user.ip_address), e.did || t.did || (e.did = t.user.id || t.user.email || t.user.username)),
                    (e.timestamp = t.timestamp || ae()),
                    t.abnormal_mechanism && (e.abnormal_mechanism = t.abnormal_mechanism),
                    t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration),
                    t.sid && (e.sid = 32 === t.sid.length ? t.sid : X()),
                    void 0 !== t.init && (e.init = t.init),
                    !e.did && t.did && (e.did = `${t.did}`),
                    "number" == typeof t.started && (e.started = t.started),
                    e.ignoreDuration)
                )
                    e.duration = void 0;
                else if ("number" == typeof t.duration) e.duration = t.duration;
                else {
                    const t = e.timestamp - e.started;
                    e.duration = t >= 0 ? t : 0;
                }
                t.release && (e.release = t.release),
                    t.environment && (e.environment = t.environment),
                    !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress),
                    !e.userAgent && t.userAgent && (e.userAgent = t.userAgent),
                    "number" == typeof t.errors && (e.errors = t.errors),
                    t.status && (e.status = t.status);
            }
            const pe = "_sentrySpan";
            function fe(e, t) {
                t ? z(e, pe, t) : delete e[pe];
            }
            function he(e) {
                return e[pe];
            }
            class me {
                constructor() {
                    (this._notifyingListeners = !1),
                        (this._scopeListeners = []),
                        (this._eventProcessors = []),
                        (this._breadcrumbs = []),
                        (this._attachments = []),
                        (this._user = {}),
                        (this._tags = {}),
                        (this._extra = {}),
                        (this._contexts = {}),
                        (this._sdkProcessingMetadata = {}),
                        (this._propagationContext = oe());
                }
                clone() {
                    const e = new me();
                    return (
                        (e._breadcrumbs = [...this._breadcrumbs]),
                        (e._tags = { ...this._tags }),
                        (e._extra = { ...this._extra }),
                        (e._contexts = { ...this._contexts }),
                        (e._user = this._user),
                        (e._level = this._level),
                        (e._session = this._session),
                        (e._transactionName = this._transactionName),
                        (e._fingerprint = this._fingerprint),
                        (e._eventProcessors = [...this._eventProcessors]),
                        (e._requestSession = this._requestSession),
                        (e._attachments = [...this._attachments]),
                        (e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
                        (e._propagationContext = { ...this._propagationContext }),
                        (e._client = this._client),
                        (e._lastEventId = this._lastEventId),
                        fe(e, he(this)),
                        e
                    );
                }
                setClient(e) {
                    this._client = e;
                }
                setLastEventId(e) {
                    this._lastEventId = e;
                }
                getClient() {
                    return this._client;
                }
                lastEventId() {
                    return this._lastEventId;
                }
                addScopeListener(e) {
                    this._scopeListeners.push(e);
                }
                addEventProcessor(e) {
                    return this._eventProcessors.push(e), this;
                }
                setUser(e) {
                    return (this._user = e || { email: void 0, id: void 0, ip_address: void 0, username: void 0 }), this._session && de(this._session, { user: e }), this._notifyScopeListeners(), this;
                }
                getUser() {
                    return this._user;
                }
                getRequestSession() {
                    return this._requestSession;
                }
                setRequestSession(e) {
                    return (this._requestSession = e), this;
                }
                setTags(e) {
                    return (this._tags = { ...this._tags, ...e }), this._notifyScopeListeners(), this;
                }
                setTag(e, t) {
                    return (this._tags = { ...this._tags, [e]: t }), this._notifyScopeListeners(), this;
                }
                setExtras(e) {
                    return (this._extra = { ...this._extra, ...e }), this._notifyScopeListeners(), this;
                }
                setExtra(e, t) {
                    return (this._extra = { ...this._extra, [e]: t }), this._notifyScopeListeners(), this;
                }
                setFingerprint(e) {
                    return (this._fingerprint = e), this._notifyScopeListeners(), this;
                }
                setLevel(e) {
                    return (this._level = e), this._notifyScopeListeners(), this;
                }
                setTransactionName(e) {
                    return (this._transactionName = e), this._notifyScopeListeners(), this;
                }
                setContext(e, t) {
                    return null === t ? delete this._contexts[e] : (this._contexts[e] = t), this._notifyScopeListeners(), this;
                }
                setSession(e) {
                    return e ? (this._session = e) : delete this._session, this._notifyScopeListeners(), this;
                }
                getSession() {
                    return this._session;
                }
                update(e) {
                    if (!e) return this;
                    const t = "function" == typeof e ? e(this) : e,
                        [n, r] = t instanceof ge ? [t.getScopeData(), t.getRequestSession()] : _(t) ? [e, e.requestSession] : [],
                        { tags: o, extra: i, user: s, contexts: a, level: c, fingerprint: u = [], propagationContext: l } = n || {};
                    return (
                        (this._tags = { ...this._tags, ...o }),
                        (this._extra = { ...this._extra, ...i }),
                        (this._contexts = { ...this._contexts, ...a }),
                        s && Object.keys(s).length && (this._user = s),
                        c && (this._level = c),
                        u.length && (this._fingerprint = u),
                        l && (this._propagationContext = l),
                        r && (this._requestSession = r),
                        this
                    );
                }
                clear() {
                    return (
                        (this._breadcrumbs = []),
                        (this._tags = {}),
                        (this._extra = {}),
                        (this._user = {}),
                        (this._contexts = {}),
                        (this._level = void 0),
                        (this._transactionName = void 0),
                        (this._fingerprint = void 0),
                        (this._requestSession = void 0),
                        (this._session = void 0),
                        fe(this, void 0),
                        (this._attachments = []),
                        (this._propagationContext = oe()),
                        this._notifyScopeListeners(),
                        this
                    );
                }
                addBreadcrumb(e, t) {
                    const n = "number" == typeof t ? t : 100;
                    if (n <= 0) return this;
                    const r = { timestamp: se(), ...e },
                        o = this._breadcrumbs;
                    return o.push(r), (this._breadcrumbs = o.length > n ? o.slice(-n) : o), this._notifyScopeListeners(), this;
                }
                getLastBreadcrumb() {
                    return this._breadcrumbs[this._breadcrumbs.length - 1];
                }
                clearBreadcrumbs() {
                    return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
                }
                addAttachment(e) {
                    return this._attachments.push(e), this;
                }
                clearAttachments() {
                    return (this._attachments = []), this;
                }
                getScopeData() {
                    return {
                        breadcrumbs: this._breadcrumbs,
                        attachments: this._attachments,
                        contexts: this._contexts,
                        tags: this._tags,
                        extra: this._extra,
                        user: this._user,
                        level: this._level,
                        fingerprint: this._fingerprint || [],
                        eventProcessors: this._eventProcessors,
                        propagationContext: this._propagationContext,
                        sdkProcessingMetadata: this._sdkProcessingMetadata,
                        transactionName: this._transactionName,
                        span: he(this),
                    };
                }
                setSDKProcessingMetadata(e) {
                    return (this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...e }), this;
                }
                setPropagationContext(e) {
                    return (this._propagationContext = e), this;
                }
                getPropagationContext() {
                    return this._propagationContext;
                }
                captureException(e, t) {
                    const n = t && t.event_id ? t.event_id : X();
                    if (!this._client) return L.warn("No client configured on scope - will not capture exception!"), n;
                    const r = new Error("Sentry syntheticException");
                    return this._client.captureException(e, { originalException: e, syntheticException: r, ...t, event_id: n }, this), n;
                }
                captureMessage(e, t, n) {
                    const r = n && n.event_id ? n.event_id : X();
                    if (!this._client) return L.warn("No client configured on scope - will not capture message!"), r;
                    const o = new Error(e);
                    return this._client.captureMessage(e, t, { originalException: e, syntheticException: o, ...n, event_id: r }, this), r;
                }
                captureEvent(e, t) {
                    const n = t && t.event_id ? t.event_id : X();
                    return this._client ? (this._client.captureEvent(e, { ...t, event_id: n }, this), n) : (L.warn("No client configured on scope - will not capture event!"), n);
                }
                _notifyScopeListeners() {
                    this._notifyingListeners ||
                        ((this._notifyingListeners = !0),
                        this._scopeListeners.forEach((e) => {
                            e(this);
                        }),
                        (this._notifyingListeners = !1));
                }
            }
            const ge = me;
            function ve() {
                return ye(x), x;
            }
            function ye(e) {
                const n = (e.__SENTRY__ = e.__SENTRY__ || {});
                return (n.version = n.version || t), (n[t] = n[t] || {});
            }
            class _e {
                constructor(e, t) {
                    let n, r;
                    (n = e || new ge()), (r = t || new ge()), (this._stack = [{ scope: n }]), (this._isolationScope = r);
                }
                withScope(e) {
                    const t = this._pushScope();
                    let n;
                    try {
                        n = e(t);
                    } catch (e) {
                        throw (this._popScope(), e);
                    }
                    return w(n)
                        ? n.then(
                              (e) => (this._popScope(), e),
                              (e) => {
                                  throw (this._popScope(), e);
                              }
                          )
                        : (this._popScope(), n);
                }
                getClient() {
                    return this.getStackTop().client;
                }
                getScope() {
                    return this.getStackTop().scope;
                }
                getIsolationScope() {
                    return this._isolationScope;
                }
                getStackTop() {
                    return this._stack[this._stack.length - 1];
                }
                _pushScope() {
                    const e = this.getScope().clone();
                    return this._stack.push({ client: this.getClient(), scope: e }), e;
                }
                _popScope() {
                    return !(this._stack.length <= 1) && !!this._stack.pop();
                }
            }
            function be() {
                const e = ye(ve());
                return (e.stack =
                    e.stack ||
                    new _e(
                        E("defaultCurrentScope", () => new ge()),
                        E("defaultIsolationScope", () => new ge())
                    ));
            }
            function we(e) {
                return be().withScope(e);
            }
            function Se(e, t) {
                const n = be();
                return n.withScope(() => ((n.getStackTop().scope = e), t(e)));
            }
            function ke(e) {
                return be().withScope(() => e(be().getIsolationScope()));
            }
            function xe(e) {
                const t = ye(e);
                return t.acs ? t.acs : { withIsolationScope: ke, withScope: we, withSetScope: Se, withSetIsolationScope: (e, t) => ke(t), getCurrentScope: () => be().getScope(), getIsolationScope: () => be().getIsolationScope() };
            }
            function Ee() {
                return xe(ve()).getCurrentScope();
            }
            function Ie() {
                return xe(ve()).getIsolationScope();
            }
            function Te() {
                return E("globalScope", () => new ge());
            }
            function Ce(...e) {
                const t = xe(ve());
                if (2 === e.length) {
                    const [n, r] = e;
                    return n ? t.withSetScope(n, r) : t.withScope(r);
                }
                return t.withScope(e[0]);
            }
            function Ae(...e) {
                const t = xe(ve());
                if (2 === e.length) {
                    const [n, r] = e;
                    return n ? t.withSetIsolationScope(n, r) : t.withIsolationScope(r);
                }
                return t.withIsolationScope(e[0]);
            }
            function Me() {
                return Ee().getClient();
            }
            const Re = 100;
            function Oe(e, t) {
                const n = Me(),
                    r = Ie();
                if (!n) return;
                const { beforeBreadcrumb: o = null, maxBreadcrumbs: i = Re } = n.getOptions();
                if (i <= 0) return;
                const s = { timestamp: se(), ...e },
                    a = o ? D(() => o(s, t)) : s;
                null !== a && (n.emit && n.emit("beforeAddBreadcrumb", a, t), r.addBreadcrumb(a, i));
            }
            const Ne = "production",
                Pe = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
            const De = 50,
                Le = "?",
                Fe = /\(error: (.*)\)/,
                je = /captureMessage|captureException/;
            function $e(...e) {
                const t = e.sort((e, t) => e[0] - t[0]).map((e) => e[1]);
                return (e, n = 0, r = 0) => {
                    const o = [],
                        i = e.split("\n");
                    for (let e = n; e < i.length; e++) {
                        const n = i[e];
                        if (n.length > 1024) continue;
                        const s = Fe.test(n) ? n.replace(Fe, "$1") : n;
                        if (!s.match(/\S*Error: /)) {
                            for (const e of t) {
                                const t = e(s);
                                if (t) {
                                    o.push(t);
                                    break;
                                }
                            }
                            if (o.length >= De + r) break;
                        }
                    }
                    return (function (e) {
                        if (!e.length) return [];
                        const t = Array.from(e);
                        /sentryWrapped/.test(Ue(t).function || "") && t.pop();
                        t.reverse(), je.test(Ue(t).function || "") && (t.pop(), je.test(Ue(t).function || "") && t.pop());
                        return t.slice(0, De).map((e) => ({ ...e, filename: e.filename || Ue(t).filename, function: e.function || Le }));
                    })(o.slice(r));
                };
            }
            function Ue(e) {
                return e[e.length - 1] || {};
            }
            const Be = "<anonymous>";
            function qe(e) {
                try {
                    return (e && "function" == typeof e && e.name) || Be;
                } catch (e) {
                    return Be;
                }
            }
            function ze(e) {
                const t = e.exception;
                if (t) {
                    const e = [];
                    try {
                        return (
                            t.values.forEach((t) => {
                                t.stacktrace.frames && e.push(...t.stacktrace.frames);
                            }),
                            e
                        );
                    } catch (e) {
                        return;
                    }
                }
            }
            function He(e, t = 100, n = 1 / 0) {
                try {
                    return Ve("", e, t, n);
                } catch (e) {
                    return { ERROR: `**non-serializable** (${e})` };
                }
            }
            function We(e, t = 3, n = 102400) {
                const r = He(e, t);
                return (
                    (o = r),
                    (function (e) {
                        return ~-encodeURI(e).split(/%..|./).length;
                    })(JSON.stringify(o)) > n
                        ? We(e, t - 1, n)
                        : r
                );
                var o;
            }
            function Ve(
                e,
                t,
                n = 1 / 0,
                r = 1 / 0,
                o = (function () {
                    const e = "function" == typeof WeakSet,
                        t = e ? new WeakSet() : [];
                    return [
                        function (n) {
                            if (e) return !!t.has(n) || (t.add(n), !1);
                            for (let e = 0; e < t.length; e++) if (t[e] === n) return !0;
                            return t.push(n), !1;
                        },
                        function (n) {
                            if (e) t.delete(n);
                            else
                                for (let e = 0; e < t.length; e++)
                                    if (t[e] === n) {
                                        t.splice(e, 1);
                                        break;
                                    }
                        },
                    ];
                })()
            ) {
                const [i, s] = o;
                if (null == t || (["number", "boolean", "string"].includes(typeof t) && !Number.isNaN(t))) return t;
                const a = (function (e, t) {
                    try {
                        if ("domain" === e && t && "object" == typeof t && t._events) return "[Domain]";
                        if ("domainEmitter" === e) return "[DomainEmitter]";
                        if ("undefined" != typeof global && t === global) return "[Global]";
                        if ("undefined" != typeof window && t === window) return "[Window]";
                        if ("undefined" != typeof document && t === document) return "[Document]";
                        if (k(t)) return "[VueViewModel]";
                        if (_((n = t)) && "nativeEvent" in n && "preventDefault" in n && "stopPropagation" in n) return "[SyntheticEvent]";
                        if ("number" == typeof t && t != t) return "[NaN]";
                        if ("function" == typeof t) return `[Function: ${qe(t)}]`;
                        if ("symbol" == typeof t) return `[${String(t)}]`;
                        if ("bigint" == typeof t) return `[BigInt: ${String(t)}]`;
                        const r = (function (e) {
                            const t = Object.getPrototypeOf(e);
                            return t ? t.constructor.name : "null prototype";
                        })(t);
                        return /^HTML(\w*)Element$/.test(r) ? `[HTMLElement: ${r}]` : `[object ${r}]`;
                    } catch (e) {
                        return `**non-serializable** (${e})`;
                    }
                    var n;
                })(e, t);
                if (!a.startsWith("[object ")) return a;
                if (t.__sentry_skip_normalization__) return t;
                const c = "number" == typeof t.__sentry_override_normalization_depth__ ? t.__sentry_override_normalization_depth__ : n;
                if (0 === c) return a.replace("object ", "");
                if (i(t)) return "[Circular ~]";
                const u = t;
                if (u && "function" == typeof u.toJSON)
                    try {
                        return Ve("", u.toJSON(), c - 1, r, o);
                    } catch (e) {}
                const l = Array.isArray(t) ? [] : {};
                let d = 0;
                const p = V(t);
                for (const e in p) {
                    if (!Object.prototype.hasOwnProperty.call(p, e)) continue;
                    if (d >= r) {
                        l[e] = "[MaxProperties ~]";
                        break;
                    }
                    const t = p[e];
                    (l[e] = Ve(e, t, c - 1, r, o)), d++;
                }
                return s(t), l;
            }
            var Ye;
            function Ge(e) {
                return new Je((t) => {
                    t(e);
                });
            }
            function Ke(e) {
                return new Je((t, n) => {
                    n(e);
                });
            }
            !(function (e) {
                e[(e.PENDING = 0)] = "PENDING";
                e[(e.RESOLVED = 1)] = "RESOLVED";
                e[(e.REJECTED = 2)] = "REJECTED";
            })(Ye || (Ye = {}));
            class Je {
                constructor(e) {
                    Je.prototype.__init.call(this), Je.prototype.__init2.call(this), Je.prototype.__init3.call(this), Je.prototype.__init4.call(this), (this._state = Ye.PENDING), (this._handlers = []);
                    try {
                        e(this._resolve, this._reject);
                    } catch (e) {
                        this._reject(e);
                    }
                }
                then(e, t) {
                    return new Je((n, r) => {
                        this._handlers.push([
                            !1,
                            (t) => {
                                if (e)
                                    try {
                                        n(e(t));
                                    } catch (e) {
                                        r(e);
                                    }
                                else n(t);
                            },
                            (e) => {
                                if (t)
                                    try {
                                        n(t(e));
                                    } catch (e) {
                                        r(e);
                                    }
                                else r(e);
                            },
                        ]),
                            this._executeHandlers();
                    });
                }
                catch(e) {
                    return this.then((e) => e, e);
                }
                finally(e) {
                    return new Je((t, n) => {
                        let r, o;
                        return this.then(
                            (t) => {
                                (o = !1), (r = t), e && e();
                            },
                            (t) => {
                                (o = !0), (r = t), e && e();
                            }
                        ).then(() => {
                            o ? n(r) : t(r);
                        });
                    });
                }
                __init() {
                    this._resolve = (e) => {
                        this._setResult(Ye.RESOLVED, e);
                    };
                }
                __init2() {
                    this._reject = (e) => {
                        this._setResult(Ye.REJECTED, e);
                    };
                }
                __init3() {
                    this._setResult = (e, t) => {
                        this._state === Ye.PENDING && (w(t) ? t.then(this._resolve, this._reject) : ((this._state = e), (this._value = t), this._executeHandlers()));
                    };
                }
                __init4() {
                    this._executeHandlers = () => {
                        if (this._state === Ye.PENDING) return;
                        const e = this._handlers.slice();
                        (this._handlers = []),
                            e.forEach((e) => {
                                e[0] || (this._state === Ye.RESOLVED && e[1](this._value), this._state === Ye.REJECTED && e[2](this._value), (e[0] = !0));
                            });
                    };
                }
            }
            function Xe(e, t, n, r = 0) {
                return new Je((o, i) => {
                    const s = e[r];
                    if (null === t || "function" != typeof s) o(t);
                    else {
                        const a = s({ ...t }, n);
                        Pe && s.id && null === a && L.log(`Event processor "${s.id}" dropped event`),
                            w(a)
                                ? a.then((t) => Xe(e, t, n, r + 1).then(o)).then(null, i)
                                : Xe(e, a, n, r + 1)
                                      .then(o)
                                      .then(null, i);
                    }
                });
            }
            const Qe = "baggage",
                Ze = "sentry-",
                et = /^sentry-/,
                tt = 8192;
            function nt(e) {
                const t = (function (e) {
                    if (!e || (!g(e) && !Array.isArray(e))) return;
                    if (Array.isArray(e))
                        return e.reduce((e, t) => {
                            const n = ot(t);
                            return (
                                Object.entries(n).forEach(([t, n]) => {
                                    e[t] = n;
                                }),
                                e
                            );
                        }, {});
                    return ot(e);
                })(e);
                if (!t) return;
                const n = Object.entries(t).reduce((e, [t, n]) => {
                    if (t.match(et)) {
                        e[t.slice(Ze.length)] = n;
                    }
                    return e;
                }, {});
                return Object.keys(n).length > 0 ? n : void 0;
            }
            function rt(e) {
                if (!e) return;
                return (function (e) {
                    if (0 === Object.keys(e).length) return;
                    return Object.entries(e).reduce((e, [t, n], r) => {
                        const o = `${encodeURIComponent(t)}=${encodeURIComponent(n)}`,
                            i = 0 === r ? o : `${e},${o}`;
                        return i.length > tt ? (O && L.warn(`Not adding key: ${t} with val: ${n} to baggage header due to exceeding baggage size limits.`), e) : i;
                    }, "");
                })(Object.entries(e).reduce((e, [t, n]) => (n && (e[`${Ze}${t}`] = n), e), {}));
            }
            function ot(e) {
                return e
                    .split(",")
                    .map((e) => e.split("=").map((e) => decodeURIComponent(e.trim())))
                    .reduce((e, [t, n]) => (t && n && (e[t] = n), e), {});
            }
            const it = new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");
            function st(e, t) {
                const n = (function (e) {
                        if (!e) return;
                        const t = e.match(it);
                        if (!t) return;
                        let n;
                        return "1" === t[3] ? (n = !0) : "0" === t[3] && (n = !1), { traceId: t[1], parentSampled: n, parentSpanId: t[2] };
                    })(e),
                    r = nt(t),
                    { traceId: o, parentSpanId: i, parentSampled: s } = n || {};
                return n ? { traceId: o || X(), parentSpanId: i || X().substring(16), spanId: X().substring(16), sampled: s, dsc: r || {} } : { traceId: o || X(), spanId: X().substring(16) };
            }
            function at(e = X(), t = X().substring(16), n) {
                let r = "";
                return void 0 !== n && (r = n ? "-1" : "-0"), `${e}-${t}${r}`;
            }
            const ct = "_sentryMetrics";
            function ut(e) {
                const t = e[ct];
                if (!t) return;
                const n = {};
                for (const [, [e, r]] of t) {
                    (n[e] || (n[e] = [])).push(K(r));
                }
                return n;
            }
            const lt = 0,
                dt = 1,
                pt = 2;
            function ft(e) {
                if (e < 400 && e >= 100) return { code: dt };
                if (e >= 400 && e < 500)
                    switch (e) {
                        case 401:
                            return { code: pt, message: "unauthenticated" };
                        case 403:
                            return { code: pt, message: "permission_denied" };
                        case 404:
                            return { code: pt, message: "not_found" };
                        case 409:
                            return { code: pt, message: "already_exists" };
                        case 413:
                            return { code: pt, message: "failed_precondition" };
                        case 429:
                            return { code: pt, message: "resource_exhausted" };
                        case 499:
                            return { code: pt, message: "cancelled" };
                        default:
                            return { code: pt, message: "invalid_argument" };
                    }
                if (e >= 500 && e < 600)
                    switch (e) {
                        case 501:
                            return { code: pt, message: "unimplemented" };
                        case 503:
                            return { code: pt, message: "unavailable" };
                        case 504:
                            return { code: pt, message: "deadline_exceeded" };
                        default:
                            return { code: pt, message: "internal_error" };
                    }
                return { code: pt, message: "unknown_error" };
            }
            function ht(e, t) {
                e.setAttribute("http.response.status_code", t);
                const n = ft(t);
                "unknown_error" !== n.message && e.setStatus(n);
            }
            const mt = 1;
            function gt(e) {
                const { spanId: t, traceId: n } = e.spanContext(),
                    { data: r, op: o, parent_span_id: i, status: s, origin: a } = wt(e);
                return K({ parent_span_id: i, span_id: t, trace_id: n, data: r, op: o, status: s, origin: a });
            }
            function vt(e) {
                const { spanId: t, traceId: n } = e.spanContext(),
                    { parent_span_id: r } = wt(e);
                return K({ parent_span_id: r, span_id: t, trace_id: n });
            }
            function yt(e) {
                const { traceId: t, spanId: n } = e.spanContext();
                return at(t, n, St(e));
            }
            function _t(e) {
                return "number" == typeof e ? bt(e) : Array.isArray(e) ? e[0] + e[1] / 1e9 : e instanceof Date ? bt(e.getTime()) : ae();
            }
            function bt(e) {
                return e > 9999999999 ? e / 1e3 : e;
            }
            function wt(e) {
                if (
                    (function (e) {
                        return "function" == typeof e.getSpanJSON;
                    })(e)
                )
                    return e.getSpanJSON();
                try {
                    const { spanId: t, traceId: n } = e.spanContext();
                    if (
                        (function (e) {
                            const t = e;
                            return !!(t.attributes && t.startTime && t.name && t.endTime && t.status);
                        })(e)
                    ) {
                        const { attributes: r, startTime: o, name: a, endTime: c, parentSpanId: u, status: l } = e;
                        return K({ span_id: t, trace_id: n, data: r, description: a, parent_span_id: u, start_timestamp: _t(o), timestamp: _t(c) || void 0, status: kt(l), op: r[i], origin: r[s], _metrics_summary: ut(e) });
                    }
                    return { span_id: t, trace_id: n };
                } catch (e) {
                    return {};
                }
            }
            function St(e) {
                const { traceFlags: t } = e.spanContext();
                return t === mt;
            }
            function kt(e) {
                if (e && e.code !== lt) return e.code === dt ? "ok" : e.message || "unknown_error";
            }
            const xt = "_sentryChildSpans",
                Et = "_sentryRootSpan";
            function It(e, t) {
                const n = e[Et] || e;
                z(t, Et, n), e[xt] ? e[xt].add(t) : z(e, xt, new Set([t]));
            }
            function Tt(e) {
                const t = new Set();
                return (
                    (function e(n) {
                        if (!t.has(n) && St(n)) {
                            t.add(n);
                            const r = n[xt] ? Array.from(n[xt]) : [];
                            for (const t of r) e(t);
                        }
                    })(e),
                    Array.from(t)
                );
            }
            function Ct(e) {
                return e[Et] || e;
            }
            function At() {
                const e = xe(ve());
                return e.getActiveSpan ? e.getActiveSpan() : he(Ee());
            }
            function Mt(e, t, n, r, o, i) {
                const s = At();
                s &&
                    (function (e, t, n, r, o, i, s) {
                        const a = e[ct] || (e[ct] = new Map()),
                            c = `${t}:${n}@${o}`,
                            u = a.get(s);
                        if (u) {
                            const [, e] = u;
                            a.set(s, [c, { min: Math.min(e.min, r), max: Math.max(e.max, r), count: (e.count += 1), sum: (e.sum += r), tags: e.tags }]);
                        } else a.set(s, [c, { min: r, max: r, count: 1, sum: r, tags: i }]);
                    })(s, e, t, n, r, o, i);
            }
            const Rt = "_frozenDsc";
            function Ot(e, t) {
                z(e, Rt, t);
            }
            function Nt(e, t) {
                const n = t.getOptions(),
                    { publicKey: r } = t.getDsn() || {},
                    o = K({ environment: n.environment || Ne, release: n.release, public_key: r, trace_id: e });
                return t.emit("createDsc", o), o;
            }
            function Pt(e) {
                const t = Me();
                if (!t) return {};
                const n = Nt(wt(e).trace_id || "", t),
                    i = Ct(e),
                    s = i[Rt];
                if (s) return s;
                const a = i.spanContext().traceState,
                    c = a && a.get("sentry.dsc"),
                    u = c && nt(c);
                if (u) return u;
                const l = wt(i),
                    d = l.data || {},
                    p = d[o];
                null != p && (n.sample_rate = `${p}`);
                const f = d[r],
                    h = l.description;
                return "url" !== f && h && (n.transaction = h), (n.sampled = String(St(i))), t.emit("createDsc", n, i), n;
            }
            function Dt(e) {
                return rt(Pt(e));
            }
            function Lt(e, t) {
                const { fingerprint: n, span: r, breadcrumbs: o, sdkProcessingMetadata: i } = t;
                !(function (e, t) {
                    const { extra: n, tags: r, user: o, contexts: i, level: s, transactionName: a } = t,
                        c = K(n);
                    c && Object.keys(c).length && (e.extra = { ...c, ...e.extra });
                    const u = K(r);
                    u && Object.keys(u).length && (e.tags = { ...u, ...e.tags });
                    const l = K(o);
                    l && Object.keys(l).length && (e.user = { ...l, ...e.user });
                    const d = K(i);
                    d && Object.keys(d).length && (e.contexts = { ...d, ...e.contexts });
                    s && (e.level = s);
                    a && "transaction" !== e.type && (e.transaction = a);
                })(e, t),
                    r &&
                        (function (e, t) {
                            (e.contexts = { trace: vt(t), ...e.contexts }), (e.sdkProcessingMetadata = { dynamicSamplingContext: Pt(t), ...e.sdkProcessingMetadata });
                            const n = Ct(t),
                                r = wt(n).description;
                            r && !e.transaction && "transaction" === e.type && (e.transaction = r);
                        })(e, r),
                    (function (e, t) {
                        (e.fingerprint = e.fingerprint ? re(e.fingerprint) : []), t && (e.fingerprint = e.fingerprint.concat(t));
                        e.fingerprint && !e.fingerprint.length && delete e.fingerprint;
                    })(e, n),
                    (function (e, t) {
                        const n = [...(e.breadcrumbs || []), ...t];
                        e.breadcrumbs = n.length ? n : void 0;
                    })(e, o),
                    (function (e, t) {
                        e.sdkProcessingMetadata = { ...e.sdkProcessingMetadata, ...t };
                    })(e, i);
            }
            function Ft(e, t) {
                const { extra: n, tags: r, user: o, contexts: i, level: s, sdkProcessingMetadata: a, breadcrumbs: c, fingerprint: u, eventProcessors: l, attachments: d, propagationContext: p, transactionName: f, span: h } = t;
                jt(e, "extra", n),
                    jt(e, "tags", r),
                    jt(e, "user", o),
                    jt(e, "contexts", i),
                    jt(e, "sdkProcessingMetadata", a),
                    s && (e.level = s),
                    f && (e.transactionName = f),
                    h && (e.span = h),
                    c.length && (e.breadcrumbs = [...e.breadcrumbs, ...c]),
                    u.length && (e.fingerprint = [...e.fingerprint, ...u]),
                    l.length && (e.eventProcessors = [...e.eventProcessors, ...l]),
                    d.length && (e.attachments = [...e.attachments, ...d]),
                    (e.propagationContext = { ...e.propagationContext, ...p });
            }
            function jt(e, t, n) {
                if (n && Object.keys(n).length) {
                    e[t] = { ...e[t] };
                    for (const r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[t][r] = n[r]);
                }
            }
            function $t(e, t, n, r, o, i) {
                const { normalizeDepth: s = 3, normalizeMaxBreadth: a = 1e3 } = e,
                    c = { ...t, event_id: t.event_id || n.event_id || X(), timestamp: t.timestamp || se() },
                    u = n.integrations || e.integrations.map((e) => e.name);
                !(function (e, t) {
                    const { environment: n, release: r, dist: o, maxValueLength: i = 250 } = t;
                    "environment" in e || (e.environment = "environment" in t ? n : Ne);
                    void 0 === e.release && void 0 !== r && (e.release = r);
                    void 0 === e.dist && void 0 !== o && (e.dist = o);
                    e.message && (e.message = F(e.message, i));
                    const s = e.exception && e.exception.values && e.exception.values[0];
                    s && s.value && (s.value = F(s.value, i));
                    const a = e.request;
                    a && a.url && (a.url = F(a.url, i));
                })(c, e),
                    (function (e, t) {
                        t.length > 0 && ((e.sdk = e.sdk || {}), (e.sdk.integrations = [...(e.sdk.integrations || []), ...t]));
                    })(c, u),
                    o && o.emit("applyFrameMetadata", t),
                    void 0 === t.type &&
                        (function (e, t) {
                            const n = x._sentryDebugIds;
                            if (!n) return;
                            let r;
                            const o = Ut.get(t);
                            o ? (r = o) : ((r = new Map()), Ut.set(t, r));
                            const i = Object.entries(n).reduce((e, [n, o]) => {
                                let i;
                                const s = r.get(n);
                                s ? (i = s) : ((i = t(n)), r.set(n, i));
                                for (let t = i.length - 1; t >= 0; t--) {
                                    const n = i[t];
                                    if (n.filename) {
                                        e[n.filename] = o;
                                        break;
                                    }
                                }
                                return e;
                            }, {});
                            try {
                                e.exception.values.forEach((e) => {
                                    e.stacktrace.frames.forEach((e) => {
                                        e.filename && (e.debug_id = i[e.filename]);
                                    });
                                });
                            } catch (e) {}
                        })(c, e.stackParser);
                const l = (function (e, t) {
                    if (!t) return e;
                    const n = e ? e.clone() : new ge();
                    return n.update(t), n;
                })(r, n.captureContext);
                n.mechanism && te(c, n.mechanism);
                const d = o ? o.getEventProcessors() : [],
                    p = Te().getScopeData();
                if (i) {
                    Ft(p, i.getScopeData());
                }
                if (l) {
                    Ft(p, l.getScopeData());
                }
                const f = [...(n.attachments || []), ...p.attachments];
                f.length && (n.attachments = f), Lt(c, p);
                return Xe([...d, ...p.eventProcessors], c, n).then(
                    (e) => (
                        e &&
                            (function (e) {
                                const t = {};
                                try {
                                    e.exception.values.forEach((e) => {
                                        e.stacktrace.frames.forEach((e) => {
                                            e.debug_id && (e.abs_path ? (t[e.abs_path] = e.debug_id) : e.filename && (t[e.filename] = e.debug_id), delete e.debug_id);
                                        });
                                    });
                                } catch (e) {}
                                if (0 === Object.keys(t).length) return;
                                (e.debug_meta = e.debug_meta || {}), (e.debug_meta.images = e.debug_meta.images || []);
                                const n = e.debug_meta.images;
                                Object.entries(t).forEach(([e, t]) => {
                                    n.push({ type: "sourcemap", code_file: e, debug_id: t });
                                });
                            })(e),
                        "number" == typeof s && s > 0
                            ? (function (e, t, n) {
                                  if (!e) return null;
                                  const r = {
                                      ...e,
                                      ...(e.breadcrumbs && { breadcrumbs: e.breadcrumbs.map((e) => ({ ...e, ...(e.data && { data: He(e.data, t, n) }) })) }),
                                      ...(e.user && { user: He(e.user, t, n) }),
                                      ...(e.contexts && { contexts: He(e.contexts, t, n) }),
                                      ...(e.extra && { extra: He(e.extra, t, n) }),
                                  };
                                  e.contexts && e.contexts.trace && r.contexts && ((r.contexts.trace = e.contexts.trace), e.contexts.trace.data && (r.contexts.trace.data = He(e.contexts.trace.data, t, n)));
                                  e.spans && (r.spans = e.spans.map((e) => ({ ...e, ...(e.data && { data: He(e.data, t, n) }) })));
                                  return r;
                              })(e, s, a)
                            : e
                    )
                );
            }
            const Ut = new WeakMap();
            function Bt(e) {
                if (e)
                    return (function (e) {
                        return e instanceof ge || "function" == typeof e;
                    })(e) ||
                        (function (e) {
                            return Object.keys(e).some((e) => qt.includes(e));
                        })(e)
                        ? { captureContext: e }
                        : e;
            }
            const qt = ["user", "level", "extra", "contexts", "tags", "fingerprint", "requestSession", "propagationContext"];
            function zt(e, t) {
                return Ee().captureException(e, Bt(t));
            }
            function Ht(e, t) {
                const n = "string" == typeof t ? t : void 0,
                    r = "string" != typeof t ? { captureContext: t } : void 0;
                return Ee().captureMessage(e, n, r);
            }
            function Wt(e, t) {
                return Ee().captureEvent(e, t);
            }
            function Vt(e, t) {
                Ie().setContext(e, t);
            }
            function Yt(e) {
                Ie().setExtras(e);
            }
            function Gt(e, t) {
                Ie().setExtra(e, t);
            }
            function Kt(e) {
                Ie().setTags(e);
            }
            function Jt(e, t) {
                Ie().setTag(e, t);
            }
            function Xt(e) {
                Ie().setUser(e);
            }
            function Qt() {
                return Ie().lastEventId();
            }
            async function Zt(e) {
                const t = Me();
                return t ? t.flush(e) : (Pe && L.warn("Cannot flush events. No client defined."), Promise.resolve(!1));
            }
            async function en(e) {
                const t = Me();
                return t ? t.close(e) : (Pe && L.warn("Cannot flush events and disable SDK. No client defined."), Promise.resolve(!1));
            }
            function tn() {
                return !!Me();
            }
            function nn(e) {
                Ie().addEventProcessor(e);
            }
            function rn(e) {
                const t = Me(),
                    n = Ie(),
                    r = Ee(),
                    { release: o, environment: i = Ne } = (t && t.getOptions()) || {},
                    { userAgent: s } = x.navigator || {},
                    a = le({ release: o, environment: i, user: r.getUser() || n.getUser(), ...(s && { userAgent: s }), ...e }),
                    c = n.getSession();
                return c && "ok" === c.status && de(c, { status: "exited" }), on(), n.setSession(a), r.setSession(a), a;
            }
            function on() {
                const e = Ie(),
                    t = Ee(),
                    n = t.getSession() || e.getSession();
                n &&
                    (function (e, t) {
                        let n = {};
                        t ? (n = { status: t }) : "ok" === e.status && (n = { status: "exited" }), de(e, n);
                    })(n),
                    sn(),
                    e.setSession(),
                    t.setSession();
            }
            function sn() {
                const e = Ie(),
                    t = Ee(),
                    n = Me(),
                    r = t.getSession() || e.getSession();
                r && n && n.captureSession(r);
            }
            function an(e = !1) {
                e ? on() : sn();
            }
            const cn = [];
            function un(e) {
                const t = e.defaultIntegrations || [],
                    n = e.integrations;
                let r;
                t.forEach((e) => {
                    e.isDefaultInstance = !0;
                }),
                    (r = Array.isArray(n) ? [...t, ...n] : "function" == typeof n ? re(n(t)) : t);
                const o = (function (e) {
                        const t = {};
                        return (
                            e.forEach((e) => {
                                const { name: n } = e,
                                    r = t[n];
                                (r && !r.isDefaultInstance && e.isDefaultInstance) || (t[n] = e);
                            }),
                            Object.values(t)
                        );
                    })(r),
                    i = o.findIndex((e) => "Debug" === e.name);
                if (i > -1) {
                    const [e] = o.splice(i, 1);
                    o.push(e);
                }
                return o;
            }
            function ln(e, t) {
                for (const n of t) n && n.afterAllSetup && n.afterAllSetup(e);
            }
            function dn(e, t, n) {
                if (n[t.name]) Pe && L.log(`Integration skipped because it was already installed: ${t.name}`);
                else {
                    if (((n[t.name] = t), -1 === cn.indexOf(t.name) && "function" == typeof t.setupOnce && (t.setupOnce(), cn.push(t.name)), t.setup && "function" == typeof t.setup && t.setup(e), "function" == typeof t.preprocessEvent)) {
                        const n = t.preprocessEvent.bind(t);
                        e.on("preprocessEvent", (t, r) => n(t, r, e));
                    }
                    if ("function" == typeof t.processEvent) {
                        const n = t.processEvent.bind(t),
                            r = Object.assign((t, r) => n(t, r, e), { id: t.name });
                        e.addEventProcessor(r);
                    }
                    Pe && L.log(`Integration installed: ${t.name}`);
                }
            }
            function pn(e) {
                const t = Me();
                t ? t.addIntegration(e) : Pe && L.warn(`Cannot add integration "${e.name}" because no SDK Client is available.`);
            }
            const fn = {},
                hn = {};
            function mn(e, t) {
                (fn[e] = fn[e] || []), fn[e].push(t);
            }
            function gn(e, t) {
                hn[e] || (t(), (hn[e] = !0));
            }
            function vn(e, t) {
                const n = e && fn[e];
                if (n)
                    for (const r of n)
                        try {
                            r(t);
                        } catch (t) {
                            O && L.error(`Error while triggering instrumentation handler.\nType: ${e}\nName: ${qe(r)}\nError:`, t);
                        }
            }
            let yn = null;
            function _n(e) {
                const t = "error";
                mn(t, e), gn(t, bn);
            }
            function bn() {
                (yn = x.onerror),
                    (x.onerror = function (e, t, n, r, o) {
                        return vn("error", { column: r, error: o, line: n, msg: e, url: t }), !(!yn || yn.__SENTRY_LOADER__) && yn.apply(this, arguments);
                    }),
                    (x.onerror.__SENTRY_INSTRUMENTED__ = !0);
            }
            let wn = null;
            function Sn(e) {
                const t = "unhandledrejection";
                mn(t, e), gn(t, kn);
            }
            function kn() {
                (wn = x.onunhandledrejection),
                    (x.onunhandledrejection = function (e) {
                        return vn("unhandledrejection", e), !(wn && !wn.__SENTRY_LOADER__) || wn.apply(this, arguments);
                    }),
                    (x.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0);
            }
            let xn = !1;
            function En() {
                xn || ((xn = !0), _n(In), Sn(In));
            }
            function In() {
                const e = At(),
                    t = e && Ct(e);
                if (t) {
                    const e = "internal_error";
                    Pe && L.log(`[Tracing] Root span: ${e} -> Global error occured`), t.setStatus({ code: pt, message: e });
                }
            }
            function Tn() {
                En();
            }
            function Cn(e) {
                const t = "console";
                mn(t, e), gn(t, An);
            }
            function An() {
                "console" in x &&
                    N.forEach(function (e) {
                        e in x.console &&
                            q(x.console, e, function (t) {
                                return (
                                    (P[e] = t),
                                    function (...t) {
                                        vn("console", { args: t, level: e });
                                        const n = P[e];
                                        n && n.apply(x.console, t);
                                    }
                                );
                            });
                    });
            }
            In.tag = "sentry_tracingErrorCallback";
            const Mn = ["fatal", "error", "warning", "log", "info", "debug"];
            function Rn(e) {
                return "warn" === e ? "warning" : Mn.includes(e) ? e : "log";
            }
            const On = (e = {}) => {
                const t = e.levels || N;
                return {
                    name: "CaptureConsole",
                    setup(e) {
                        "console" in x &&
                            Cn(({ args: n, level: r }) => {
                                Me() === e &&
                                    t.includes(r) &&
                                    (function (e, t) {
                                        const n = { level: Rn(t), extra: { arguments: e } };
                                        Ce((r) => {
                                            if ((r.addEventProcessor((e) => ((e.logger = "console"), te(e, { handled: !1, type: "console" }), e)), "assert" === t)) {
                                                if (!e[0]) {
                                                    const t = `Assertion failed: ${$(e.slice(1), " ") || "console.assert"}`;
                                                    r.setExtra("arguments", e.slice(1)), Ht(t, n);
                                                }
                                                return;
                                            }
                                            const o = e.find((e) => e instanceof Error);
                                            if (o) return void zt(o, n);
                                            Ht($(e, " "), n);
                                        });
                                    })(n, r);
                            });
                    },
                };
            };
            function Nn(e, t = {}, n = Ee()) {
                const { message: r, name: o, email: i, url: s, source: a, associatedEventId: c, tags: u } = e,
                    l = { contexts: { feedback: K({ contact_email: i, name: o, message: r, url: s, source: a, associated_event_id: c }) }, type: "feedback", level: "info", tags: u },
                    d = (n && n.getClient()) || Me();
                d && d.emit("beforeSendFeedback", l, t);
                return n.captureEvent(l, t);
            }
            function Pn(e, t, n = () => {}) {
                let r;
                try {
                    r = e();
                } catch (e) {
                    throw (t(e), n(), e);
                }
                return (function (e, t, n) {
                    if (w(e))
                        return e.then(
                            (e) => (n(), e),
                            (e) => {
                                throw (t(e), n(), e);
                            }
                        );
                    return n(), e;
                })(r, t, n);
            }
            function Dn(e) {
                if ("boolean" == typeof __SENTRY_TRACING__ && !__SENTRY_TRACING__) return !1;
                const t =
                    e ||
                    (function () {
                        const e = Me();
                        return e && e.getOptions();
                    })();
                return !!t && (t.enableTracing || "tracesSampleRate" in t || "tracesSampler" in t);
            }
            function Ln(e) {
                if ("boolean" == typeof e) return Number(e);
                const t = "string" == typeof e ? parseFloat(e) : e;
                if (!("number" != typeof t || isNaN(t) || t < 0 || t > 1)) return t;
                Pe && L.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(e)} of type ${JSON.stringify(typeof e)}.`);
            }
            class Fn {
                constructor(e = {}) {
                    (this._traceId = e.traceId || X()), (this._spanId = e.spanId || X().substring(16));
                }
                spanContext() {
                    return { spanId: this._spanId, traceId: this._traceId, traceFlags: 0 };
                }
                end(e) {}
                setAttribute(e, t) {
                    return this;
                }
                setAttributes(e) {
                    return this;
                }
                setStatus(e) {
                    return this;
                }
                updateName(e) {
                    return this;
                }
                isRecording() {
                    return !1;
                }
                addEvent(e, t, n) {
                    return this;
                }
                addLink(e) {
                    return this;
                }
                addLinks(e) {
                    return this;
                }
                recordException(e, t) {}
            }
            const jn = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
            function $n(e, t = !1) {
                const { host: n, path: r, pass: o, port: i, projectId: s, protocol: a, publicKey: c } = e;
                return `${a}://${c}${t && o ? `:${o}` : ""}@${n}${i ? `:${i}` : ""}/${r ? `${r}/` : r}${s}`;
            }
            function Un(e) {
                const t = jn.exec(e);
                if (!t)
                    return void D(() => {
                        console.error(`Invalid Sentry Dsn: ${e}`);
                    });
                const [n, r, o = "", i = "", s = "", a = ""] = t.slice(1);
                let c = "",
                    u = a;
                const l = u.split("/");
                if ((l.length > 1 && ((c = l.slice(0, -1).join("/")), (u = l.pop())), u)) {
                    const e = u.match(/^\d+/);
                    e && (u = e[0]);
                }
                return Bn({ host: i, pass: o, path: c, projectId: u, port: s, protocol: n, publicKey: r });
            }
            function Bn(e) {
                return { protocol: e.protocol, publicKey: e.publicKey || "", pass: e.pass || "", host: e.host, port: e.port || "", path: e.path || "", projectId: e.projectId };
            }
            function qn(e) {
                const t = "string" == typeof e ? Un(e) : Bn(e);
                if (
                    t &&
                    (function (e) {
                        if (!O) return !0;
                        const { port: t, projectId: n, protocol: r } = e;
                        return !(
                            ["protocol", "publicKey", "host", "projectId"].find((t) => !e[t] && (L.error(`Invalid Sentry Dsn: ${t} missing`), !0)) ||
                            (n.match(/^\d+$/)
                                ? (function (e) {
                                      return "http" === e || "https" === e;
                                  })(r)
                                    ? t && isNaN(parseInt(t, 10)) && (L.error(`Invalid Sentry Dsn: Invalid port ${t}`), 1)
                                    : (L.error(`Invalid Sentry Dsn: Invalid protocol ${r}`), 1)
                                : (L.error(`Invalid Sentry Dsn: Invalid projectId ${n}`), 1))
                        );
                    })(t)
                )
                    return t;
            }
            function zn(e, t = []) {
                return [e, t];
            }
            function Hn(e, t) {
                const [n, r] = e;
                return [n, [...r, t]];
            }
            function Wn(e, t) {
                const n = e[1];
                for (const e of n) {
                    if (t(e, e[0].type)) return !0;
                }
                return !1;
            }
            function Vn(e, t) {
                return Wn(e, (e, n) => t.includes(n));
            }
            function Yn(e) {
                return x.__SENTRY__ && x.__SENTRY__.encodePolyfill ? x.__SENTRY__.encodePolyfill(e) : new TextEncoder().encode(e);
            }
            function Gn(e) {
                const [t, n] = e;
                let r = JSON.stringify(t);
                function o(e) {
                    "string" == typeof r ? (r = "string" == typeof e ? r + e : [Yn(r), e]) : r.push("string" == typeof e ? Yn(e) : e);
                }
                for (const e of n) {
                    const [t, n] = e;
                    if ((o(`\n${JSON.stringify(t)}\n`), "string" == typeof n || n instanceof Uint8Array)) o(n);
                    else {
                        let e;
                        try {
                            e = JSON.stringify(n);
                        } catch (t) {
                            e = JSON.stringify(He(n));
                        }
                        o(e);
                    }
                }
                return "string" == typeof r
                    ? r
                    : (function (e) {
                          const t = e.reduce((e, t) => e + t.length, 0),
                              n = new Uint8Array(t);
                          let r = 0;
                          for (const t of e) n.set(t, r), (r += t.length);
                          return n;
                      })(r);
            }
            function Kn(e) {
                let t = "string" == typeof e ? Yn(e) : e;
                function n(e) {
                    const n = t.subarray(0, e);
                    return (t = t.subarray(e + 1)), n;
                }
                function r() {
                    let e = t.indexOf(10);
                    return e < 0 && (e = t.length), JSON.parse(((r = n(e)), x.__SENTRY__ && x.__SENTRY__.decodePolyfill ? x.__SENTRY__.decodePolyfill(r) : new TextDecoder().decode(r)));
                    var r;
                }
                const o = r(),
                    i = [];
                for (; t.length; ) {
                    const e = r(),
                        t = "number" == typeof e.length ? e.length : void 0;
                    i.push([e, t ? n(t) : r()]);
                }
                return [o, i];
            }
            function Jn(e) {
                return [{ type: "span" }, e];
            }
            function Xn(e) {
                const t = "string" == typeof e.data ? Yn(e.data) : e.data;
                return [K({ type: "attachment", length: t.length, filename: e.filename, content_type: e.contentType, attachment_type: e.attachmentType }), t];
            }
            const Qn = {
                session: "session",
                sessions: "session",
                attachment: "attachment",
                transaction: "transaction",
                event: "error",
                client_report: "internal",
                user_report: "default",
                profile: "profile",
                profile_chunk: "profile",
                replay_event: "replay",
                replay_recording: "replay",
                check_in: "monitor",
                feedback: "feedback",
                span: "span",
                statsd: "metric_bucket",
            };
            function Zn(e) {
                return Qn[e];
            }
            function er(e) {
                if (!e || !e.sdk) return;
                const { name: t, version: n } = e.sdk;
                return { name: t, version: n };
            }
            function tr(e, t, n, r) {
                const o = e.sdkProcessingMetadata && e.sdkProcessingMetadata.dynamicSamplingContext;
                return { event_id: e.event_id, sent_at: new Date().toISOString(), ...(t && { sdk: t }), ...(!!n && r && { dsn: $n(r) }), ...(o && { trace: K({ ...o }) }) };
            }
            function nr(e, t, n) {
                const r = At(),
                    o = r && Ct(r);
                o && o.addEvent(e, { [u]: t, [c]: n });
            }
            function rr(e) {
                if (!e || 0 === e.length) return;
                const t = {};
                return (
                    e.forEach((e) => {
                        const n = e.attributes || {},
                            r = n[c],
                            o = n[u];
                        "string" == typeof r && "number" == typeof o && (t[e.name] = { value: o, unit: r });
                    }),
                    t
                );
            }
            const or = "_sentryScope",
                ir = "_sentryIsolationScope";
            function sr(e) {
                return { scope: e[or], isolationScope: e[ir] };
            }
            class ar {
                constructor(e = {}) {
                    (this._traceId = e.traceId || X()),
                        (this._spanId = e.spanId || X().substring(16)),
                        (this._startTime = e.startTimestamp || ae()),
                        (this._attributes = {}),
                        this.setAttributes({ [s]: "manual", [i]: e.op, ...e.attributes }),
                        (this._name = e.name),
                        e.parentSpanId && (this._parentSpanId = e.parentSpanId),
                        "sampled" in e && (this._sampled = e.sampled),
                        e.endTimestamp && (this._endTime = e.endTimestamp),
                        (this._events = []),
                        (this._isStandaloneSpan = e.isStandalone),
                        this._endTime && this._onSpanEnded();
                }
                addLink(e) {
                    return this;
                }
                addLinks(e) {
                    return this;
                }
                recordException(e, t) {}
                spanContext() {
                    const { _spanId: e, _traceId: t, _sampled: n } = this;
                    return { spanId: e, traceId: t, traceFlags: n ? mt : 0 };
                }
                setAttribute(e, t) {
                    return void 0 === t ? delete this._attributes[e] : (this._attributes[e] = t), this;
                }
                setAttributes(e) {
                    return Object.keys(e).forEach((t) => this.setAttribute(t, e[t])), this;
                }
                updateStartTime(e) {
                    this._startTime = _t(e);
                }
                setStatus(e) {
                    return (this._status = e), this;
                }
                updateName(e) {
                    return (this._name = e), this;
                }
                end(e) {
                    this._endTime ||
                        ((this._endTime = _t(e)),
                        (function (e) {
                            if (!Pe) return;
                            const { description: t = "< unknown name >", op: n = "< unknown op >" } = wt(e),
                                { spanId: r } = e.spanContext(),
                                o = `[Tracing] Finishing "${n}" ${Ct(e) === e ? "root " : ""}span "${t}" with ID ${r}`;
                            L.log(o);
                        })(this),
                        this._onSpanEnded());
                }
                getSpanJSON() {
                    return K({
                        data: this._attributes,
                        description: this._name,
                        op: this._attributes[i],
                        parent_span_id: this._parentSpanId,
                        span_id: this._spanId,
                        start_timestamp: this._startTime,
                        status: kt(this._status),
                        timestamp: this._endTime,
                        trace_id: this._traceId,
                        origin: this._attributes[s],
                        _metrics_summary: ut(this),
                        profile_id: this._attributes["sentry.profile_id"],
                        exclusive_time: this._attributes[l],
                        measurements: rr(this._events),
                        is_segment: (this._isStandaloneSpan && Ct(this) === this) || void 0,
                        segment_id: this._isStandaloneSpan ? Ct(this).spanContext().spanId : void 0,
                    });
                }
                isRecording() {
                    return !this._endTime && !!this._sampled;
                }
                addEvent(e, t, n) {
                    Pe && L.log("[Tracing] Adding an event to span:", e);
                    const r = cr(t) ? t : n || ae(),
                        o = cr(t) ? {} : t || {},
                        i = { name: e, time: _t(r), attributes: o };
                    return this._events.push(i), this;
                }
                isStandaloneSpan() {
                    return !!this._isStandaloneSpan;
                }
                _onSpanEnded() {
                    const e = Me();
                    e && e.emit("spanEnd", this);
                    if (!(this._isStandaloneSpan || this === Ct(this))) return;
                    if (this._isStandaloneSpan)
                        return void (this._sampled
                            ? (function (e) {
                                  const t = Me();
                                  if (!t) return;
                                  const n = e[1];
                                  if (!n || 0 === n.length) return void t.recordDroppedEvent("before_send", "span");
                                  const r = t.getTransport();
                                  r &&
                                      r.send(e).then(null, (e) => {
                                          Pe && L.error("Error while sending span:", e);
                                      });
                              })(
                                  (function (e, t) {
                                      const n = Pt(e[0]),
                                          r = t && t.getDsn(),
                                          o = t && t.getOptions().tunnel,
                                          i = {
                                              sent_at: new Date().toISOString(),
                                              ...((function (e) {
                                                  return !!e.trace_id && !!e.public_key;
                                              })(n) && { trace: n }),
                                              ...(!!o && r && { dsn: $n(r) }),
                                          },
                                          s = t && t.getOptions().beforeSendSpan,
                                          a = s ? (e) => s(wt(e)) : (e) => wt(e),
                                          c = [];
                                      for (const t of e) {
                                          const e = a(t);
                                          e && c.push(Jn(e));
                                      }
                                      return zn(i, c);
                                  })([this], e)
                              )
                            : (Pe && L.log("[Tracing] Discarding standalone span because its trace was not chosen to be sampled."), e && e.recordDroppedEvent("sample_rate", "span")));
                    const t = this._convertSpanToTransaction();
                    if (t) {
                        (sr(this).scope || Ee()).captureEvent(t);
                    }
                }
                _convertSpanToTransaction() {
                    if (!ur(wt(this))) return;
                    this._name || (Pe && L.warn("Transaction has no name, falling back to `<unlabeled transaction>`."), (this._name = "<unlabeled transaction>"));
                    const { scope: e, isolationScope: t } = sr(this),
                        n = (e || Ee()).getClient() || Me();
                    if (!0 !== this._sampled) return Pe && L.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled."), void (n && n.recordDroppedEvent("sample_rate", "transaction"));
                    const o = Tt(this)
                            .filter(
                                (e) =>
                                    e !== this &&
                                    !(function (e) {
                                        return e instanceof ar && e.isStandaloneSpan();
                                    })(e)
                            )
                            .map((e) => wt(e))
                            .filter(ur),
                        i = this._attributes[r],
                        s = {
                            contexts: { trace: gt(this) },
                            spans: o.length > 1e3 ? o.sort((e, t) => e.start_timestamp - t.start_timestamp).slice(0, 1e3) : o,
                            start_timestamp: this._startTime,
                            timestamp: this._endTime,
                            transaction: this._name,
                            type: "transaction",
                            sdkProcessingMetadata: { capturedSpanScope: e, capturedSpanIsolationScope: t, ...K({ dynamicSamplingContext: Pt(this) }) },
                            _metrics_summary: ut(this),
                            ...(i && { transaction_info: { source: i } }),
                        },
                        a = rr(this._events);
                    return a && Object.keys(a).length && (Pe && L.log("[Measurements] Adding measurements to transaction event", JSON.stringify(a, void 0, 2)), (s.measurements = a)), s;
                }
            }
            function cr(e) {
                return (e && "number" == typeof e) || e instanceof Date || Array.isArray(e);
            }
            function ur(e) {
                return !!(e.start_timestamp && e.timestamp && e.span_id && e.trace_id);
            }
            const lr = "__SENTRY_SUPPRESS_TRACING__";
            function dr(e, t) {
                const n = _r();
                if (n.startSpan) return n.startSpan(e, t);
                const r = yr(e),
                    { forceTransaction: o, parentSpan: i } = e;
                return Ce(e.scope, () =>
                    Sr(i)(() => {
                        const n = Ee(),
                            i = wr(n),
                            s = e.onlyIfParent && !i ? new Fn() : vr({ parentSpan: i, spanArguments: r, forceTransaction: o, scope: n });
                        return (
                            fe(n, s),
                            Pn(
                                () => t(s),
                                () => {
                                    const { status: e } = wt(s);
                                    !s.isRecording() || (e && "ok" !== e) || s.setStatus({ code: pt, message: "internal_error" });
                                },
                                () => s.end()
                            )
                        );
                    })
                );
            }
            function pr(e, t) {
                const n = _r();
                if (n.startSpanManual) return n.startSpanManual(e, t);
                const r = yr(e),
                    { forceTransaction: o, parentSpan: i } = e;
                return Ce(e.scope, () =>
                    Sr(i)(() => {
                        const n = Ee(),
                            i = wr(n),
                            s = e.onlyIfParent && !i ? new Fn() : vr({ parentSpan: i, spanArguments: r, forceTransaction: o, scope: n });
                        function a() {
                            s.end();
                        }
                        return (
                            fe(n, s),
                            Pn(
                                () => t(s, a),
                                () => {
                                    const { status: e } = wt(s);
                                    !s.isRecording() || (e && "ok" !== e) || s.setStatus({ code: pt, message: "internal_error" });
                                }
                            )
                        );
                    })
                );
            }
            function fr(e) {
                const t = _r();
                if (t.startInactiveSpan) return t.startInactiveSpan(e);
                const n = yr(e),
                    { forceTransaction: r, parentSpan: o } = e;
                return (e.scope ? (t) => Ce(e.scope, t) : void 0 !== o ? (e) => mr(o, e) : (e) => e())(() => {
                    const t = Ee(),
                        o = wr(t);
                    return e.onlyIfParent && !o ? new Fn() : vr({ parentSpan: o, spanArguments: n, forceTransaction: r, scope: t });
                });
            }
            const hr = ({ sentryTrace: e, baggage: t }, n) =>
                Ce((r) => {
                    const o = st(e, t);
                    return r.setPropagationContext(o), n();
                });
            function mr(e, t) {
                const n = _r();
                return n.withActiveSpan ? n.withActiveSpan(e, t) : Ce((n) => (fe(n, e || void 0), t(n)));
            }
            function gr(e) {
                return Ce((t) => (t.setPropagationContext(oe()), Pe && L.info(`Starting a new trace with id ${t.getPropagationContext().traceId}`), mr(null, e)));
            }
            function vr({ parentSpan: e, spanArguments: t, forceTransaction: n, scope: r }) {
                if (!Dn()) return new Fn();
                const o = Ie();
                let i;
                if (e && !n)
                    (i = (function (e, t, n) {
                        const { spanId: r, traceId: o } = e.spanContext(),
                            i = !t.getScopeData().sdkProcessingMetadata[lr] && St(e),
                            s = i ? new ar({ ...n, parentSpanId: r, traceId: o, sampled: i }) : new Fn({ traceId: o });
                        It(e, s);
                        const a = Me();
                        a && (a.emit("spanStart", s), n.endTimestamp && a.emit("spanEnd", s));
                        return s;
                    })(e, r, t)),
                        It(e, i);
                else if (e) {
                    const n = Pt(e),
                        { traceId: o, spanId: s } = e.spanContext(),
                        a = St(e);
                    (i = br({ traceId: o, parentSpanId: s, ...t }, r, a)), Ot(i, n);
                } else {
                    const { traceId: e, dsc: n, parentSpanId: s, sampled: a } = { ...o.getPropagationContext(), ...r.getPropagationContext() };
                    (i = br({ traceId: e, parentSpanId: s, ...t }, r, a)), n && Ot(i, n);
                }
                return (
                    (function (e) {
                        if (!Pe) return;
                        const { description: t = "< unknown name >", op: n = "< unknown op >", parent_span_id: r } = wt(e),
                            { spanId: o } = e.spanContext(),
                            i = St(e),
                            s = Ct(e),
                            a = s === e,
                            c = `[Tracing] Starting ${i ? "sampled" : "unsampled"} ${a ? "root " : ""}span`,
                            u = [`op: ${n}`, `name: ${t}`, `ID: ${o}`];
                        if ((r && u.push(`parent ID: ${r}`), !a)) {
                            const { op: e, description: t } = wt(s);
                            u.push(`root ID: ${s.spanContext().spanId}`), e && u.push(`root op: ${e}`), t && u.push(`root description: ${t}`);
                        }
                        L.log(`${c}\n  ${u.join("\n  ")}`);
                    })(i),
                    (function (e, t, n) {
                        e && (z(e, ir, n), z(e, or, t));
                    })(i, r, o),
                    i
                );
            }
            function yr(e) {
                const t = { isStandalone: (e.experimental || {}).standalone, ...e };
                if (e.startTime) {
                    const n = { ...t };
                    return (n.startTimestamp = _t(e.startTime)), delete n.startTime, n;
                }
                return t;
            }
            function _r() {
                return xe(ve());
            }
            function br(e, t, n) {
                const i = Me(),
                    s = (i && i.getOptions()) || {},
                    { name: a = "", attributes: c } = e,
                    [u, l] = t.getScopeData().sdkProcessingMetadata[lr]
                        ? [!1]
                        : (function (e, t) {
                              if (!Dn(e)) return [!1];
                              let n;
                              n = "function" == typeof e.tracesSampler ? e.tracesSampler(t) : void 0 !== t.parentSampled ? t.parentSampled : void 0 !== e.tracesSampleRate ? e.tracesSampleRate : 1;
                              const r = Ln(n);
                              return void 0 === r
                                  ? (Pe && L.warn("[Tracing] Discarding transaction because of invalid sample rate."), [!1])
                                  : r
                                  ? Math.random() < r
                                      ? [!0, r]
                                      : (Pe && L.log(`[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(n)})`), [!1, r])
                                  : (Pe &&
                                        L.log(
                                            "[Tracing] Discarding transaction because " +
                                                ("function" == typeof e.tracesSampler ? "tracesSampler returned 0 or false" : "a negative sampling decision was inherited or tracesSampleRate is set to 0")
                                        ),
                                    [!1, r]);
                          })(s, { name: a, parentSampled: n, attributes: c, transactionContext: { name: a, parentSampled: n } }),
                    d = new ar({ ...e, attributes: { [r]: "custom", ...e.attributes }, sampled: u });
                return void 0 !== l && d.setAttribute(o, l), i && i.emit("spanStart", d), d;
            }
            function wr(e) {
                const t = he(e);
                if (!t) return;
                const n = Me();
                return (n ? n.getOptions() : {}).parentSpanIsAlwaysRootSpan ? Ct(t) : t;
            }
            function Sr(e) {
                return void 0 !== e ? (t) => mr(e, t) : (e) => e();
            }
            class kr extends Error {
                constructor(e, t = "warn") {
                    super(e), (this.message = e), (this.name = new.target.prototype.constructor.name), Object.setPrototypeOf(this, new.target.prototype), (this.logLevel = t);
                }
            }
            function xr(e) {
                const t = [];
                function n(e) {
                    return t.splice(t.indexOf(e), 1)[0] || Promise.resolve(void 0);
                }
                return {
                    $: t,
                    add: function (r) {
                        if (!(void 0 === e || t.length < e)) return Ke(new kr("Not adding Promise because buffer limit was reached."));
                        const o = r();
                        return -1 === t.indexOf(o) && t.push(o), o.then(() => n(o)).then(null, () => n(o).then(null, () => {})), o;
                    },
                    drain: function (e) {
                        return new Je((n, r) => {
                            let o = t.length;
                            if (!o) return n(!0);
                            const i = setTimeout(() => {
                                e && e > 0 && n(!1);
                            }, e);
                            t.forEach((e) => {
                                Ge(e).then(() => {
                                    --o || (clearTimeout(i), n(!0));
                                }, r);
                            });
                        });
                    },
                };
            }
            const Er = 6e4;
            function Ir(e, t = Date.now()) {
                const n = parseInt(`${e}`, 10);
                if (!isNaN(n)) return 1e3 * n;
                const r = Date.parse(`${e}`);
                return isNaN(r) ? Er : r - t;
            }
            function Tr(e, t, n = Date.now()) {
                return (
                    (function (e, t) {
                        return e[t] || e.all || 0;
                    })(e, t) > n
                );
            }
            function Cr(e, { statusCode: t, headers: n }, r = Date.now()) {
                const o = { ...e },
                    i = n && n["x-sentry-rate-limits"],
                    s = n && n["retry-after"];
                if (i)
                    for (const e of i.trim().split(",")) {
                        const [t, n, , , i] = e.split(":", 5),
                            s = parseInt(t, 10),
                            a = 1e3 * (isNaN(s) ? 60 : s);
                        if (n) for (const e of n.split(";")) ("metric_bucket" === e && i && !i.split(";").includes("custom")) || (o[e] = r + a);
                        else o.all = r + a;
                    }
                else s ? (o.all = r + Ir(s, r)) : 429 === t && (o.all = r + 6e4);
                return o;
            }
            const Ar = 64;
            function Mr(e, t, n = xr(e.bufferSize || Ar)) {
                let r = {};
                return {
                    send: function (o) {
                        const i = [];
                        if (
                            (Wn(o, (t, n) => {
                                const o = Zn(n);
                                if (Tr(r, o)) {
                                    const r = Rr(t, n);
                                    e.recordDroppedEvent("ratelimit_backoff", o, r);
                                } else i.push(t);
                            }),
                            0 === i.length)
                        )
                            return Ge({});
                        const s = zn(o[0], i),
                            a = (t) => {
                                Wn(s, (n, r) => {
                                    const o = Rr(n, r);
                                    e.recordDroppedEvent(t, Zn(r), o);
                                });
                            };
                        return n
                            .add(() =>
                                t({ body: Gn(s) }).then(
                                    (e) => (void 0 !== e.statusCode && (e.statusCode < 200 || e.statusCode >= 300) && Pe && L.warn(`Sentry responded with status code ${e.statusCode} to sent event.`), (r = Cr(r, e)), e),
                                    (e) => {
                                        throw (a("network_error"), e);
                                    }
                                )
                            )
                            .then(
                                (e) => e,
                                (e) => {
                                    if (e instanceof kr) return Pe && L.error("Skipped sending event because buffer is full."), a("queue_overflow"), Ge({});
                                    throw e;
                                }
                            );
                    },
                    flush: (e) => n.drain(e),
                };
            }
            function Rr(e, t) {
                if ("event" === t || "transaction" === t) return Array.isArray(e) ? e[1] : void 0;
            }
            const Or = (e = {}) => {
                    const t = { debugger: !1, stringify: !1, ...e };
                    return {
                        name: "Debug",
                        setup(e) {
                            e.on("beforeSendEvent", (e, n) => {
                                t.debugger,
                                    D(() => {
                                        t.stringify ? (console.log(JSON.stringify(e, null, 2)), n && Object.keys(n).length && console.log(JSON.stringify(n, null, 2))) : (console.log(e), n && Object.keys(n).length && console.log(n));
                                    });
                            });
                        },
                    };
                },
                Nr = () => {
                    let e;
                    return {
                        name: "Dedupe",
                        processEvent(t) {
                            if (t.type) return t;
                            try {
                                if (
                                    (function (e, t) {
                                        if (!t) return !1;
                                        if (
                                            (function (e, t) {
                                                const n = e.message,
                                                    r = t.message;
                                                if (!n && !r) return !1;
                                                if ((n && !r) || (!n && r)) return !1;
                                                if (n !== r) return !1;
                                                if (!Dr(e, t)) return !1;
                                                if (!Pr(e, t)) return !1;
                                                return !0;
                                            })(e, t)
                                        )
                                            return !0;
                                        if (
                                            (function (e, t) {
                                                const n = Lr(t),
                                                    r = Lr(e);
                                                if (!n || !r) return !1;
                                                if (n.type !== r.type || n.value !== r.value) return !1;
                                                if (!Dr(e, t)) return !1;
                                                if (!Pr(e, t)) return !1;
                                                return !0;
                                            })(e, t)
                                        )
                                            return !0;
                                        return !1;
                                    })(t, e)
                                )
                                    return Pe && L.warn("Event dropped due to being a duplicate of previously captured event."), null;
                            } catch (e) {}
                            return (e = t);
                        },
                    };
                };
            function Pr(e, t) {
                let n = ze(e),
                    r = ze(t);
                if (!n && !r) return !0;
                if ((n && !r) || (!n && r)) return !1;
                if (r.length !== n.length) return !1;
                for (let e = 0; e < r.length; e++) {
                    const t = r[e],
                        o = n[e];
                    if (t.filename !== o.filename || t.lineno !== o.lineno || t.colno !== o.colno || t.function !== o.function) return !1;
                }
                return !0;
            }
            function Dr(e, t) {
                let n = e.fingerprint,
                    r = t.fingerprint;
                if (!n && !r) return !0;
                if ((n && !r) || (!n && r)) return !1;
                try {
                    return !(n.join("") !== r.join(""));
                } catch (e) {
                    return !1;
                }
            }
            function Lr(e) {
                return e.exception && e.exception.values && e.exception.values[0];
            }
            const Fr = (e = {}) => {
                const { depth: t = 3, captureErrorCause: n = !0 } = e;
                return {
                    name: "ExtraErrorData",
                    processEvent(e, r, o) {
                        const { maxValueLength: i = 250 } = o.getOptions();
                        return (function (e, t = {}, n, r, o) {
                            if (!t.originalException || !p(t.originalException)) return e;
                            const i = t.originalException.name || t.originalException.constructor.name,
                                s = (function (e, t, n) {
                                    try {
                                        const r = ["name", "message", "stack", "line", "column", "fileName", "lineNumber", "columnNumber", "toJSON"],
                                            o = {};
                                        for (const t of Object.keys(e)) {
                                            if (-1 !== r.indexOf(t)) continue;
                                            const i = e[t];
                                            o[t] = p(i) || "string" == typeof i ? F(`${i}`, n) : i;
                                        }
                                        if ((t && void 0 !== e.cause && (o.cause = p(e.cause) ? e.cause.toString() : e.cause), "function" == typeof e.toJSON)) {
                                            const t = e.toJSON();
                                            for (const e of Object.keys(t)) {
                                                const n = t[e];
                                                o[e] = p(n) ? n.toString() : n;
                                            }
                                        }
                                        return o;
                                    } catch (e) {
                                        Pe && L.error("Unable to extract extra data from the Error object:", e);
                                    }
                                    return null;
                                })(t.originalException, r, o);
                            if (s) {
                                const t = { ...e.contexts },
                                    r = He(s, n);
                                return _(r) && (z(r, "__sentry_skip_normalization__", !0), (t[i] = r)), { ...e, contexts: t };
                            }
                            return e;
                        })(e, r, t, n, i);
                    },
                };
            };
            let jr;
            const $r = new WeakMap(),
                Ur = () => ({
                    name: "FunctionToString",
                    setupOnce() {
                        jr = Function.prototype.toString;
                        try {
                            Function.prototype.toString = function (...e) {
                                const t = W(this),
                                    n = $r.has(Me()) && void 0 !== t ? t : this;
                                return jr.apply(n, e);
                            };
                        } catch (e) {}
                    },
                    setup(e) {
                        $r.set(e, !0);
                    },
                });
            const Br = function () {
                return {
                    bindClient(e) {
                        Ee().setClient(e);
                    },
                    withScope: Ce,
                    getClient: () => Me(),
                    getScope: Ee,
                    getIsolationScope: Ie,
                    captureException: (e, t) => Ee().captureException(e, t),
                    captureMessage: (e, t, n) => Ee().captureMessage(e, t, n),
                    captureEvent: Wt,
                    addBreadcrumb: Oe,
                    setUser: Xt,
                    setTags: Kt,
                    setTag: Jt,
                    setExtra: Gt,
                    setExtras: Yt,
                    setContext: Vt,
                    getIntegration(e) {
                        const t = Me();
                        return (t && t.getIntegrationByName(e.id)) || null;
                    },
                    startSession: rn,
                    endSession: on,
                    captureSession(e) {
                        if (e) return on();
                        !(function () {
                            const e = Ee(),
                                t = Me(),
                                n = e.getSession();
                            t && n && t.captureSession(n);
                        })();
                    },
                };
            };
            const qr = [
                    /^Script error\.?$/,
                    /^Javascript error: Script error\.? on line 0$/,
                    /^ResizeObserver loop completed with undelivered notifications.$/,
                    /^Cannot redefine property: googletag$/,
                    "undefined is not an object (evaluating 'a.L')",
                    'can\'t redefine non-configurable property "solana"',
                    "vv().getRestrictions is not a function. (In 'vv().getRestrictions(1,a)', 'vv().getRestrictions' is undefined)",
                    "Can't find variable: _AutofillCallbackHandler",
                ],
                zr = (e = {}) => ({
                    name: "InboundFilters",
                    processEvent(t, n, r) {
                        const o = r.getOptions(),
                            i = (function (e = {}, t = {}) {
                                return {
                                    allowUrls: [...(e.allowUrls || []), ...(t.allowUrls || [])],
                                    denyUrls: [...(e.denyUrls || []), ...(t.denyUrls || [])],
                                    ignoreErrors: [...(e.ignoreErrors || []), ...(t.ignoreErrors || []), ...(e.disableErrorDefaults ? [] : qr)],
                                    ignoreTransactions: [...(e.ignoreTransactions || []), ...(t.ignoreTransactions || [])],
                                    ignoreInternal: void 0 === e.ignoreInternal || e.ignoreInternal,
                                };
                            })(e, o);
                        return (function (e, t) {
                            if (
                                t.ignoreInternal &&
                                (function (e) {
                                    try {
                                        return "SentryError" === e.exception.values[0].type;
                                    } catch (e) {}
                                    return !1;
                                })(e)
                            )
                                return Pe && L.warn(`Event dropped due to being internal Sentry Error.\nEvent: ${Z(e)}`), !0;
                            if (
                                (function (e, t) {
                                    if (e.type || !t || !t.length) return !1;
                                    return (function (e) {
                                        const t = [];
                                        e.message && t.push(e.message);
                                        let n;
                                        try {
                                            n = e.exception.values[e.exception.values.length - 1];
                                        } catch (e) {}
                                        n && n.value && (t.push(n.value), n.type && t.push(`${n.type}: ${n.value}`));
                                        return t;
                                    })(e).some((e) => B(e, t));
                                })(e, t.ignoreErrors)
                            )
                                return Pe && L.warn(`Event dropped due to being matched by \`ignoreErrors\` option.\nEvent: ${Z(e)}`), !0;
                            if (
                                (function (e) {
                                    if (e.type) return !1;
                                    if (!e.exception || !e.exception.values || 0 === e.exception.values.length) return !1;
                                    return !e.message && !e.exception.values.some((e) => e.stacktrace || (e.type && "Error" !== e.type) || e.value);
                                })(e)
                            )
                                return Pe && L.warn(`Event dropped due to not having an error message, error type or stacktrace.\nEvent: ${Z(e)}`), !0;
                            if (
                                (function (e, t) {
                                    if ("transaction" !== e.type || !t || !t.length) return !1;
                                    const n = e.transaction;
                                    return !!n && B(n, t);
                                })(e, t.ignoreTransactions)
                            )
                                return Pe && L.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.\nEvent: ${Z(e)}`), !0;
                            if (
                                (function (e, t) {
                                    if (!t || !t.length) return !1;
                                    const n = Hr(e);
                                    return !!n && B(n, t);
                                })(e, t.denyUrls)
                            )
                                return Pe && L.warn(`Event dropped due to being matched by \`denyUrls\` option.\nEvent: ${Z(e)}.\nUrl: ${Hr(e)}`), !0;
                            if (
                                !(function (e, t) {
                                    if (!t || !t.length) return !0;
                                    const n = Hr(e);
                                    return !n || B(n, t);
                                })(e, t.allowUrls)
                            )
                                return Pe && L.warn(`Event dropped due to not being matched by \`allowUrls\` option.\nEvent: ${Z(e)}.\nUrl: ${Hr(e)}`), !0;
                            return !1;
                        })(t, i)
                            ? null
                            : t;
                    },
                });
            function Hr(e) {
                try {
                    let t;
                    try {
                        t = e.exception.values[0].stacktrace.frames;
                    } catch (e) {}
                    return t
                        ? (function (e = []) {
                              for (let t = e.length - 1; t >= 0; t--) {
                                  const n = e[t];
                                  if (n && "<anonymous>" !== n.filename && "[native code]" !== n.filename) return n.filename || null;
                              }
                              return null;
                          })(t)
                        : null;
                } catch (t) {
                    return Pe && L.error(`Cannot extract url for event ${Z(e)}`), null;
                }
            }
            const Wr = "7";
            function Vr(e) {
                const t = e.protocol ? `${e.protocol}:` : "",
                    n = e.port ? `:${e.port}` : "";
                return `${t}//${e.host}${n}${e.path ? `/${e.path}` : ""}/api/`;
            }
            function Yr(e, t) {
                return (
                    (n = { sentry_key: e.publicKey, sentry_version: Wr, ...(t && { sentry_client: `${t.name}/${t.version}` }) }),
                    Object.keys(n)
                        .map((e) => `${encodeURIComponent(e)}=${encodeURIComponent(n[e])}`)
                        .join("&")
                );
                var n;
            }
            function Gr(e, t, n) {
                return (
                    t ||
                    `${(function (e) {
                        return `${Vr(e)}${e.projectId}/envelope/`;
                    })(e)}?${Yr(e, n)}`
                );
            }
            function Kr(e, t) {
                let n;
                return Wn(e, (e, r) => (t.includes(r) && (n = Array.isArray(e) ? e[1] : void 0), !!n)), n;
            }
            function Jr(e, t) {
                return (n) => {
                    const r = e(n),
                        o = new Map();
                    function i(t, r) {
                        const i = r ? `${t}:${r}` : t;
                        let s = o.get(i);
                        if (!s) {
                            const a = Un(t);
                            if (!a) return;
                            const c = Gr(a, n.tunnel);
                            (s = r
                                ? (function (e, t) {
                                      return (n) => {
                                          const r = e(n);
                                          return {
                                              ...r,
                                              send: async (e) => {
                                                  const n = Kr(e, ["event", "transaction", "profile", "replay_event"]);
                                                  return n && (n.release = t), r.send(e);
                                              },
                                          };
                                      };
                                  })(
                                      e,
                                      r
                                  )({ ...n, url: c })
                                : e({ ...n, url: c })),
                                o.set(i, s);
                        }
                        return [t, s];
                    }
                    return {
                        send: async function (e) {
                            const n = t({
                                    envelope: e,
                                    getEvent: function (t) {
                                        const n = t && t.length ? t : ["event"];
                                        return Kr(e, n);
                                    },
                                })
                                    .map((e) => ("string" == typeof e ? i(e, void 0) : i(e.dsn, e.release)))
                                    .filter((e) => !!e),
                                o = n.length ? n : [["", r]];
                            return (
                                await Promise.all(
                                    o.map(([t, n]) =>
                                        n.send(
                                            (function (e, t) {
                                                return zn(t ? { ...e[0], dsn: t } : e[0], e[1]);
                                            })(e, t)
                                        )
                                    )
                                )
                            )[0];
                        },
                        flush: async function (e) {
                            const t = [...o.values(), r];
                            return (await Promise.all(t.map((t) => t.flush(e)))).every((e) => e);
                        },
                    };
                };
            }
            const Xr = new Map(),
                Qr = new Set();
            function Zr(e, t) {
                return (
                    (function (e) {
                        if (x._sentryModuleMetadata)
                            for (const t of Object.keys(x._sentryModuleMetadata)) {
                                const n = x._sentryModuleMetadata[t];
                                if (Qr.has(t)) continue;
                                Qr.add(t);
                                const r = e(t);
                                for (const e of r.reverse())
                                    if (e.filename) {
                                        Xr.set(e.filename, n);
                                        break;
                                    }
                            }
                    })(e),
                    Xr.get(t)
                );
            }
            function eo(e, t) {
                try {
                    t.exception.values.forEach((t) => {
                        if (t.stacktrace)
                            for (const n of t.stacktrace.frames || []) {
                                if (!n.filename || n.module_metadata) continue;
                                const t = Zr(e, n.filename);
                                t && (n.module_metadata = t);
                            }
                    });
                } catch (e) {}
            }
            function to(e) {
                try {
                    e.exception.values.forEach((e) => {
                        if (e.stacktrace) for (const t of e.stacktrace.frames || []) delete t.module_metadata;
                    });
                } catch (e) {}
            }
            const no = () => ({
                name: "ModuleMetadata",
                setup(e) {
                    e.on("beforeEnvelope", (e) => {
                        Wn(e, (e, t) => {
                            if ("event" === t) {
                                const t = Array.isArray(e) ? e[1] : void 0;
                                t && (to(t), (e[1] = t));
                            }
                        });
                    }),
                        e.on("applyFrameMetadata", (t) => {
                            if (t.type) return;
                            eo(e.getOptions().stackParser, t);
                        });
                },
            });
            function ro(e, ...t) {
                const n = new String(String.raw(e, ...t));
                return (n.__sentry_template_string__ = e.join("\0").replace(/%/g, "%%").replace(/\0/g, "%s")), (n.__sentry_template_values__ = t), n;
            }
            function oo(e, t) {
                let n = 0;
                for (let t = e.length - 1; t >= 0; t--) {
                    const r = e[t];
                    "." === r ? e.splice(t, 1) : ".." === r ? (e.splice(t, 1), n++) : n && (e.splice(t, 1), n--);
                }
                if (t) for (; n--; n) e.unshift("..");
                return e;
            }
            const io = /^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;
            function so(e) {
                const t = e.length > 1024 ? `<truncated>${e.slice(-1024)}` : e,
                    n = io.exec(t);
                return n ? n.slice(1) : [];
            }
            function ao(...e) {
                let t = "",
                    n = !1;
                for (let r = e.length - 1; r >= -1 && !n; r--) {
                    const o = r >= 0 ? e[r] : "/";
                    o && ((t = `${o}/${t}`), (n = "/" === o.charAt(0)));
                }
                return (
                    (t = oo(
                        t.split("/").filter((e) => !!e),
                        !n
                    ).join("/")),
                    (n ? "/" : "") + t || "."
                );
            }
            function co(e) {
                let t = 0;
                for (; t < e.length && "" === e[t]; t++);
                let n = e.length - 1;
                for (; n >= 0 && "" === e[n]; n--);
                return t > n ? [] : e.slice(t, n - t + 1);
            }
            const uo = (e = {}) => {
                const t = e.root,
                    n = e.prefix || "app:///",
                    r = "window" in x && void 0 !== x.window,
                    o =
                        e.iteratee ||
                        (function ({ isBrowser: e, root: t, prefix: n }) {
                            return (r) => {
                                if (!r.filename) return r;
                                const o = /^[a-zA-Z]:\\/.test(r.filename) || (r.filename.includes("\\") && !r.filename.includes("/")),
                                    i = /^\//.test(r.filename);
                                if (e) {
                                    if (t) {
                                        const e = r.filename;
                                        0 === e.indexOf(t) && (r.filename = e.replace(t, n));
                                    }
                                } else if (o || i) {
                                    const e = o ? r.filename.replace(/^[a-zA-Z]:/, "").replace(/\\/g, "/") : r.filename,
                                        i = t
                                            ? (function (e, t) {
                                                  (e = ao(e).slice(1)), (t = ao(t).slice(1));
                                                  const n = co(e.split("/")),
                                                      r = co(t.split("/")),
                                                      o = Math.min(n.length, r.length);
                                                  let i = o;
                                                  for (let e = 0; e < o; e++)
                                                      if (n[e] !== r[e]) {
                                                          i = e;
                                                          break;
                                                      }
                                                  let s = [];
                                                  for (let e = i; e < n.length; e++) s.push("..");
                                                  return (s = s.concat(r.slice(i))), s.join("/");
                                              })(t, e)
                                            : (function (e, t) {
                                                  let n = so(e)[2] || "";
                                                  return t && n.slice(-1 * t.length) === t && (n = n.slice(0, n.length - t.length)), n;
                                              })(e);
                                    r.filename = `${n}${i}`;
                                }
                                return r;
                            };
                        })({ isBrowser: r, root: t, prefix: n });
                return {
                    name: "RewriteFrames",
                    processEvent(e) {
                        let t = e;
                        return (
                            e.exception &&
                                Array.isArray(e.exception.values) &&
                                (t = (function (e) {
                                    try {
                                        return {
                                            ...e,
                                            exception: {
                                                ...e.exception,
                                                values: e.exception.values.map((e) => {
                                                    return { ...e, ...(e.stacktrace && { stacktrace: ((t = e.stacktrace), { ...t, frames: t && t.frames && t.frames.map((e) => o(e)) }) }) };
                                                    var t;
                                                }),
                                            },
                                        };
                                    } catch (t) {
                                        return e;
                                    }
                                })(t)),
                            t
                        );
                    },
                };
            };
            const lo = () => {
                const e = 1e3 * ae();
                return {
                    name: "SessionTiming",
                    processEvent(t) {
                        const n = 1e3 * ae();
                        return { ...t, extra: { ...t.extra, "session:start": e, "session:duration": n - e, "session:end": n } };
                    },
                };
            };
            function po(e) {
                Ee().setClient(e);
            }
            const fo = (e) => ({
                name: "ThirdPartyErrorsFilter",
                setup(e) {
                    e.on("beforeEnvelope", (e) => {
                        Wn(e, (e, t) => {
                            if ("event" === t) {
                                const t = Array.isArray(e) ? e[1] : void 0;
                                t && (to(t), (e[1] = t));
                            }
                        });
                    }),
                        e.on("applyFrameMetadata", (t) => {
                            if (t.type) return;
                            eo(e.getOptions().stackParser, t);
                        });
                },
                processEvent(t) {
                    const n = (function (e) {
                        const t = ze(e);
                        if (!t) return;
                        return t
                            .filter((e) => !!e.filename)
                            .map((e) =>
                                e.module_metadata
                                    ? Object.keys(e.module_metadata)
                                          .filter((e) => e.startsWith(ho))
                                          .map((e) => e.slice(ho.length))
                                    : []
                            );
                    })(t);
                    if (n) {
                        const r = n["drop-error-if-contains-third-party-frames" === e.behaviour || "apply-tag-if-contains-third-party-frames" === e.behaviour ? "some" : "every"]((t) => !t.some((t) => e.filterKeys.includes(t)));
                        if (r) {
                            if ("drop-error-if-contains-third-party-frames" === e.behaviour || "drop-error-if-exclusively-contains-third-party-frames" === e.behaviour) return null;
                            t.tags = { ...t.tags, third_party_code: !0 };
                        }
                    }
                    return t;
                },
            });
            const ho = "_sentryBundlerPluginAppKey:";
            function mo(e) {
                return { ...e, path: "path" in e && Array.isArray(e.path) ? e.path.join(".") : void 0, keys: "keys" in e ? JSON.stringify(e.keys) : void 0, unionErrors: "unionErrors" in e ? JSON.stringify(e.unionErrors) : void 0 };
            }
            function go(e) {
                const t = new Set();
                for (const n of e.issues) n.path && n.path[0] && t.add(n.path[0]);
                return `Failed to validate keys: ${F(Array.from(t).join(", "), 100)}`;
            }
            function vo(e, t, n) {
                return t.exception && t.exception.values && n && n.originalException && p((r = n.originalException)) && "ZodError" === r.name && Array.isArray(r.errors) && 0 !== n.originalException.issues.length
                    ? {
                          ...t,
                          exception: { ...t.exception, values: [{ ...t.exception.values[0], value: go(n.originalException) }, ...t.exception.values.slice(1)] },
                          extra: { ...t.extra, "zoderror.issues": n.originalException.errors.slice(0, e).map(mo) },
                      }
                    : t;
                var r;
            }
            const yo = (e = {}) => {
                    const t = e.limit || 10;
                    return { name: "ZodErrors", processEvent: (e, n) => vo(t, e, n) };
                },
                _o = x;
            let bo = 0;
            function wo() {
                return bo > 0;
            }
            function So(e, t = {}, n) {
                if ("function" != typeof e) return e;
                try {
                    const t = e.__sentry_wrapped__;
                    if (t) return t;
                    if (W(e)) return e;
                } catch (t) {
                    return e;
                }
                const r = function () {
                    const r = Array.prototype.slice.call(arguments);
                    try {
                        n && "function" == typeof n && n.apply(this, arguments);
                        const o = r.map((e) => So(e, t));
                        return e.apply(this, o);
                    } catch (e) {
                        throw (
                            (bo++,
                            setTimeout(() => {
                                bo--;
                            }),
                            Ce((n) => {
                                n.addEventProcessor((e) => (t.mechanism && (ee(e, void 0, void 0), te(e, t.mechanism)), (e.extra = { ...e.extra, arguments: r }), e)), zt(e);
                            }),
                            e)
                        );
                    }
                };
                try {
                    for (const t in e) Object.prototype.hasOwnProperty.call(e, t) && (r[t] = e[t]);
                } catch (e) {}
                H(r, e), z(e, "__sentry_wrapped__", r);
                try {
                    Object.getOwnPropertyDescriptor(r, "name").configurable && Object.defineProperty(r, "name", { get: () => e.name });
                } catch (e) {}
                return r;
            }
            const ko = "Not capturing exception because it's already been captured.";
            class xo {
                constructor(e) {
                    if (
                        ((this._options = e),
                        (this._integrations = {}),
                        (this._numProcessing = 0),
                        (this._outcomes = {}),
                        (this._hooks = {}),
                        (this._eventProcessors = []),
                        e.dsn ? (this._dsn = qn(e.dsn)) : Pe && L.warn("No DSN provided, client will not send events."),
                        this._dsn)
                    ) {
                        const t = Gr(this._dsn, e.tunnel, e._metadata ? e._metadata.sdk : void 0);
                        this._transport = e.transport({ tunnel: this._options.tunnel, recordDroppedEvent: this.recordDroppedEvent.bind(this), ...e.transportOptions, url: t });
                    }
                }
                captureException(e, t, n) {
                    const r = X();
                    if (ne(e)) return Pe && L.log(ko), r;
                    const o = { event_id: r, ...t };
                    return this._process(this.eventFromException(e, o).then((e) => this._captureEvent(e, o, n))), o.event_id;
                }
                captureMessage(e, t, n, r) {
                    const o = { event_id: X(), ...n },
                        i = v(e) ? e : String(e),
                        s = y(e) ? this.eventFromMessage(i, t, o) : this.eventFromException(e, o);
                    return this._process(s.then((e) => this._captureEvent(e, o, r))), o.event_id;
                }
                captureEvent(e, t, n) {
                    const r = X();
                    if (t && t.originalException && ne(t.originalException)) return Pe && L.log(ko), r;
                    const o = { event_id: r, ...t },
                        i = (e.sdkProcessingMetadata || {}).capturedSpanScope;
                    return this._process(this._captureEvent(e, o, i || n)), o.event_id;
                }
                captureSession(e) {
                    "string" != typeof e.release ? Pe && L.warn("Discarded session because of missing or non-string release") : (this.sendSession(e), de(e, { init: !1 }));
                }
                getDsn() {
                    return this._dsn;
                }
                getOptions() {
                    return this._options;
                }
                getSdkMetadata() {
                    return this._options._metadata;
                }
                getTransport() {
                    return this._transport;
                }
                flush(e) {
                    const t = this._transport;
                    return t ? (this.emit("flush"), this._isClientDoneProcessing(e).then((n) => t.flush(e).then((e) => n && e))) : Ge(!0);
                }
                close(e) {
                    return this.flush(e).then((e) => ((this.getOptions().enabled = !1), this.emit("close"), e));
                }
                getEventProcessors() {
                    return this._eventProcessors;
                }
                addEventProcessor(e) {
                    this._eventProcessors.push(e);
                }
                init() {
                    this._isEnabled() && this._setupIntegrations();
                }
                getIntegrationByName(e) {
                    return this._integrations[e];
                }
                addIntegration(e) {
                    const t = this._integrations[e.name];
                    dn(this, e, this._integrations), t || ln(this, [e]);
                }
                sendEvent(e, t = {}) {
                    this.emit("beforeSendEvent", e, t);
                    let n = (function (e, t, n, r) {
                        const o = er(n),
                            i = e.type && "replay_event" !== e.type ? e.type : "event";
                        !(function (e, t) {
                            t &&
                                ((e.sdk = e.sdk || {}),
                                (e.sdk.name = e.sdk.name || t.name),
                                (e.sdk.version = e.sdk.version || t.version),
                                (e.sdk.integrations = [...(e.sdk.integrations || []), ...(t.integrations || [])]),
                                (e.sdk.packages = [...(e.sdk.packages || []), ...(t.packages || [])]));
                        })(e, n && n.sdk);
                        const s = tr(e, o, r, t);
                        return delete e.sdkProcessingMetadata, zn(s, [[{ type: i }, e]]);
                    })(e, this._dsn, this._options._metadata, this._options.tunnel);
                    for (const e of t.attachments || []) n = Hn(n, Xn(e));
                    const r = this.sendEnvelope(n);
                    r && r.then((t) => this.emit("afterSendEvent", e, t), null);
                }
                sendSession(e) {
                    const t = (function (e, t, n, r) {
                        const o = er(n);
                        return zn({ sent_at: new Date().toISOString(), ...(o && { sdk: o }), ...(!!r && t && { dsn: $n(t) }) }, ["aggregates" in e ? [{ type: "sessions" }, e] : [{ type: "session" }, e.toJSON()]]);
                    })(e, this._dsn, this._options._metadata, this._options.tunnel);
                    this.sendEnvelope(t);
                }
                recordDroppedEvent(e, t, n) {
                    if (this._options.sendClientReports) {
                        const n = `${e}:${t}`;
                        Pe && L.log(`Adding outcome: "${n}"`), (this._outcomes[n] = (this._outcomes[n] || 0) + 1);
                    }
                }
                on(e, t) {
                    const n = (this._hooks[e] = this._hooks[e] || []);
                    return (
                        n.push(t),
                        () => {
                            const e = n.indexOf(t);
                            e > -1 && n.splice(e, 1);
                        }
                    );
                }
                emit(e, ...t) {
                    const n = this._hooks[e];
                    n && n.forEach((e) => e(...t));
                }
                sendEnvelope(e) {
                    return (
                        this.emit("beforeEnvelope", e), this._isEnabled() && this._transport ? this._transport.send(e).then(null, (e) => (Pe && L.error("Error while sending event:", e), e)) : (Pe && L.error("Transport disabled"), Ge({}))
                    );
                }
                _setupIntegrations() {
                    const { integrations: e } = this._options;
                    (this._integrations = (function (e, t) {
                        const n = {};
                        return (
                            t.forEach((t) => {
                                t && dn(e, t, n);
                            }),
                            n
                        );
                    })(this, e)),
                        ln(this, e);
                }
                _updateSessionFromEvent(e, t) {
                    let n = !1,
                        r = !1;
                    const o = t.exception && t.exception.values;
                    if (o) {
                        r = !0;
                        for (const e of o) {
                            const t = e.mechanism;
                            if (t && !1 === t.handled) {
                                n = !0;
                                break;
                            }
                        }
                    }
                    const i = "ok" === e.status;
                    ((i && 0 === e.errors) || (i && n)) && (de(e, { ...(n && { status: "crashed" }), errors: e.errors || Number(r || n) }), this.captureSession(e));
                }
                _isClientDoneProcessing(e) {
                    return new Je((t) => {
                        let n = 0;
                        const r = setInterval(() => {
                            0 == this._numProcessing ? (clearInterval(r), t(!0)) : ((n += 1), e && n >= e && (clearInterval(r), t(!1)));
                        }, 1);
                    });
                }
                _isEnabled() {
                    return !1 !== this.getOptions().enabled && void 0 !== this._transport;
                }
                _prepareEvent(e, t, n, r = Ie()) {
                    const o = this.getOptions(),
                        i = Object.keys(this._integrations);
                    return (
                        !t.integrations && i.length > 0 && (t.integrations = i),
                        this.emit("preprocessEvent", e, t),
                        e.type || r.setLastEventId(e.event_id || t.event_id),
                        $t(o, e, t, n, this, r).then((e) => {
                            if (null === e) return e;
                            const t = { ...r.getPropagationContext(), ...(n ? n.getPropagationContext() : void 0) };
                            if (!(e.contexts && e.contexts.trace) && t) {
                                const { traceId: n, spanId: r, parentSpanId: o, dsc: i } = t;
                                e.contexts = { trace: K({ trace_id: n, span_id: r, parent_span_id: o }), ...e.contexts };
                                const s = i || Nt(n, this);
                                e.sdkProcessingMetadata = { dynamicSamplingContext: s, ...e.sdkProcessingMetadata };
                            }
                            return e;
                        })
                    );
                }
                _captureEvent(e, t = {}, n) {
                    return this._processEvent(e, t, n).then(
                        (e) => e.event_id,
                        (e) => {
                            if (Pe) {
                                const t = e;
                                "log" === t.logLevel ? L.log(t.message) : L.warn(t);
                            }
                        }
                    );
                }
                _processEvent(e, t, n) {
                    const r = this.getOptions(),
                        { sampleRate: o } = r,
                        i = Io(e),
                        s = Eo(e),
                        a = e.type || "error",
                        c = `before send for type \`${a}\``,
                        u = void 0 === o ? void 0 : Ln(o);
                    if (s && "number" == typeof u && Math.random() > u) return this.recordDroppedEvent("sample_rate", "error", e), Ke(new kr(`Discarding event because it's not included in the random sample (sampling rate = ${o})`, "log"));
                    const l = "replay_event" === a ? "replay" : a,
                        d = (e.sdkProcessingMetadata || {}).capturedSpanIsolationScope;
                    return this._prepareEvent(e, t, n, d)
                        .then((n) => {
                            if (null === n) throw (this.recordDroppedEvent("event_processor", l, e), new kr("An event processor returned `null`, will not send event.", "log"));
                            if (t.data && !0 === t.data.__sentry__) return n;
                            const o = (function (e, t, n, r) {
                                const { beforeSend: o, beforeSendTransaction: i, beforeSendSpan: s } = t;
                                if (Eo(n) && o) return o(n, r);
                                if (Io(n)) {
                                    if (n.spans && s) {
                                        const t = [];
                                        for (const r of n.spans) {
                                            const n = s(r);
                                            n ? t.push(n) : e.recordDroppedEvent("before_send", "span");
                                        }
                                        n.spans = t;
                                    }
                                    if (i) return i(n, r);
                                }
                                return n;
                            })(this, r, n, t);
                            return (function (e, t) {
                                const n = `${t} must return \`null\` or a valid event.`;
                                if (w(e))
                                    return e.then(
                                        (e) => {
                                            if (!_(e) && null !== e) throw new kr(n);
                                            return e;
                                        },
                                        (e) => {
                                            throw new kr(`${t} rejected with ${e}`);
                                        }
                                    );
                                if (!_(e) && null !== e) throw new kr(n);
                                return e;
                            })(o, c);
                        })
                        .then((r) => {
                            if (null === r) {
                                if ((this.recordDroppedEvent("before_send", l, e), Io(e))) {
                                    const t = 1 + (e.spans || []).length;
                                    this._outcomes.span = (this._outcomes.span || 0) + t;
                                }
                                throw new kr(`${c} returned \`null\`, will not send event.`, "log");
                            }
                            const o = n && n.getSession();
                            !i && o && this._updateSessionFromEvent(o, r);
                            const s = r.transaction_info;
                            if (i && s && r.transaction !== e.transaction) {
                                const e = "custom";
                                r.transaction_info = { ...s, source: e };
                            }
                            return this.sendEvent(r, t), r;
                        })
                        .then(null, (e) => {
                            if (e instanceof kr) throw e;
                            throw (
                                (this.captureException(e, { data: { __sentry__: !0 }, originalException: e }),
                                new kr(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: ${e}`))
                            );
                        });
                }
                _process(e) {
                    this._numProcessing++,
                        e.then(
                            (e) => (this._numProcessing--, e),
                            (e) => (this._numProcessing--, e)
                        );
                }
                _clearOutcomes() {
                    const e = this._outcomes;
                    return (
                        (this._outcomes = {}),
                        Object.entries(e).map(([e, t]) => {
                            const [n, r] = e.split(":");
                            return { reason: n, category: r, quantity: t };
                        })
                    );
                }
                _flushOutcomes() {
                    Pe && L.log("Flushing outcomes...");
                    const e = this._clearOutcomes();
                    if (0 === e.length) return void (Pe && L.log("No outcomes to send"));
                    if (!this._dsn) return void (Pe && L.log("No dsn provided, will not send outcomes"));
                    Pe && L.log("Sending outcomes:", e);
                    const t = ((n = e), zn((r = this._options.tunnel && $n(this._dsn)) ? { dsn: r } : {}, [[{ type: "client_report" }, { timestamp: o || se(), discarded_events: n }]]));
                    var n, r, o;
                    this.sendEnvelope(t);
                }
            }
            function Eo(e) {
                return void 0 === e.type;
            }
            function Io(e) {
                return "transaction" === e.type;
            }
            const To = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
            function Co(e, t) {
                const n = Ro(e, t),
                    r = { type: t && t.name, value: No(t) };
                return n.length && (r.stacktrace = { frames: n }), void 0 === r.type && "" === r.value && (r.value = "Unrecoverable error caught"), r;
            }
            function Ao(e, t, n, r) {
                const o = Me(),
                    i = o && o.getOptions().normalizeDepth,
                    s = (function (e) {
                        for (const t in e)
                            if (Object.prototype.hasOwnProperty.call(e, t)) {
                                const n = e[t];
                                if (n instanceof Error) return n;
                            }
                        return;
                    })(t),
                    a = { __serialized__: We(t, i) };
                if (s) return { exception: { values: [Co(e, s)] }, extra: a };
                const c = { exception: { values: [{ type: b(t) ? t.constructor.name : r ? "UnhandledRejection" : "Error", value: jo(t, { isUnhandledRejection: r }) }] }, extra: a };
                if (n) {
                    const t = Ro(e, n);
                    t.length && (c.exception.values[0].stacktrace = { frames: t });
                }
                return c;
            }
            function Mo(e, t) {
                return { exception: { values: [Co(e, t)] } };
            }
            function Ro(e, t) {
                const n = t.stacktrace || t.stack || "",
                    r = (function (e) {
                        if (e && Oo.test(e.message)) return 1;
                        return 0;
                    })(t),
                    o = (function (e) {
                        if ("number" == typeof e.framesToPop) return e.framesToPop;
                        return 0;
                    })(t);
                try {
                    return e(n, r, o);
                } catch (e) {}
                return [];
            }
            const Oo = /Minified React error #\d+;/i;
            function No(e) {
                const t = e && e.message;
                return t ? (t.error && "string" == typeof t.error.message ? t.error.message : t) : "No error message";
            }
            function Po(e, t, n, r) {
                const o = Lo(e, t, (n && n.syntheticException) || void 0, r);
                return te(o), (o.level = "error"), n && n.event_id && (o.event_id = n.event_id), Ge(o);
            }
            function Do(e, t, n = "info", r, o) {
                const i = Fo(e, t, (r && r.syntheticException) || void 0, o);
                return (i.level = n), r && r.event_id && (i.event_id = r.event_id), Ge(i);
            }
            function Lo(e, t, n, r, o) {
                let i;
                if (h(t) && t.error) {
                    return Mo(e, t.error);
                }
                if (m(t) || f(t, "DOMException")) {
                    const o = t;
                    if ("stack" in t) i = Mo(e, t);
                    else {
                        const t = o.name || (m(o) ? "DOMError" : "DOMException"),
                            s = o.message ? `${t}: ${o.message}` : t;
                        (i = Fo(e, s, n, r)), ee(i, s);
                    }
                    return "code" in o && (i.tags = { ...i.tags, "DOMException.code": `${o.code}` }), i;
                }
                if (p(t)) return Mo(e, t);
                if (_(t) || b(t)) {
                    return (i = Ao(e, t, n, o)), te(i, { synthetic: !0 }), i;
                }
                return (i = Fo(e, t, n, r)), ee(i, `${t}`, void 0), te(i, { synthetic: !0 }), i;
            }
            function Fo(e, t, n, r) {
                const o = {};
                if (r && n) {
                    const r = Ro(e, n);
                    r.length && (o.exception = { values: [{ value: t, stacktrace: { frames: r } }] });
                }
                if (v(t)) {
                    const { __sentry_template_string__: e, __sentry_template_values__: n } = t;
                    return (o.logentry = { message: e, params: n }), o;
                }
                return (o.message = t), o;
            }
            function jo(e, { isUnhandledRejection: t }) {
                const n = (function (e, t = 40) {
                        const n = Object.keys(V(e));
                        n.sort();
                        const r = n[0];
                        if (!r) return "[object has no keys]";
                        if (r.length >= t) return F(r, t);
                        for (let e = n.length; e > 0; e--) {
                            const r = n.slice(0, e).join(", ");
                            if (!(r.length > t)) return e === n.length ? r : F(r, t);
                        }
                        return "";
                    })(e),
                    r = t ? "promise rejection" : "exception";
                if (h(e)) return `Event \`ErrorEvent\` captured as ${r} with message \`${e.message}\``;
                if (b(e)) {
                    return `Event \`${(function (e) {
                        try {
                            const t = Object.getPrototypeOf(e);
                            return t ? t.constructor.name : void 0;
                        } catch (e) {}
                    })(e)}\` (type=${e.type}) captured as ${r}`;
                }
                return `Object captured as ${r} with keys: ${n}`;
            }
            function $o(e, { metadata: t, tunnel: n, dsn: r }) {
                const o = { event_id: e.event_id, sent_at: new Date().toISOString(), ...(t && t.sdk && { sdk: { name: t.sdk.name, version: t.sdk.version } }), ...(!!n && !!r && { dsn: $n(r) }) },
                    i = (function (e) {
                        return [{ type: "user_report" }, e];
                    })(e);
                return zn(o, [i]);
            }
            class Uo extends xo {
                constructor(e) {
                    const n = { parentSpanIsAlwaysRootSpan: !0, ...e };
                    !(function (e, n, r = [n], o = "npm") {
                        const i = e._metadata || {};
                        i.sdk || (i.sdk = { name: `sentry.javascript.${n}`, packages: r.map((e) => ({ name: `${o}:@sentry/${e}`, version: t })), version: t }), (e._metadata = i);
                    })(n, "browser", ["browser"], _o.SENTRY_SDK_SOURCE || "npm"),
                        super(n),
                        n.sendClientReports &&
                            _o.document &&
                            _o.document.addEventListener("visibilitychange", () => {
                                "hidden" === _o.document.visibilityState && this._flushOutcomes();
                            });
                }
                eventFromException(e, t) {
                    return Po(this._options.stackParser, e, t, this._options.attachStacktrace);
                }
                eventFromMessage(e, t = "info", n) {
                    return Do(this._options.stackParser, e, t, n, this._options.attachStacktrace);
                }
                captureUserFeedback(e) {
                    if (!this._isEnabled()) return void (To && L.warn("SDK not enabled, will not capture user feedback."));
                    const t = $o(e, { metadata: this.getSdkMetadata(), dsn: this.getDsn(), tunnel: this.getOptions().tunnel });
                    this.sendEnvelope(t);
                }
                _prepareEvent(e, t, n) {
                    return (e.platform = e.platform || "javascript"), super._prepareEvent(e, t, n);
                }
            }
            const Bo = x;
            function qo() {
                if (!("fetch" in Bo)) return !1;
                try {
                    return new Headers(), new Request("http://www.example.com"), new Response(), !0;
                } catch (e) {
                    return !1;
                }
            }
            function zo(e) {
                return e && /^function\s+\w+\(\)\s+\{\s+\[native code\]\s+\}$/.test(e.toString());
            }
            function Ho() {
                if ("string" == typeof EdgeRuntime) return !0;
                if (!qo()) return !1;
                if (zo(Bo.fetch)) return !0;
                let e = !1;
                const t = Bo.document;
                if (t && "function" == typeof t.createElement)
                    try {
                        const n = t.createElement("iframe");
                        (n.hidden = !0), t.head.appendChild(n), n.contentWindow && n.contentWindow.fetch && (e = zo(n.contentWindow.fetch)), t.head.removeChild(n);
                    } catch (e) {
                        O && L.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", e);
                    }
                return e;
            }
            const Wo = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__,
                Vo = x,
                Yo = {};
            function Go(e) {
                const t = Yo[e];
                if (t) return t;
                let n = Vo[e];
                if (zo(n)) return (Yo[e] = n.bind(Vo));
                const r = Vo.document;
                if (r && "function" == typeof r.createElement)
                    try {
                        const t = r.createElement("iframe");
                        (t.hidden = !0), r.head.appendChild(t);
                        const o = t.contentWindow;
                        o && o[e] && (n = o[e]), r.head.removeChild(t);
                    } catch (t) {
                        Wo && L.warn(`Could not create sandbox iframe for ${e} check, bailing to window.${e}: `, t);
                    }
                return n ? (Yo[e] = n.bind(Vo)) : n;
            }
            function Ko(e) {
                Yo[e] = void 0;
            }
            function Jo(...e) {
                return Go("setTimeout")(...e);
            }
            function Xo(e, t = Go("fetch")) {
                let n = 0,
                    r = 0;
                return Mr(e, function (o) {
                    const i = o.body.length;
                    (n += i), r++;
                    const s = { body: o.body, method: "POST", referrerPolicy: "origin", headers: e.headers, keepalive: n <= 6e4 && r < 15, ...e.fetchOptions };
                    if (!t) return Ko("fetch"), Ke("No fetch implementation available");
                    try {
                        return t(e.url, s).then((e) => ((n -= i), r--, { statusCode: e.status, headers: { "x-sentry-rate-limits": e.headers.get("X-Sentry-Rate-Limits"), "retry-after": e.headers.get("Retry-After") } }));
                    } catch (e) {
                        return Ko("fetch"), (n -= i), r--, Ke(e);
                    }
                });
            }
            function Qo(e, t, n, r) {
                const o = { filename: e, function: "<anonymous>" === t ? Le : t, in_app: !0 };
                return void 0 !== n && (o.lineno = n), void 0 !== r && (o.colno = r), o;
            }
            const Zo = /^\s*at (\S+?)(?::(\d+))(?::(\d+))\s*$/i,
                ei = /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
                ti = /\((\S*)(?::(\d+))(?::(\d+))\)/,
                ni = [
                    30,
                    (e) => {
                        const t = Zo.exec(e);
                        if (t) {
                            const [, e, n, r] = t;
                            return Qo(e, Le, +n, +r);
                        }
                        const n = ei.exec(e);
                        if (n) {
                            if (n[2] && 0 === n[2].indexOf("eval")) {
                                const e = ti.exec(n[2]);
                                e && ((n[2] = e[1]), (n[3] = e[2]), (n[4] = e[3]));
                            }
                            const [e, t] = hi(n[1] || Le, n[2]);
                            return Qo(t, e, n[3] ? +n[3] : void 0, n[4] ? +n[4] : void 0);
                        }
                    },
                ],
                ri = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,
                oi = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
                ii = [
                    50,
                    (e) => {
                        const t = ri.exec(e);
                        if (t) {
                            if (t[3] && t[3].indexOf(" > eval") > -1) {
                                const e = oi.exec(t[3]);
                                e && ((t[1] = t[1] || "eval"), (t[3] = e[1]), (t[4] = e[2]), (t[5] = ""));
                            }
                            let e = t[3],
                                n = t[1] || Le;
                            return ([n, e] = hi(n, e)), Qo(e, n, t[4] ? +t[4] : void 0, t[5] ? +t[5] : void 0);
                        }
                    },
                ],
                si = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
                ai = [
                    40,
                    (e) => {
                        const t = si.exec(e);
                        return t ? Qo(t[2], t[1] || Le, +t[3], t[4] ? +t[4] : void 0) : void 0;
                    },
                ],
                ci = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i,
                ui = [
                    10,
                    (e) => {
                        const t = ci.exec(e);
                        return t ? Qo(t[2], t[3] || Le, +t[1]) : void 0;
                    },
                ],
                li = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\(.*\))? in (.*):\s*$/i,
                di = [
                    20,
                    (e) => {
                        const t = li.exec(e);
                        return t ? Qo(t[5], t[3] || t[4] || Le, +t[1], +t[2]) : void 0;
                    },
                ],
                pi = [ni, ii],
                fi = $e(...pi),
                hi = (e, t) => {
                    const n = -1 !== e.indexOf("safari-extension"),
                        r = -1 !== e.indexOf("safari-web-extension");
                    return n || r ? [-1 !== e.indexOf("@") ? e.split("@")[0] : Le, n ? `safari-extension:${t}` : `safari-web-extension:${t}`] : [e, t];
                },
                mi = x;
            let gi;
            function vi(e) {
                const t = "history";
                mn(t, e), gn(t, yi);
            }
            function yi() {
                if (
                    !(function () {
                        const e = mi.chrome,
                            t = e && e.app && e.app.runtime,
                            n = "history" in mi && !!mi.history.pushState && !!mi.history.replaceState;
                        return !t && n;
                    })()
                )
                    return;
                const e = Vo.onpopstate;
                function t(e) {
                    return function (...t) {
                        const n = t.length > 2 ? t[2] : void 0;
                        if (n) {
                            const e = gi,
                                t = String(n);
                            gi = t;
                            vn("history", { from: e, to: t });
                        }
                        return e.apply(this, t);
                    };
                }
                (Vo.onpopstate = function (...t) {
                    const n = Vo.location.href,
                        r = gi;
                    gi = n;
                    if ((vn("history", { from: r, to: n }), e))
                        try {
                            return e.apply(this, t);
                        } catch (e) {}
                }),
                    q(Vo.history, "pushState", t),
                    q(Vo.history, "replaceState", t);
            }
            const _i = 1e3;
            let bi, wi, Si;
            function ki(e) {
                mn("dom", e), gn("dom", xi);
            }
            function xi() {
                if (!Vo.document) return;
                const e = vn.bind(null, "dom"),
                    t = Ei(e, !0);
                Vo.document.addEventListener("click", t, !1),
                    Vo.document.addEventListener("keypress", t, !1),
                    ["EventTarget", "Node"].forEach((t) => {
                        const n = Vo[t] && Vo[t].prototype;
                        n &&
                            n.hasOwnProperty &&
                            n.hasOwnProperty("addEventListener") &&
                            (q(n, "addEventListener", function (t) {
                                return function (n, r, o) {
                                    if ("click" === n || "keypress" == n)
                                        try {
                                            const r = this,
                                                i = (r.__sentry_instrumentation_handlers__ = r.__sentry_instrumentation_handlers__ || {}),
                                                s = (i[n] = i[n] || { refCount: 0 });
                                            if (!s.handler) {
                                                const r = Ei(e);
                                                (s.handler = r), t.call(this, n, r, o);
                                            }
                                            s.refCount++;
                                        } catch (e) {}
                                    return t.call(this, n, r, o);
                                };
                            }),
                            q(n, "removeEventListener", function (e) {
                                return function (t, n, r) {
                                    if ("click" === t || "keypress" == t)
                                        try {
                                            const n = this,
                                                o = n.__sentry_instrumentation_handlers__ || {},
                                                i = o[t];
                                            i && (i.refCount--, i.refCount <= 0 && (e.call(this, t, i.handler, r), (i.handler = void 0), delete o[t]), 0 === Object.keys(o).length && delete n.__sentry_instrumentation_handlers__);
                                        } catch (e) {}
                                    return e.call(this, t, n, r);
                                };
                            }));
                    });
            }
            function Ei(e, t = !1) {
                return (n) => {
                    if (!n || n._sentryCaptured) return;
                    const r = (function (e) {
                        try {
                            return e.target;
                        } catch (e) {
                            return null;
                        }
                    })(n);
                    if (
                        (function (e, t) {
                            return "keypress" === e && (!t || !t.tagName || ("INPUT" !== t.tagName && "TEXTAREA" !== t.tagName && !t.isContentEditable));
                        })(n.type, r)
                    )
                        return;
                    z(n, "_sentryCaptured", !0), r && !r._sentryId && z(r, "_sentryId", X());
                    const o = "keypress" === n.type ? "input" : n.type;
                    if (
                        !(function (e) {
                            if (e.type !== wi) return !1;
                            try {
                                if (!e.target || e.target._sentryId !== Si) return !1;
                            } catch (e) {}
                            return !0;
                        })(n)
                    ) {
                        e({ event: n, name: o, global: t }), (wi = n.type), (Si = r ? r._sentryId : void 0);
                    }
                    clearTimeout(bi),
                        (bi = Vo.setTimeout(() => {
                            (Si = void 0), (wi = void 0);
                        }, _i));
                };
            }
            const Ii = "__sentry_xhr_v3__";
            function Ti(e) {
                mn("xhr", e), gn("xhr", Ci);
            }
            function Ci() {
                if (!Vo.XMLHttpRequest) return;
                const e = XMLHttpRequest.prototype;
                q(e, "open", function (e) {
                    return function (...t) {
                        const n = 1e3 * ae(),
                            r = g(t[0]) ? t[0].toUpperCase() : void 0,
                            o = (function (e) {
                                if (g(e)) return e;
                                try {
                                    return e.toString();
                                } catch (e) {}
                                return;
                            })(t[1]);
                        if (!r || !o) return e.apply(this, t);
                        (this[Ii] = { method: r, url: o, request_headers: {} }), "POST" === r && o.match(/sentry_key/) && (this.__sentry_own_request__ = !0);
                        const i = () => {
                            const e = this[Ii];
                            if (e && 4 === this.readyState) {
                                try {
                                    e.status_code = this.status;
                                } catch (e) {}
                                vn("xhr", { endTimestamp: 1e3 * ae(), startTimestamp: n, xhr: this });
                            }
                        };
                        return (
                            "onreadystatechange" in this && "function" == typeof this.onreadystatechange
                                ? q(this, "onreadystatechange", function (e) {
                                      return function (...t) {
                                          return i(), e.apply(this, t);
                                      };
                                  })
                                : this.addEventListener("readystatechange", i),
                            q(this, "setRequestHeader", function (e) {
                                return function (...t) {
                                    const [n, r] = t,
                                        o = this[Ii];
                                    return o && g(n) && g(r) && (o.request_headers[n.toLowerCase()] = r), e.apply(this, t);
                                };
                            }),
                            e.apply(this, t)
                        );
                    };
                }),
                    q(e, "send", function (e) {
                        return function (...t) {
                            const n = this[Ii];
                            if (!n) return e.apply(this, t);
                            void 0 !== t[0] && (n.body = t[0]);
                            return vn("xhr", { startTimestamp: 1e3 * ae(), xhr: this }), e.apply(this, t);
                        };
                    });
            }
            function Ai(e) {
                const t = "fetch";
                mn(t, e), gn(t, Mi);
            }
            function Mi() {
                Ho() &&
                    q(x, "fetch", function (e) {
                        return function (...t) {
                            const { method: n, url: r } = (function (e) {
                                    if (0 === e.length) return { method: "GET", url: "" };
                                    if (2 === e.length) {
                                        const [t, n] = e;
                                        return { url: Oi(t), method: Ri(n, "method") ? String(n.method).toUpperCase() : "GET" };
                                    }
                                    const t = e[0];
                                    return { url: Oi(t), method: Ri(t, "method") ? String(t.method).toUpperCase() : "GET" };
                                })(t),
                                o = { args: t, fetchData: { method: n, url: r }, startTimestamp: 1e3 * ae() };
                            vn("fetch", { ...o });
                            const i = new Error().stack;
                            return e.apply(x, t).then(
                                (e) => (vn("fetch", { ...o, endTimestamp: 1e3 * ae(), response: e }), e),
                                (e) => {
                                    throw (vn("fetch", { ...o, endTimestamp: 1e3 * ae(), error: e }), p(e) && void 0 === e.stack && ((e.stack = i), z(e, "framesToPop", 1)), e);
                                }
                            );
                        };
                    });
            }
            function Ri(e, t) {
                return !!e && "object" == typeof e && !!e[t];
            }
            function Oi(e) {
                return "string" == typeof e ? e : e ? (Ri(e, "url") ? e.url : e.toString ? e.toString() : "") : "";
            }
            function Ni(e) {
                if (!e) return {};
                const t = e.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
                if (!t) return {};
                const n = t[6] || "",
                    r = t[8] || "";
                return { host: t[4], path: t[5], protocol: t[2], search: n, hash: r, relative: t[5] + n + r };
            }
            const Pi = 1024,
                Di = (e = {}) => {
                    const t = { console: !0, dom: !0, fetch: !0, history: !0, sentry: !0, xhr: !0, ...e };
                    return {
                        name: "Breadcrumbs",
                        setup(e) {
                            t.console &&
                                Cn(
                                    (function (e) {
                                        return function (t) {
                                            if (Me() !== e) return;
                                            const n = { category: "console", data: { arguments: t.args, logger: "console" }, level: Rn(t.level), message: $(t.args, " ") };
                                            if ("assert" === t.level) {
                                                if (!1 !== t.args[0]) return;
                                                (n.message = `Assertion failed: ${$(t.args.slice(1), " ") || "console.assert"}`), (n.data.arguments = t.args.slice(1));
                                            }
                                            Oe(n, { input: t.args, level: t.level });
                                        };
                                    })(e)
                                ),
                                t.dom &&
                                    ki(
                                        (function (e, t) {
                                            return function (n) {
                                                if (Me() !== e) return;
                                                let r,
                                                    o,
                                                    i = "object" == typeof t ? t.serializeAttribute : void 0,
                                                    s = "object" == typeof t && "number" == typeof t.maxStringLength ? t.maxStringLength : void 0;
                                                s && s > Pi && (To && L.warn(`\`dom.maxStringLength\` cannot exceed 1024, but a value of ${s} was configured. Sentry will use 1024 instead.`), (s = Pi)), "string" == typeof i && (i = [i]);
                                                try {
                                                    const e = n.event,
                                                        t = (function (e) {
                                                            return !!e && !!e.target;
                                                        })(e)
                                                            ? e.target
                                                            : e;
                                                    (r = C(t, { keyAttrs: i, maxStringLength: s })), (o = R(t));
                                                } catch (e) {
                                                    r = "<unknown>";
                                                }
                                                if (0 === r.length) return;
                                                const a = { category: `ui.${n.name}`, message: r };
                                                o && (a.data = { "ui.component_name": o }), Oe(a, { event: n.event, name: n.name, global: n.global });
                                            };
                                        })(e, t.dom)
                                    ),
                                t.xhr &&
                                    Ti(
                                        (function (e) {
                                            return function (t) {
                                                if (Me() !== e) return;
                                                const { startTimestamp: n, endTimestamp: r } = t,
                                                    o = t.xhr[Ii];
                                                if (!n || !r || !o) return;
                                                const { method: i, url: s, status_code: a, body: c } = o;
                                                Oe({ category: "xhr", data: { method: i, url: s, status_code: a }, type: "http" }, { xhr: t.xhr, input: c, startTimestamp: n, endTimestamp: r });
                                            };
                                        })(e)
                                    ),
                                t.fetch &&
                                    Ai(
                                        (function (e) {
                                            return function (t) {
                                                if (Me() !== e) return;
                                                const { startTimestamp: n, endTimestamp: r } = t;
                                                if (r && (!t.fetchData.url.match(/sentry_key/) || "POST" !== t.fetchData.method))
                                                    if (t.error) {
                                                        Oe({ category: "fetch", data: t.fetchData, level: "error", type: "http" }, { data: t.error, input: t.args, startTimestamp: n, endTimestamp: r });
                                                    } else {
                                                        const e = t.response;
                                                        Oe({ category: "fetch", data: { ...t.fetchData, status_code: e && e.status }, type: "http" }, { input: t.args, response: e, startTimestamp: n, endTimestamp: r });
                                                    }
                                            };
                                        })(e)
                                    ),
                                t.history &&
                                    vi(
                                        (function (e) {
                                            return function (t) {
                                                if (Me() !== e) return;
                                                let n = t.from,
                                                    r = t.to;
                                                const o = Ni(_o.location.href);
                                                let i = n ? Ni(n) : void 0;
                                                const s = Ni(r);
                                                (i && i.path) || (i = o),
                                                    o.protocol === s.protocol && o.host === s.host && (r = s.relative),
                                                    o.protocol === i.protocol && o.host === i.host && (n = i.relative),
                                                    Oe({ category: "navigation", data: { from: n, to: r } });
                                            };
                                        })(e)
                                    ),
                                t.sentry &&
                                    e.on(
                                        "beforeSendEvent",
                                        (function (e) {
                                            return function (t) {
                                                Me() === e && Oe({ category: "sentry." + ("transaction" === t.type ? "transaction" : "event"), event_id: t.event_id, level: t.level, message: Z(t) }, { event: t });
                                            };
                                        })(e)
                                    );
                        },
                    };
                };
            const Li = [
                    "EventTarget",
                    "Window",
                    "Node",
                    "ApplicationCache",
                    "AudioTrackList",
                    "BroadcastChannel",
                    "ChannelMergerNode",
                    "CryptoOperation",
                    "EventSource",
                    "FileReader",
                    "HTMLUnknownElement",
                    "IDBDatabase",
                    "IDBRequest",
                    "IDBTransaction",
                    "KeyOperation",
                    "MediaController",
                    "MessagePort",
                    "ModalWindow",
                    "Notification",
                    "SVGElementInstance",
                    "Screen",
                    "SharedWorker",
                    "TextTrack",
                    "TextTrackCue",
                    "TextTrackList",
                    "WebSocket",
                    "WebSocketWorker",
                    "Worker",
                    "XMLHttpRequest",
                    "XMLHttpRequestEventTarget",
                    "XMLHttpRequestUpload",
                ],
                Fi = (e = {}) => {
                    const t = { XMLHttpRequest: !0, eventTarget: !0, requestAnimationFrame: !0, setInterval: !0, setTimeout: !0, ...e };
                    return {
                        name: "BrowserApiErrors",
                        setupOnce() {
                            t.setTimeout && q(_o, "setTimeout", ji),
                                t.setInterval && q(_o, "setInterval", ji),
                                t.requestAnimationFrame && q(_o, "requestAnimationFrame", $i),
                                t.XMLHttpRequest && "XMLHttpRequest" in _o && q(XMLHttpRequest.prototype, "send", Ui);
                            const e = t.eventTarget;
                            if (e) {
                                (Array.isArray(e) ? e : Li).forEach(Bi);
                            }
                        },
                    };
                };
            function ji(e) {
                return function (...t) {
                    const n = t[0];
                    return (t[0] = So(n, { mechanism: { data: { function: qe(e) }, handled: !1, type: "instrument" } })), e.apply(this, t);
                };
            }
            function $i(e) {
                return function (t) {
                    return e.apply(this, [So(t, { mechanism: { data: { function: "requestAnimationFrame", handler: qe(e) }, handled: !1, type: "instrument" } })]);
                };
            }
            function Ui(e) {
                return function (...t) {
                    const n = this;
                    return (
                        ["onload", "onerror", "onprogress", "onreadystatechange"].forEach((e) => {
                            e in n &&
                                "function" == typeof n[e] &&
                                q(n, e, function (t) {
                                    const n = { mechanism: { data: { function: e, handler: qe(t) }, handled: !1, type: "instrument" } },
                                        r = W(t);
                                    return r && (n.mechanism.data.handler = qe(r)), So(t, n);
                                });
                        }),
                        e.apply(this, t)
                    );
                };
            }
            function Bi(e) {
                const t = _o,
                    n = t[e] && t[e].prototype;
                n &&
                    n.hasOwnProperty &&
                    n.hasOwnProperty("addEventListener") &&
                    (q(n, "addEventListener", function (t) {
                        return function (n, r, o) {
                            try {
                                "function" == typeof r.handleEvent && (r.handleEvent = So(r.handleEvent, { mechanism: { data: { function: "handleEvent", handler: qe(r), target: e }, handled: !1, type: "instrument" } }));
                            } catch (e) {}
                            return t.apply(this, [n, So(r, { mechanism: { data: { function: "addEventListener", handler: qe(r), target: e }, handled: !1, type: "instrument" } }), o]);
                        };
                    }),
                    q(n, "removeEventListener", function (e) {
                        return function (t, n, r) {
                            const o = n;
                            try {
                                const n = o && o.__sentry_wrapped__;
                                n && e.call(this, t, n, r);
                            } catch (e) {}
                            return e.call(this, t, o, r);
                        };
                    }));
            }
            const qi = (e = {}) => {
                const t = { onerror: !0, onunhandledrejection: !0, ...e };
                return {
                    name: "GlobalHandlers",
                    setupOnce() {
                        Error.stackTraceLimit = 50;
                    },
                    setup(e) {
                        t.onerror &&
                            (!(function (e) {
                                _n((t) => {
                                    const { stackParser: n, attachStacktrace: r } = Hi();
                                    if (Me() !== e || wo()) return;
                                    const { msg: o, url: i, line: s, column: a, error: c } = t,
                                        u = (function (e, t, n, r) {
                                            const o = (e.exception = e.exception || {}),
                                                i = (o.values = o.values || []),
                                                s = (i[0] = i[0] || {}),
                                                a = (s.stacktrace = s.stacktrace || {}),
                                                c = (a.frames = a.frames || []),
                                                u = isNaN(parseInt(r, 10)) ? void 0 : r,
                                                l = isNaN(parseInt(n, 10)) ? void 0 : n,
                                                d = g(t) && t.length > 0 ? t : M();
                                            0 === c.length && c.push({ colno: u, filename: d, function: Le, in_app: !0, lineno: l });
                                            return e;
                                        })(Lo(n, c || o, void 0, r, !1), i, s, a);
                                    (u.level = "error"), Wt(u, { originalException: c, mechanism: { handled: !1, type: "onerror" } });
                                });
                            })(e),
                            zi("onerror")),
                            t.onunhandledrejection &&
                                (!(function (e) {
                                    Sn((t) => {
                                        const { stackParser: n, attachStacktrace: r } = Hi();
                                        if (Me() !== e || wo()) return;
                                        const o = (function (e) {
                                                if (y(e)) return e;
                                                try {
                                                    if ("reason" in e) return e.reason;
                                                    if ("detail" in e && "reason" in e.detail) return e.detail.reason;
                                                } catch (e) {}
                                                return e;
                                            })(t),
                                            i = y(o) ? { exception: { values: [{ type: "UnhandledRejection", value: `Non-Error promise rejection captured with value: ${String(o)}` }] } } : Lo(n, o, void 0, r, !0);
                                        (i.level = "error"), Wt(i, { originalException: o, mechanism: { handled: !1, type: "onunhandledrejection" } });
                                    });
                                })(e),
                                zi("onunhandledrejection"));
                    },
                };
            };
            function zi(e) {
                To && L.log(`Global Handler attached: ${e}`);
            }
            function Hi() {
                const e = Me();
                return (e && e.getOptions()) || { stackParser: () => [], attachStacktrace: !1 };
            }
            const Wi = () => ({
                name: "HttpContext",
                preprocessEvent(e) {
                    if (!_o.navigator && !_o.location && !_o.document) return;
                    const t = (e.request && e.request.url) || (_o.location && _o.location.href),
                        { referrer: n } = _o.document || {},
                        { userAgent: r } = _o.navigator || {},
                        o = { ...(e.request && e.request.headers), ...(n && { Referer: n }), ...(r && { "User-Agent": r }) },
                        i = { ...e.request, ...(t && { url: t }), headers: o };
                    e.request = i;
                },
            });
            function Vi(e, t, n = 250, r, o, i, s) {
                if (!(i.exception && i.exception.values && s && S(s.originalException, Error))) return;
                const a = i.exception.values.length > 0 ? i.exception.values[i.exception.values.length - 1] : void 0;
                var c, u;
                a && (i.exception.values = ((c = Yi(e, t, o, s.originalException, r, i.exception.values, a, 0)), (u = n), c.map((e) => (e.value && (e.value = F(e.value, u)), e))));
            }
            function Yi(e, t, n, r, o, i, s, a) {
                if (i.length >= n + 1) return i;
                let c = [...i];
                if (S(r[o], Error)) {
                    Gi(s, a);
                    const i = e(t, r[o]),
                        u = c.length;
                    Ki(i, o, u, a), (c = Yi(e, t, n, r[o], o, [i, ...c], i, u));
                }
                return (
                    Array.isArray(r.errors) &&
                        r.errors.forEach((r, i) => {
                            if (S(r, Error)) {
                                Gi(s, a);
                                const u = e(t, r),
                                    l = c.length;
                                Ki(u, `errors[${i}]`, l, a), (c = Yi(e, t, n, r, o, [u, ...c], u, l));
                            }
                        }),
                    c
                );
            }
            function Gi(e, t) {
                (e.mechanism = e.mechanism || { type: "generic", handled: !0 }), (e.mechanism = { ...e.mechanism, ...("AggregateError" === e.type && { is_exception_group: !0 }), exception_id: t });
            }
            function Ki(e, t, n, r) {
                (e.mechanism = e.mechanism || { type: "generic", handled: !0 }), (e.mechanism = { ...e.mechanism, type: "chained", source: t, exception_id: n, parent_id: r });
            }
            const Ji = (e = {}) => {
                const t = e.limit || 5,
                    n = e.key || "cause";
                return {
                    name: "LinkedErrors",
                    preprocessEvent(e, r, o) {
                        const i = o.getOptions();
                        Vi(Co, i.stackParser, i.maxValueLength, n, t, e, r);
                    },
                };
            };
            function Xi(e) {
                return [zr(), Ur(), Fi(), Di(), qi(), Ji(), Nr(), Wi()];
            }
            function Qi(e = {}) {
                const t = (function (e = {}) {
                    return {
                        defaultIntegrations: Xi(),
                        release: "string" == typeof __SENTRY_RELEASE__ ? __SENTRY_RELEASE__ : _o.SENTRY_RELEASE && _o.SENTRY_RELEASE.id ? _o.SENTRY_RELEASE.id : void 0,
                        autoSessionTracking: !0,
                        sendClientReports: !0,
                        ...e,
                    };
                })(e);
                if (
                    (function () {
                        const e = _o,
                            t = e[e.chrome ? "chrome" : "browser"],
                            n = t && t.runtime && t.runtime.id,
                            r = (_o.location && _o.location.href) || "",
                            o = !!n && _o === _o.top && ["chrome-extension:", "moz-extension:", "ms-browser-extension:"].some((e) => r.startsWith(`${e}//`)),
                            i = void 0 !== e.nw;
                        return !!n && !o && !i;
                    })()
                )
                    return void D(() => {
                        console.error("[Sentry] You cannot run Sentry this way in a browser extension, check: https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/");
                    });
                To && (qo() || L.warn("No Fetch API detected. The Sentry SDK requires a Fetch API compatible environment to send events. Please add a Fetch API polyfill."));
                const n = { ...t, stackParser: ((r = t.stackParser || fi), Array.isArray(r) ? $e(...r) : r), integrations: un(t), transport: t.transport || Xo };
                var r;
                const o = (function (e, t) {
                    !0 === t.debug &&
                        (Pe
                            ? L.enable()
                            : D(() => {
                                  console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.");
                              })),
                        Ee().update(t.initialScope);
                    const n = new e(t);
                    return po(n), n.init(), n;
                })(Uo, n);
                return (
                    t.autoSessionTracking &&
                        (function () {
                            if (void 0 === _o.document) return void (To && L.warn("Session tracking in non-browser environment with @sentry/browser is not supported."));
                            rn({ ignoreDuration: !0 }),
                                an(),
                                vi(({ from: e, to: t }) => {
                                    void 0 !== e && e !== t && (rn({ ignoreDuration: !0 }), an());
                                });
                        })(),
                    o
                );
            }
            function Zi(e = {}) {
                if (!_o.document) return void (To && L.error("Global document not defined in showReportDialog call"));
                const t = Ee(),
                    n = t.getClient(),
                    r = n && n.getDsn();
                if (!r) return void (To && L.error("DSN not configured for showReportDialog call"));
                if ((t && (e.user = { ...t.getUser(), ...e.user }), !e.eventId)) {
                    const t = Qt();
                    t && (e.eventId = t);
                }
                const o = _o.document.createElement("removed-script-tag");
                (o.async = !0),
                    (o.crossOrigin = "anonymous"),
                    (o.src = (function (e, t) {
                        const n = qn(e);
                        if (!n) return "";
                        const r = `${Vr(n)}embed/error-page/`;
                        let o = `dsn=${$n(n)}`;
                        for (const e in t)
                            if ("dsn" !== e && "onClose" !== e)
                                if ("user" === e) {
                                    const e = t.user;
                                    if (!e) continue;
                                    e.name && (o += `&name=${encodeURIComponent(e.name)}`), e.email && (o += `&email=${encodeURIComponent(e.email)}`);
                                } else o += `&${encodeURIComponent(e)}=${encodeURIComponent(t[e])}`;
                        return `${r}?${o}`;
                    })(r, e)),
                    e.onLoad && (o.onload = e.onLoad);
                const { onClose: i } = e;
                if (i) {
                    const e = (t) => {
                        if ("__sentry_reportdialog_closed__" === t.data)
                            try {
                                i();
                            } finally {
                                _o.removeEventListener("message", e);
                            }
                    };
                    _o.addEventListener("message", e);
                }
                const s = _o.document.head || _o.document.body;
                s ? s.appendChild(o) : To && L.error("Not injecting report dialog. No injection point found in HTML");
            }
            function es() {}
            function ts(e) {
                e();
            }
            function ns(e) {
                const t = Me();
                t && t.captureUserFeedback(e);
            }
            const rs = {
                    replayIntegration: "replay",
                    replayCanvasIntegration: "replay-canvas",
                    feedbackIntegration: "feedback",
                    feedbackModalIntegration: "feedback-modal",
                    feedbackScreenshotIntegration: "feedback-screenshot",
                    captureConsoleIntegration: "captureconsole",
                    contextLinesIntegration: "contextlines",
                    linkedErrorsIntegration: "linkederrors",
                    debugIntegration: "debug",
                    dedupeIntegration: "dedupe",
                    extraErrorDataIntegration: "extraerrordata",
                    httpClientIntegration: "httpclient",
                    reportingObserverIntegration: "reportingobserver",
                    rewriteFramesIntegration: "rewriteframes",
                    sessionTimingIntegration: "sessiontiming",
                    browserProfilingIntegration: "browserprofiling",
                },
                os = _o;
            async function is(e) {
                const n = rs[e],
                    r = (os.Sentry = os.Sentry || {});
                if (!n) throw new Error(`Cannot lazy load integration: ${e}`);
                const o = r[e];
                if ("function" == typeof o) return o;
                const i = (function (e) {
                        const n = Me(),
                            r = n && n.getOptions(),
                            o = (r && r.cdnBaseUrl) || "";
                        return new URL(`/${t}/${e}.min.js`, o).toString();
                    })(n),
                    s = _o.document.createElement("removed-script-tag");
                (s.src = i), (s.crossOrigin = "anonymous"), (s.referrerPolicy = "origin");
                const a = new Promise((e, t) => {
                    s.addEventListener("load", () => e()), s.addEventListener("error", t);
                });
                _o.document.body.appendChild(s);
                try {
                    await a;
                } catch (t) {
                    throw new Error(`Error when loading integration: ${e}`);
                }
                const c = r[e];
                if ("function" != typeof c) throw new Error(`Could not load integration: ${e}`);
                return c;
            }
            const ss = x,
                as = new WeakMap(),
                cs = (e = {}) => {
                    const t = e.types || ["crash", "deprecation", "intervention"];
                    function n(e) {
                        if (as.has(Me()))
                            for (const t of e)
                                Ce((e) => {
                                    e.setExtra("url", t.url);
                                    const n = `ReportingObserver [${t.type}]`;
                                    let r = "No details available";
                                    if (t.body) {
                                        const n = {};
                                        for (const e in t.body) n[e] = t.body[e];
                                        if ((e.setExtra("body", n), "crash" === t.type)) {
                                            const e = t.body;
                                            r = [e.crashId || "", e.reason || ""].join(" ").trim() || r;
                                        } else {
                                            r = t.body.message || r;
                                        }
                                    }
                                    Ht(`${n}: ${r}`);
                                });
                    }
                    return {
                        name: "ReportingObserver",
                        setupOnce() {
                            if (!("ReportingObserver" in Bo)) return;
                            new ss.ReportingObserver(n, { buffered: !0, types: t }).observe();
                        },
                        setup(e) {
                            as.set(e, !0);
                        },
                    };
                };
            function us(e, t) {
                const n = t && t.getDsn(),
                    r = t && t.getOptions().tunnel;
                return (
                    (function (e, t) {
                        return !!t && e.includes(t.host);
                    })(e, n) ||
                    (function (e, t) {
                        if (!t) return !1;
                        return ls(e) === ls(t);
                    })(e, r)
                );
            }
            function ls(e) {
                return "/" === e[e.length - 1] ? e.slice(0, -1) : e;
            }
            const ds = (e = {}) => {
                const t = { failedRequestStatusCodes: [[500, 599]], failedRequestTargets: [/.*/], ...e };
                return {
                    name: "HttpClient",
                    setup(e) {
                        !(function (e, t) {
                            if (!Ho()) return;
                            Ai((n) => {
                                if (Me() !== e) return;
                                const { response: r, args: o } = n,
                                    [i, s] = o;
                                r &&
                                    (function (e, t, n, r) {
                                        if (ms(e, n.status, n.url)) {
                                            const e = (function (e, t) {
                                                if (!t && e instanceof Request) return e;
                                                if (e instanceof Request && e.bodyUsed) return e;
                                                return new Request(e, t);
                                            })(t, r);
                                            let o, i, s, a;
                                            vs() && (([o, s] = ps("Cookie", e)), ([i, a] = ps("Set-Cookie", n)));
                                            Wt(gs({ url: e.url, method: e.method, status: n.status, requestHeaders: o, responseHeaders: i, requestCookies: s, responseCookies: a }));
                                        }
                                    })(t, i, r, s);
                            });
                        })(e, t),
                            (function (e, t) {
                                if (!("XMLHttpRequest" in x)) return;
                                Ti((n) => {
                                    if (Me() !== e) return;
                                    const r = n.xhr,
                                        o = r[Ii];
                                    if (!o) return;
                                    const { method: i, request_headers: s } = o;
                                    try {
                                        !(function (e, t, n, r) {
                                            if (ms(e, t.status, t.responseURL)) {
                                                let e, o, i;
                                                if (vs()) {
                                                    try {
                                                        const e = t.getResponseHeader("Set-Cookie") || t.getResponseHeader("set-cookie") || void 0;
                                                        e && (o = hs(e));
                                                    } catch (e) {
                                                        To && L.log("Could not extract cookies from response headers");
                                                    }
                                                    try {
                                                        i = (function (e) {
                                                            const t = e.getAllResponseHeaders();
                                                            if (!t) return {};
                                                            return t.split("\r\n").reduce((e, t) => {
                                                                const [n, r] = t.split(": ");
                                                                return n && r && (e[n] = r), e;
                                                            }, {});
                                                        })(t);
                                                    } catch (e) {
                                                        To && L.log("Could not extract headers from response");
                                                    }
                                                    e = r;
                                                }
                                                Wt(gs({ url: t.responseURL, method: n, status: t.status, requestHeaders: e, responseHeaders: i, responseCookies: o }));
                                            }
                                        })(t, r, i, s);
                                    } catch (e) {
                                        To && L.warn("Error while extracting response event form XHR response", e);
                                    }
                                });
                            })(e, t);
                    },
                };
            };
            function ps(e, t) {
                const n = (function (e) {
                    const t = {};
                    return (
                        e.forEach((e, n) => {
                            t[n] = e;
                        }),
                        t
                    );
                })(t.headers);
                let r;
                try {
                    const t = n[e] || n[e.toLowerCase()] || void 0;
                    t && (r = hs(t));
                } catch (t) {
                    To && L.log(`Could not extract cookies from header ${e}`);
                }
                return [n, r];
            }
            function fs(e) {
                if (e) {
                    const t = e["Content-Length"] || e["content-length"];
                    if (t) return parseInt(t, 10);
                }
            }
            function hs(e) {
                return e.split("; ").reduce((e, t) => {
                    const [n, r] = t.split("=");
                    return n && r && (e[n] = r), e;
                }, {});
            }
            function ms(e, t, n) {
                return (
                    (function (e, t) {
                        return e.some((e) => ("number" == typeof e ? e === t : t >= e[0] && t <= e[1]));
                    })(e.failedRequestStatusCodes, t) &&
                    ((r = e.failedRequestTargets), (o = n), r.some((e) => ("string" == typeof e ? o.includes(e) : e.test(o)))) &&
                    !us(n, Me())
                );
                var r, o;
            }
            function gs(e) {
                const t = `HTTP Client Error with status code: ${e.status}`,
                    n = {
                        message: t,
                        exception: { values: [{ type: "Error", value: t }] },
                        request: { url: e.url, method: e.method, headers: e.requestHeaders, cookies: e.requestCookies },
                        contexts: { response: { status_code: e.status, headers: e.responseHeaders, cookies: e.responseCookies, body_size: fs(e.responseHeaders) } },
                    };
                return te(n, { type: "http.client", handled: !1 }), n;
            }
            function vs() {
                const e = Me();
                return !!e && Boolean(e.getOptions().sendDefaultPii);
            }
            const ys = x,
                _s = (e = {}) => {
                    const t = null != e.frameContextLines ? e.frameContextLines : 7;
                    return {
                        name: "ContextLines",
                        processEvent: (e) =>
                            (function (e, t) {
                                const n = ys.document,
                                    r = ys.location && ((o = ys.location.href), o.split(/[?#]/, 1)[0]);
                                var o;
                                if (!n || !r) return e;
                                const i = e.exception && e.exception.values;
                                if (!i || !i.length) return e;
                                const s = n.documentElement.innerHTML;
                                if (!s) return e;
                                const a = ["<!DOCTYPE html>", "<html>", ...s.split("\n"), "</html>"];
                                return (
                                    i.forEach((e) => {
                                        const n = e.stacktrace;
                                        n &&
                                            n.frames &&
                                            (n.frames = n.frames.map((e) =>
                                                (function (e, t, n, r) {
                                                    if (e.filename !== n || !e.lineno || !t.length) return e;
                                                    return (
                                                        (function (e, t, n = 5) {
                                                            if (void 0 === t.lineno) return;
                                                            const r = e.length,
                                                                o = Math.max(Math.min(r - 1, t.lineno - 1), 0);
                                                            t.pre_context = e.slice(Math.max(0, o - n), o).map((e) => j(e, 0));
                                                            const i = Math.min(r - 1, o);
                                                            (t.context_line = j(e[i], t.colno || 0)), (t.post_context = e.slice(Math.min(o + 1, r), o + 1 + n).map((e) => j(e, 0)));
                                                        })(t, e, r),
                                                        e
                                                    );
                                                })(e, a, r, t)
                                            ));
                                    }),
                                    e
                                );
                            })(e, t),
                    };
                };
            function bs(e) {
                let t,
                    n = e[0],
                    r = 1;
                for (; r < e.length; ) {
                    const o = e[r],
                        i = e[r + 1];
                    if (((r += 2), ("optionalAccess" === o || "optionalCall" === o) && null == n)) return;
                    "access" === o || "optionalAccess" === o ? ((t = n), (n = i(n))) : ("call" !== o && "optionalCall" !== o) || ((n = i((...e) => n.call(t, ...e))), (t = void 0));
                }
                return n;
            }
            function ws() {
                return !("undefined" != typeof __SENTRY_BROWSER_BUNDLE__ && __SENTRY_BROWSER_BUNDLE__) && "[object process]" === Object.prototype.toString.call("undefined" != typeof process ? process : 0);
            }
            function Ss() {
                return "undefined" != typeof window && (!ws() || (void 0 !== x.process && "renderer" === x.process.type));
            }
            const ks = (e, t, n, r) => {
                    let o, i;
                    return (s) => {
                        t.value >= 0 && (s || r) && ((i = t.value - (o || 0)), (i || void 0 === o) && ((o = t.value), (t.delta = i), (t.rating = ((e, t) => (e > t[1] ? "poor" : e > t[0] ? "needs-improvement" : "good"))(t.value, n)), e(t)));
                    };
                },
                xs = () => Vo.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0],
                Es = () => {
                    const e = xs();
                    return (e && e.activationStart) || 0;
                },
                Is = (e, t) => {
                    const n = xs();
                    let r = "navigate";
                    n && ((Vo.document && Vo.document.prerendering) || Es() > 0 ? (r = "prerender") : Vo.document && Vo.document.wasDiscarded ? (r = "restore") : n.type && (r = n.type.replace(/_/g, "-")));
                    return { name: e, value: void 0 === t ? -1 : t, rating: "good", delta: 0, entries: [], id: `v3-${Date.now()}-${Math.floor(8999999999999 * Math.random()) + 1e12}`, navigationType: r };
                },
                Ts = (e, t, n) => {
                    try {
                        if (PerformanceObserver.supportedEntryTypes.includes(e)) {
                            const r = new PerformanceObserver((e) => {
                                Promise.resolve().then(() => {
                                    t(e.getEntries());
                                });
                            });
                            return r.observe(Object.assign({ type: e, buffered: !0 }, n || {})), r;
                        }
                    } catch (e) {}
                },
                Cs = (e) => {
                    const t = (t) => {
                        ("pagehide" === t.type || (Vo.document && "hidden" === Vo.document.visibilityState)) && e(t);
                    };
                    Vo.document && (addEventListener("visibilitychange", t, !0), addEventListener("pagehide", t, !0));
                },
                As = (e) => {
                    let t = !1;
                    return (n) => {
                        t || (e(n), (t = !0));
                    };
                };
            let Ms = -1;
            const Rs = (e) => {
                    "hidden" === Vo.document.visibilityState && Ms > -1 && ((Ms = "visibilitychange" === e.type ? e.timeStamp : 0), removeEventListener("visibilitychange", Rs, !0), removeEventListener("prerenderingchange", Rs, !0));
                },
                Os = () => (
                    Vo.document && Ms < 0 && ((Ms = "hidden" !== Vo.document.visibilityState || Vo.document.prerendering ? 1 / 0 : 0), addEventListener("visibilitychange", Rs, !0), addEventListener("prerenderingchange", Rs, !0)),
                    {
                        get firstHiddenTime() {
                            return Ms;
                        },
                    }
                ),
                Ns = (e) => {
                    Vo.document && Vo.document.prerendering ? addEventListener("prerenderingchange", () => e(), !0) : e();
                },
                Ps = [1800, 3e3],
                Ds = [0.1, 0.25],
                Ls = (e, t = {}) => {
                    ((e, t = {}) => {
                        Ns(() => {
                            const n = Os(),
                                r = Is("FCP");
                            let o;
                            const i = Ts("paint", (e) => {
                                e.forEach((e) => {
                                    "first-contentful-paint" === e.name && (i.disconnect(), e.startTime < n.firstHiddenTime && ((r.value = Math.max(e.startTime - Es(), 0)), r.entries.push(e), o(!0)));
                                });
                            });
                            i && (o = ks(e, r, Ps, t.reportAllChanges));
                        });
                    })(
                        As(() => {
                            const n = Is("CLS", 0);
                            let r,
                                o = 0,
                                i = [];
                            const s = (e) => {
                                    e.forEach((e) => {
                                        if (!e.hadRecentInput) {
                                            const t = i[0],
                                                n = i[i.length - 1];
                                            o && t && n && e.startTime - n.startTime < 1e3 && e.startTime - t.startTime < 5e3 ? ((o += e.value), i.push(e)) : ((o = e.value), (i = [e]));
                                        }
                                    }),
                                        o > n.value && ((n.value = o), (n.entries = i), r());
                                },
                                a = Ts("layout-shift", s);
                            a &&
                                ((r = ks(e, n, Ds, t.reportAllChanges)),
                                Cs(() => {
                                    s(a.takeRecords()), r(!0);
                                }),
                                setTimeout(r, 0));
                        })
                    );
                },
                Fs = [100, 300],
                js = (e, t = {}) => {
                    Ns(() => {
                        const n = Os(),
                            r = Is("FID");
                        let o;
                        const i = (e) => {
                                e.startTime < n.firstHiddenTime && ((r.value = e.processingStart - e.startTime), r.entries.push(e), o(!0));
                            },
                            s = (e) => {
                                e.forEach(i);
                            },
                            a = Ts("first-input", s);
                        (o = ks(e, r, Fs, t.reportAllChanges)),
                            a &&
                                Cs(
                                    As(() => {
                                        s(a.takeRecords()), a.disconnect();
                                    })
                                );
                    });
                };
            let $s = 0,
                Us = 1 / 0,
                Bs = 0;
            const qs = (e) => {
                e.forEach((e) => {
                    e.interactionId && ((Us = Math.min(Us, e.interactionId)), (Bs = Math.max(Bs, e.interactionId)), ($s = Bs ? (Bs - Us) / 7 + 1 : 0));
                });
            };
            let zs;
            const Hs = () => {
                    "interactionCount" in performance || zs || (zs = Ts("event", qs, { type: "event", buffered: !0, durationThreshold: 0 }));
                },
                Ws = [200, 500],
                Vs = () => (zs ? $s : performance.interactionCount || 0) - 0,
                Ys = [],
                Gs = {},
                Ks = (e) => {
                    const t = Ys[Ys.length - 1],
                        n = Gs[e.interactionId];
                    if (n || Ys.length < 10 || (t && e.duration > t.latency)) {
                        if (n) n.entries.push(e), (n.latency = Math.max(n.latency, e.duration));
                        else {
                            const t = { id: e.interactionId, latency: e.duration, entries: [e] };
                            (Gs[t.id] = t), Ys.push(t);
                        }
                        Ys.sort((e, t) => t.latency - e.latency),
                            Ys.splice(10).forEach((e) => {
                                delete Gs[e.id];
                            });
                    }
                },
                Js = (e, t = {}) => {
                    Ns(() => {
                        Hs();
                        const n = Is("INP");
                        let r;
                        const o = (e) => {
                                e.forEach((e) => {
                                    if ((e.interactionId && Ks(e), "first-input" === e.entryType)) {
                                        !Ys.some((t) => t.entries.some((t) => e.duration === t.duration && e.startTime === t.startTime)) && Ks(e);
                                    }
                                });
                                const t = (() => {
                                    const e = Math.min(Ys.length - 1, Math.floor(Vs() / 50));
                                    return Ys[e];
                                })();
                                t && t.latency !== n.value && ((n.value = t.latency), (n.entries = t.entries), r());
                            },
                            i = Ts("event", o, { durationThreshold: null != t.durationThreshold ? t.durationThreshold : 40 });
                        (r = ks(e, n, Ws, t.reportAllChanges)),
                            i &&
                                ("PerformanceEventTiming" in Vo && "interactionId" in PerformanceEventTiming.prototype && i.observe({ type: "first-input", buffered: !0 }),
                                Cs(() => {
                                    o(i.takeRecords()), n.value < 0 && Vs() > 0 && ((n.value = 0), (n.entries = [])), r(!0);
                                }));
                    });
                },
                Xs = [2500, 4e3],
                Qs = {},
                Zs = (e, t = {}) => {
                    Ns(() => {
                        const n = Os(),
                            r = Is("LCP");
                        let o;
                        const i = (e) => {
                                const t = e[e.length - 1];
                                t && t.startTime < n.firstHiddenTime && ((r.value = Math.max(t.startTime - Es(), 0)), (r.entries = [t]), o());
                            },
                            s = Ts("largest-contentful-paint", i);
                        if (s) {
                            o = ks(e, r, Xs, t.reportAllChanges);
                            const n = As(() => {
                                Qs[r.id] || (i(s.takeRecords()), s.disconnect(), (Qs[r.id] = !0), o(!0));
                            });
                            ["keydown", "click"].forEach((e) => {
                                Vo.document && addEventListener(e, () => setTimeout(n, 0), !0);
                            }),
                                Cs(n);
                        }
                    });
                },
                ea = [800, 1800],
                ta = (e) => {
                    Vo.document && Vo.document.prerendering ? Ns(() => ta(e)) : Vo.document && "complete" !== Vo.document.readyState ? addEventListener("load", () => ta(e), !0) : setTimeout(e, 0);
                },
                na = (e, t = {}) => {
                    const n = Is("TTFB"),
                        r = ks(e, n, ea, t.reportAllChanges);
                    ta(() => {
                        const e = xs();
                        if (e) {
                            const t = e.responseStart;
                            if (t <= 0 || t > performance.now()) return;
                            (n.value = Math.max(t - Es(), 0)), (n.entries = [e]), r(!0);
                        }
                    });
                },
                ra = {},
                oa = {};
            let ia, sa, aa, ca, ua;
            function la(e, t = !1) {
                return wa("cls", e, ga, ia, t);
            }
            function da(e, t = !1) {
                return wa("lcp", e, ya, aa, t);
            }
            function pa(e) {
                return wa("fid", e, va, sa);
            }
            function fa(e) {
                return wa("inp", e, ba, ua);
            }
            function ha(e, t) {
                return (
                    Sa(e, t),
                    oa[e] ||
                        (!(function (e) {
                            const t = {};
                            "event" === e && (t.durationThreshold = 0);
                            Ts(
                                e,
                                (t) => {
                                    ma(e, { entries: t });
                                },
                                t
                            );
                        })(e),
                        (oa[e] = !0)),
                    ka(e, t)
                );
            }
            function ma(e, t) {
                const n = ra[e];
                if (n && n.length)
                    for (const r of n)
                        try {
                            r(t);
                        } catch (t) {
                            Wo && L.error(`Error while triggering instrumentation handler.\nType: ${e}\nName: ${qe(r)}\nError:`, t);
                        }
            }
            function ga() {
                return Ls(
                    (e) => {
                        ma("cls", { metric: e }), (ia = e);
                    },
                    { reportAllChanges: !0 }
                );
            }
            function va() {
                return js((e) => {
                    ma("fid", { metric: e }), (sa = e);
                });
            }
            function ya() {
                return Zs(
                    (e) => {
                        ma("lcp", { metric: e }), (aa = e);
                    },
                    { reportAllChanges: !0 }
                );
            }
            function _a() {
                return na((e) => {
                    ma("ttfb", { metric: e }), (ca = e);
                });
            }
            function ba() {
                return Js((e) => {
                    ma("inp", { metric: e }), (ua = e);
                });
            }
            function wa(e, t, n, r, o = !1) {
                let i;
                return Sa(e, t), oa[e] || ((i = n()), (oa[e] = !0)), r && t({ metric: r }), ka(e, t, o ? i : void 0);
            }
            function Sa(e, t) {
                (ra[e] = ra[e] || []), ra[e].push(t);
            }
            function ka(e, t, n) {
                return () => {
                    n && n();
                    const r = ra[e];
                    if (!r) return;
                    const o = r.indexOf(t);
                    -1 !== o && r.splice(o, 1);
                };
            }
            const xa = x,
                Ea = "sentryReplaySession",
                Ia = "replay_event",
                Ta = "Unable to send Replay",
                Ca = 15e4,
                Aa = 5e3,
                Ma = 2e7,
                Ra = 36e5;
            function Oa(e, t) {
                return null != e ? e : t();
            }
            function Na(e) {
                let t,
                    n = e[0],
                    r = 1;
                for (; r < e.length; ) {
                    const o = e[r],
                        i = e[r + 1];
                    if (((r += 2), ("optionalAccess" === o || "optionalCall" === o) && null == n)) return;
                    "access" === o || "optionalAccess" === o ? ((t = n), (n = i(n))) : ("call" !== o && "optionalCall" !== o) || ((n = i((...e) => n.call(t, ...e))), (t = void 0));
                }
                return n;
            }
            var Pa;
            function Da(e) {
                const t = Na([e, "optionalAccess", (e) => e.host]);
                return Boolean(Na([t, "optionalAccess", (e) => e.shadowRoot]) === e);
            }
            function La(e) {
                return "[object ShadowRoot]" === Object.prototype.toString.call(e);
            }
            function Fa(e) {
                try {
                    const n = e.rules || e.cssRules;
                    return n
                        ? ((t = Array.from(n, ja).join("")).includes(" background-clip: text;") &&
                              !t.includes(" -webkit-background-clip: text;") &&
                              (t = t.replace(" background-clip: text;", " -webkit-background-clip: text; background-clip: text;")),
                          t)
                        : null;
                } catch (e) {
                    return null;
                }
                var t;
            }
            function ja(e) {
                let t;
                if (
                    (function (e) {
                        return "styleSheet" in e;
                    })(e)
                )
                    try {
                        t =
                            Fa(e.styleSheet) ||
                            (function (e) {
                                const { cssText: t } = e;
                                if (t.split('"').length < 3) return t;
                                const n = ["@import", `url(${JSON.stringify(e.href)})`];
                                return (
                                    "" === e.layerName ? n.push("layer") : e.layerName && n.push(`layer(${e.layerName})`),
                                    e.supportsText && n.push(`supports(${e.supportsText})`),
                                    e.media.length && n.push(e.media.mediaText),
                                    n.join(" ") + ";"
                                );
                            })(e);
                    } catch (e) {}
                else if (
                    (function (e) {
                        return "selectorText" in e;
                    })(e) &&
                    e.selectorText.includes(":")
                )
                    return (function (e) {
                        const t = /(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm;
                        return e.replace(t, "$1\\$2");
                    })(e.cssText);
                return t || e.cssText;
            }
            !(function (e) {
                (e[(e.Document = 0)] = "Document"), (e[(e.DocumentType = 1)] = "DocumentType"), (e[(e.Element = 2)] = "Element"), (e[(e.Text = 3)] = "Text"), (e[(e.CDATA = 4)] = "CDATA"), (e[(e.Comment = 5)] = "Comment");
            })(Pa || (Pa = {}));
            class $a {
                constructor() {
                    (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
                }
                getId(e) {
                    if (!e) return -1;
                    return Oa(Na([this, "access", (e) => e.getMeta, "call", (t) => t(e), "optionalAccess", (e) => e.id]), () => -1);
                }
                getNode(e) {
                    return this.idNodeMap.get(e) || null;
                }
                getIds() {
                    return Array.from(this.idNodeMap.keys());
                }
                getMeta(e) {
                    return this.nodeMetaMap.get(e) || null;
                }
                removeNodeFromMap(e) {
                    const t = this.getId(e);
                    this.idNodeMap.delete(t), e.childNodes && e.childNodes.forEach((e) => this.removeNodeFromMap(e));
                }
                has(e) {
                    return this.idNodeMap.has(e);
                }
                hasNode(e) {
                    return this.nodeMetaMap.has(e);
                }
                add(e, t) {
                    const n = t.id;
                    this.idNodeMap.set(n, e), this.nodeMetaMap.set(e, t);
                }
                replace(e, t) {
                    const n = this.getNode(e);
                    if (n) {
                        const e = this.nodeMetaMap.get(n);
                        e && this.nodeMetaMap.set(t, e);
                    }
                    this.idNodeMap.set(e, t);
                }
                reset() {
                    (this.idNodeMap = new Map()), (this.nodeMetaMap = new WeakMap());
                }
            }
            function Ua({ maskInputOptions: e, tagName: t, type: n }) {
                return "OPTION" === t && (t = "SELECT"), Boolean(e[t.toLowerCase()] || (n && e[n]) || "password" === n || ("INPUT" === t && !n && e.text));
            }
            function Ba({ isMasked: e, element: t, value: n, maskInputFn: r }) {
                let o = n || "";
                return e ? (r && (o = r(o, t)), "*".repeat(o.length)) : o;
            }
            function qa(e) {
                return e.toLowerCase();
            }
            function za(e) {
                return e.toUpperCase();
            }
            const Ha = "__rrweb_original__";
            function Wa(e) {
                const t = e.type;
                return e.hasAttribute("data-rr-is-password") ? "password" : t ? qa(t) : null;
            }
            function Va(e, t, n) {
                return "INPUT" !== t || ("radio" !== n && "checkbox" !== n) ? e.value : e.getAttribute("value") || "";
            }
            function Ya(e, t) {
                let n;
                try {
                    n = new URL(
                        e,
                        Oa(t, () => window.location.href)
                    );
                } catch (e) {
                    return null;
                }
                return Oa(Na([n.pathname.match(/\.([0-9a-z]+)(?:$)/i), "optionalAccess", (e) => e[1]]), () => null);
            }
            const Ga = {};
            function Ka(e) {
                const t = Ga[e];
                if (t) return t;
                const n = window.document;
                let r = window[e];
                if (n && "function" == typeof n.createElement)
                    try {
                        const t = n.createElement("iframe");
                        (t.hidden = !0), n.head.appendChild(t);
                        const o = t.contentWindow;
                        o && o[e] && (r = o[e]), n.head.removeChild(t);
                    } catch (e) {}
                return (Ga[e] = r.bind(window));
            }
            function Ja(...e) {
                return Ka("setTimeout")(...e);
            }
            function Xa(...e) {
                return Ka("clearTimeout")(...e);
            }
            let Qa = 1;
            const Za = new RegExp("[^a-z0-9-_:]"),
                ec = -2;
            function tc() {
                return Qa++;
            }
            let nc, rc;
            const oc = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm,
                ic = /^(?:[a-z+]+:)?\/\//i,
                sc = /^www\..*/i,
                ac = /^(data:)([^,]*),(.*)/i;
            function cc(e, t) {
                return (e || "").replace(oc, (e, n, r, o, i, s) => {
                    const a = r || i || s,
                        c = n || o || "";
                    if (!a) return e;
                    if (ic.test(a) || sc.test(a)) return `url(${c}${a}${c})`;
                    if (ac.test(a)) return `url(${c}${a}${c})`;
                    if ("/" === a[0])
                        return `url(${c}${
                            (function (e) {
                                let t = "";
                                return (t = e.indexOf("//") > -1 ? e.split("/").slice(0, 3).join("/") : e.split("/")[0]), (t = t.split("?")[0]), t;
                            })(t) + a
                        }${c})`;
                    const u = t.split("/"),
                        l = a.split("/");
                    u.pop();
                    for (const e of l) "." !== e && (".." === e ? u.pop() : u.push(e));
                    return `url(${c}${u.join("/")}${c})`;
                });
            }
            const uc = /^[^ \t\n\r\u000c]+/,
                lc = /^[, \t\n\r\u000c]+/;
            function dc(e, t) {
                if (!t || "" === t.trim()) return t;
                const n = e.createElement("a");
                return (n.href = t), n.href;
            }
            function pc(e) {
                return Boolean("svg" === e.tagName || e.ownerSVGElement);
            }
            function fc() {
                const e = document.createElement("a");
                return (e.href = ""), e.href;
            }
            function hc(e, t, n, r, o, i) {
                return r
                    ? "src" === n || ("href" === n && ("use" !== t || "#" !== r[0])) || ("xlink:href" === n && "#" !== r[0])
                        ? dc(e, r)
                        : "background" !== n || ("table" !== t && "td" !== t && "th" !== t)
                        ? "srcset" === n
                            ? (function (e, t) {
                                  if ("" === t.trim()) return t;
                                  let n = 0;
                                  function r(e) {
                                      let r;
                                      const o = e.exec(t.substring(n));
                                      return o ? ((r = o[0]), (n += r.length), r) : "";
                                  }
                                  const o = [];
                                  for (; r(lc), !(n >= t.length); ) {
                                      let i = r(uc);
                                      if ("," === i.slice(-1)) (i = dc(e, i.substring(0, i.length - 1))), o.push(i);
                                      else {
                                          let r = "";
                                          i = dc(e, i);
                                          let s = !1;
                                          for (;;) {
                                              const e = t.charAt(n);
                                              if ("" === e) {
                                                  o.push((i + r).trim());
                                                  break;
                                              }
                                              if (s) ")" === e && (s = !1);
                                              else {
                                                  if ("," === e) {
                                                      (n += 1), o.push((i + r).trim());
                                                      break;
                                                  }
                                                  "(" === e && (s = !0);
                                              }
                                              (r += e), (n += 1);
                                          }
                                      }
                                  }
                                  return o.join(", ");
                              })(e, r)
                            : "style" === n
                            ? cc(r, fc())
                            : "object" === t && "data" === n
                            ? dc(e, r)
                            : "function" == typeof i
                            ? i(n, r, o)
                            : r
                        : dc(e, r)
                    : r;
            }
            function mc(e, t, n) {
                return ("video" === e || "audio" === e) && "autoplay" === t;
            }
            function gc(e, t, n = 1 / 0, r = 0) {
                return e ? (e.nodeType !== e.ELEMENT_NODE || r > n ? -1 : t(e) ? r : gc(e.parentNode, t, n, r + 1)) : -1;
            }
            function vc(e, t) {
                return (n) => {
                    const r = n;
                    if (null === r) return !1;
                    try {
                        if (e)
                            if ("string" == typeof e) {
                                if (r.matches(`.${e}`)) return !0;
                            } else if (
                                (function (e, t) {
                                    for (let n = e.classList.length; n--; ) {
                                        const r = e.classList[n];
                                        if (t.test(r)) return !0;
                                    }
                                    return !1;
                                })(r, e)
                            )
                                return !0;
                        return !(!t || !r.matches(t));
                    } catch (e) {
                        return !1;
                    }
                };
            }
            function yc(e, t, n, r, o, i) {
                try {
                    const s = e.nodeType === e.ELEMENT_NODE ? e : e.parentElement;
                    if (null === s) return !1;
                    if ("INPUT" === s.tagName) {
                        const e = s.getAttribute("autocomplete");
                        if (["current-password", "new-password", "cc-number", "cc-exp", "cc-exp-month", "cc-exp-year", "cc-csc"].includes(e)) return !0;
                    }
                    let a = -1,
                        c = -1;
                    if (i) {
                        if (((c = gc(s, vc(r, o))), c < 0)) return !0;
                        a = gc(s, vc(t, n), c >= 0 ? c : 1 / 0);
                    } else {
                        if (((a = gc(s, vc(t, n))), a < 0)) return !1;
                        c = gc(s, vc(r, o), a >= 0 ? a : 1 / 0);
                    }
                    return a >= 0 ? !(c >= 0) || a <= c : !(c >= 0) && !!i;
                } catch (e) {}
                return !!i;
            }
            function _c(e, t) {
                const {
                        doc: n,
                        mirror: r,
                        blockClass: o,
                        blockSelector: i,
                        unblockSelector: s,
                        maskAllText: a,
                        maskAttributeFn: c,
                        maskTextClass: u,
                        unmaskTextClass: l,
                        maskTextSelector: d,
                        unmaskTextSelector: p,
                        inlineStylesheet: f,
                        maskInputOptions: h = {},
                        maskTextFn: m,
                        maskInputFn: g,
                        dataURLOptions: v = {},
                        inlineImages: y,
                        recordCanvas: _,
                        keepIframeSrcFn: b,
                        newlyAddedElement: w = !1,
                    } = t,
                    S = (function (e, t) {
                        if (!t.hasNode(e)) return;
                        const n = t.getId(e);
                        return 1 === n ? void 0 : n;
                    })(n, r);
                switch (e.nodeType) {
                    case e.DOCUMENT_NODE:
                        return "CSS1Compat" !== e.compatMode ? { type: Pa.Document, childNodes: [], compatMode: e.compatMode } : { type: Pa.Document, childNodes: [] };
                    case e.DOCUMENT_TYPE_NODE:
                        return { type: Pa.DocumentType, name: e.name, publicId: e.publicId, systemId: e.systemId, rootId: S };
                    case e.ELEMENT_NODE:
                        return (function (e, t) {
                            const {
                                    doc: n,
                                    blockClass: r,
                                    blockSelector: o,
                                    unblockSelector: i,
                                    inlineStylesheet: s,
                                    maskInputOptions: a = {},
                                    maskAttributeFn: c,
                                    maskInputFn: u,
                                    dataURLOptions: l = {},
                                    inlineImages: d,
                                    recordCanvas: p,
                                    keepIframeSrcFn: f,
                                    newlyAddedElement: h = !1,
                                    rootId: m,
                                    maskAllText: g,
                                    maskTextClass: v,
                                    unmaskTextClass: y,
                                    maskTextSelector: _,
                                    unmaskTextSelector: b,
                                } = t,
                                w = (function (e, t, n, r) {
                                    try {
                                        if (r && e.matches(r)) return !1;
                                        if ("string" == typeof t) {
                                            if (e.classList.contains(t)) return !0;
                                        } else
                                            for (let n = e.classList.length; n--; ) {
                                                const r = e.classList[n];
                                                if (t.test(r)) return !0;
                                            }
                                        if (n) return e.matches(n);
                                    } catch (e) {}
                                    return !1;
                                })(e, r, o, i),
                                S = (function (e) {
                                    if (e instanceof HTMLFormElement) return "form";
                                    const t = qa(e.tagName);
                                    return Za.test(t) ? "div" : t;
                                })(e);
                            let k = {};
                            const x = e.attributes.length;
                            for (let t = 0; t < x; t++) {
                                const r = e.attributes[t];
                                r.name && !mc(S, r.name, r.value) && (k[r.name] = hc(n, S, qa(r.name), r.value, e, c));
                            }
                            if ("link" === S && s) {
                                const t = Array.from(n.styleSheets).find((t) => t.href === e.href);
                                let r = null;
                                t && (r = Fa(t)), r && (delete k.rel, delete k.href, (k._cssText = cc(r, t.href)));
                            }
                            if ("style" === S && e.sheet && !(e.innerText || e.textContent || "").trim().length) {
                                const t = Fa(e.sheet);
                                t && (k._cssText = cc(t, fc()));
                            }
                            if ("input" === S || "textarea" === S || "select" === S || "option" === S) {
                                const t = e,
                                    n = Wa(t),
                                    r = Va(t, za(S), n),
                                    o = t.checked;
                                if ("submit" !== n && "button" !== n && r) {
                                    const e = yc(t, v, _, y, b, Ua({ type: n, tagName: za(S), maskInputOptions: a }));
                                    k.value = Ba({ isMasked: e, element: t, value: r, maskInputFn: u });
                                }
                                o && (k.checked = o);
                            }
                            "option" === S && (e.selected && !a.select ? (k.selected = !0) : delete k.selected);
                            if ("canvas" === S && p)
                                if ("2d" === e.__context)
                                    (function (e) {
                                        const t = e.getContext("2d");
                                        if (!t) return !0;
                                        for (let n = 0; n < e.width; n += 50)
                                            for (let r = 0; r < e.height; r += 50) {
                                                const o = t.getImageData,
                                                    i = Ha in o ? o[Ha] : o;
                                                if (new Uint32Array(i.call(t, n, r, Math.min(50, e.width - n), Math.min(50, e.height - r)).data.buffer).some((e) => 0 !== e)) return !1;
                                            }
                                        return !0;
                                    })(e) || (k.rr_dataURL = e.toDataURL(l.type, l.quality));
                                else if (!("__context" in e)) {
                                    const t = e.toDataURL(l.type, l.quality),
                                        n = document.createElement("canvas");
                                    (n.width = e.width), (n.height = e.height);
                                    t !== n.toDataURL(l.type, l.quality) && (k.rr_dataURL = t);
                                }
                            if ("img" === S && d) {
                                nc || ((nc = n.createElement("canvas")), (rc = nc.getContext("2d")));
                                const t = e,
                                    r = t.crossOrigin;
                                t.crossOrigin = "anonymous";
                                const o = () => {
                                    t.removeEventListener("load", o);
                                    try {
                                        (nc.width = t.naturalWidth), (nc.height = t.naturalHeight), rc.drawImage(t, 0, 0), (k.rr_dataURL = nc.toDataURL(l.type, l.quality));
                                    } catch (e) {
                                        console.warn(`Cannot inline img src=${t.currentSrc}! Error: ${e}`);
                                    }
                                    r ? (k.crossOrigin = r) : t.removeAttribute("crossorigin");
                                };
                                t.complete && 0 !== t.naturalWidth ? o() : t.addEventListener("load", o);
                            }
                            ("audio" !== S && "video" !== S) || ((k.rr_mediaState = e.paused ? "paused" : "played"), (k.rr_mediaCurrentTime = e.currentTime));
                            h || (e.scrollLeft && (k.rr_scrollLeft = e.scrollLeft), e.scrollTop && (k.rr_scrollTop = e.scrollTop));
                            if (w) {
                                const { width: t, height: n } = e.getBoundingClientRect();
                                k = { class: k.class, rr_width: `${t}px`, rr_height: `${n}px` };
                            }
                            "iframe" !== S || f(k.src) || (w || e.contentDocument || (k.rr_src = k.src), delete k.src);
                            let E;
                            try {
                                customElements.get(S) && (E = !0);
                            } catch (e) {}
                            return { type: Pa.Element, tagName: S, attributes: k, childNodes: [], isSVG: pc(e) || void 0, needBlock: w, rootId: m, isCustom: E };
                        })(e, {
                            doc: n,
                            blockClass: o,
                            blockSelector: i,
                            unblockSelector: s,
                            inlineStylesheet: f,
                            maskAttributeFn: c,
                            maskInputOptions: h,
                            maskInputFn: g,
                            dataURLOptions: v,
                            inlineImages: y,
                            recordCanvas: _,
                            keepIframeSrcFn: b,
                            newlyAddedElement: w,
                            rootId: S,
                            maskAllText: a,
                            maskTextClass: u,
                            unmaskTextClass: l,
                            maskTextSelector: d,
                            unmaskTextSelector: p,
                        });
                    case e.TEXT_NODE:
                        return (function (e, t) {
                            const { maskAllText: n, maskTextClass: r, unmaskTextClass: o, maskTextSelector: i, unmaskTextSelector: s, maskTextFn: a, maskInputOptions: c, maskInputFn: u, rootId: l } = t,
                                d = e.parentNode && e.parentNode.tagName;
                            let p = e.textContent;
                            const f = "STYLE" === d || void 0,
                                h = "SCRIPT" === d || void 0,
                                m = "TEXTAREA" === d || void 0;
                            if (f && p) {
                                try {
                                    e.nextSibling || e.previousSibling || (Na([e, "access", (e) => e.parentNode, "access", (e) => e.sheet, "optionalAccess", (e) => e.cssRules]) && (p = Fa(e.parentNode.sheet)));
                                } catch (t) {
                                    console.warn(`Cannot get CSS styles from text's parentNode. Error: ${t}`, e);
                                }
                                p = cc(p, fc());
                            }
                            h && (p = "SCRIPT_PLACEHOLDER");
                            const g = yc(e, r, i, o, s, n);
                            f || h || m || !p || !g || (p = a ? a(p, e.parentElement) : p.replace(/[\S]/g, "*"));
                            m && p && (c.textarea || g) && (p = u ? u(p, e.parentNode) : p.replace(/[\S]/g, "*"));
                            if ("OPTION" === d && p) {
                                p = Ba({ isMasked: yc(e, r, i, o, s, Ua({ type: null, tagName: d, maskInputOptions: c })), element: e, value: p, maskInputFn: u });
                            }
                            return { type: Pa.Text, textContent: p || "", isStyle: f, rootId: l };
                        })(e, { maskAllText: a, maskTextClass: u, unmaskTextClass: l, maskTextSelector: d, unmaskTextSelector: p, maskTextFn: m, maskInputOptions: h, maskInputFn: g, rootId: S });
                    case e.CDATA_SECTION_NODE:
                        return { type: Pa.CDATA, textContent: "", rootId: S };
                    case e.COMMENT_NODE:
                        return { type: Pa.Comment, textContent: e.textContent || "", rootId: S };
                    default:
                        return !1;
                }
            }
            function bc(e) {
                return null == e ? "" : e.toLowerCase();
            }
            function wc(e, t) {
                const {
                    doc: n,
                    mirror: r,
                    blockClass: o,
                    blockSelector: i,
                    unblockSelector: s,
                    maskAllText: a,
                    maskTextClass: c,
                    unmaskTextClass: u,
                    maskTextSelector: l,
                    unmaskTextSelector: d,
                    skipChild: p = !1,
                    inlineStylesheet: f = !0,
                    maskInputOptions: h = {},
                    maskAttributeFn: m,
                    maskTextFn: g,
                    maskInputFn: v,
                    slimDOMOptions: y,
                    dataURLOptions: _ = {},
                    inlineImages: b = !1,
                    recordCanvas: w = !1,
                    onSerialize: S,
                    onIframeLoad: k,
                    iframeLoadTimeout: x = 5e3,
                    onStylesheetLoad: E,
                    stylesheetLoadTimeout: I = 5e3,
                    keepIframeSrcFn: T = () => !1,
                    newlyAddedElement: C = !1,
                } = t;
                let { preserveWhiteSpace: A = !0 } = t;
                const M = _c(e, {
                    doc: n,
                    mirror: r,
                    blockClass: o,
                    blockSelector: i,
                    maskAllText: a,
                    unblockSelector: s,
                    maskTextClass: c,
                    unmaskTextClass: u,
                    maskTextSelector: l,
                    unmaskTextSelector: d,
                    inlineStylesheet: f,
                    maskInputOptions: h,
                    maskAttributeFn: m,
                    maskTextFn: g,
                    maskInputFn: v,
                    dataURLOptions: _,
                    inlineImages: b,
                    recordCanvas: w,
                    keepIframeSrcFn: T,
                    newlyAddedElement: C,
                });
                if (!M) return console.warn(e, "not serialized"), null;
                let R;
                R = r.hasNode(e)
                    ? r.getId(e)
                    : !(function (e, t) {
                          if (t.comment && e.type === Pa.Comment) return !0;
                          if (e.type === Pa.Element) {
                              if (
                                  t.script &&
                                  ("script" === e.tagName ||
                                      ("link" === e.tagName && ("preload" === e.attributes.rel || "modulepreload" === e.attributes.rel) && "script" === e.attributes.as) ||
                                      ("link" === e.tagName && "prefetch" === e.attributes.rel && "string" == typeof e.attributes.href && "js" === Ya(e.attributes.href)))
                              )
                                  return !0;
                              if (
                                  t.headFavicon &&
                                  (("link" === e.tagName && "shortcut icon" === e.attributes.rel) ||
                                      ("meta" === e.tagName &&
                                          (bc(e.attributes.name).match(/^msapplication-tile(image|color)$/) ||
                                              "application-name" === bc(e.attributes.name) ||
                                              "icon" === bc(e.attributes.rel) ||
                                              "apple-touch-icon" === bc(e.attributes.rel) ||
                                              "shortcut icon" === bc(e.attributes.rel))))
                              )
                                  return !0;
                              if ("meta" === e.tagName) {
                                  if (t.headMetaDescKeywords && bc(e.attributes.name).match(/^description|keywords$/)) return !0;
                                  if (t.headMetaSocial && (bc(e.attributes.property).match(/^(og|twitter|fb):/) || bc(e.attributes.name).match(/^(og|twitter):/) || "pinterest" === bc(e.attributes.name))) return !0;
                                  if (t.headMetaRobots && ("robots" === bc(e.attributes.name) || "googlebot" === bc(e.attributes.name) || "bingbot" === bc(e.attributes.name))) return !0;
                                  if (t.headMetaHttpEquiv && void 0 !== e.attributes["http-equiv"]) return !0;
                                  if (
                                      t.headMetaAuthorship &&
                                      ("author" === bc(e.attributes.name) ||
                                          "generator" === bc(e.attributes.name) ||
                                          "framework" === bc(e.attributes.name) ||
                                          "publisher" === bc(e.attributes.name) ||
                                          "progid" === bc(e.attributes.name) ||
                                          bc(e.attributes.property).match(/^article:/) ||
                                          bc(e.attributes.property).match(/^product:/))
                                  )
                                      return !0;
                                  if (
                                      t.headMetaVerification &&
                                      ("google-site-verification" === bc(e.attributes.name) ||
                                          "yandex-verification" === bc(e.attributes.name) ||
                                          "csrf-token" === bc(e.attributes.name) ||
                                          "p:domain_verify" === bc(e.attributes.name) ||
                                          "verify-v1" === bc(e.attributes.name) ||
                                          "verification" === bc(e.attributes.name) ||
                                          "shopify-checkout-api-token" === bc(e.attributes.name))
                                  )
                                      return !0;
                              }
                          }
                          return !1;
                      })(M, y) &&
                      (A || M.type !== Pa.Text || M.isStyle || M.textContent.replace(/^\s+|\s+$/gm, "").length)
                    ? tc()
                    : ec;
                const O = Object.assign(M, { id: R });
                if ((r.add(e, O), R === ec)) return null;
                S && S(e);
                let N = !p;
                if (O.type === Pa.Element) {
                    (N = N && !O.needBlock), delete O.needBlock;
                    const t = e.shadowRoot;
                    t && La(t) && (O.isShadowHost = !0);
                }
                if ((O.type === Pa.Document || O.type === Pa.Element) && N) {
                    y.headWhitespace && O.type === Pa.Element && "head" === O.tagName && (A = !1);
                    const t = {
                        doc: n,
                        mirror: r,
                        blockClass: o,
                        blockSelector: i,
                        maskAllText: a,
                        unblockSelector: s,
                        maskTextClass: c,
                        unmaskTextClass: u,
                        maskTextSelector: l,
                        unmaskTextSelector: d,
                        skipChild: p,
                        inlineStylesheet: f,
                        maskInputOptions: h,
                        maskAttributeFn: m,
                        maskTextFn: g,
                        maskInputFn: v,
                        slimDOMOptions: y,
                        dataURLOptions: _,
                        inlineImages: b,
                        recordCanvas: w,
                        preserveWhiteSpace: A,
                        onSerialize: S,
                        onIframeLoad: k,
                        iframeLoadTimeout: x,
                        onStylesheetLoad: E,
                        stylesheetLoadTimeout: I,
                        keepIframeSrcFn: T,
                    };
                    for (const n of Array.from(e.childNodes)) {
                        const e = wc(n, t);
                        e && O.childNodes.push(e);
                    }
                    if (
                        (function (e) {
                            return e.nodeType === e.ELEMENT_NODE;
                        })(e) &&
                        e.shadowRoot
                    )
                        for (const n of Array.from(e.shadowRoot.childNodes)) {
                            const r = wc(n, t);
                            r && (La(e.shadowRoot) && (r.isShadow = !0), O.childNodes.push(r));
                        }
                }
                return (
                    e.parentNode && Da(e.parentNode) && La(e.parentNode) && (O.isShadow = !0),
                    O.type === Pa.Element &&
                        "iframe" === O.tagName &&
                        (function (e, t, n) {
                            const r = e.contentWindow;
                            if (!r) return;
                            let o,
                                i = !1;
                            try {
                                o = r.document.readyState;
                            } catch (e) {
                                return;
                            }
                            if ("complete" !== o) {
                                const r = Ja(() => {
                                    i || (t(), (i = !0));
                                }, n);
                                return void e.addEventListener("load", () => {
                                    Xa(r), (i = !0), t();
                                });
                            }
                            const s = "about:blank";
                            if (r.location.href !== s || e.src === s || "" === e.src) return Ja(t, 0), e.addEventListener("load", t);
                            e.addEventListener("load", t);
                        })(
                            e,
                            () => {
                                const t = e.contentDocument;
                                if (t && k) {
                                    const n = wc(t, {
                                        doc: t,
                                        mirror: r,
                                        blockClass: o,
                                        blockSelector: i,
                                        unblockSelector: s,
                                        maskAllText: a,
                                        maskTextClass: c,
                                        unmaskTextClass: u,
                                        maskTextSelector: l,
                                        unmaskTextSelector: d,
                                        skipChild: !1,
                                        inlineStylesheet: f,
                                        maskInputOptions: h,
                                        maskAttributeFn: m,
                                        maskTextFn: g,
                                        maskInputFn: v,
                                        slimDOMOptions: y,
                                        dataURLOptions: _,
                                        inlineImages: b,
                                        recordCanvas: w,
                                        preserveWhiteSpace: A,
                                        onSerialize: S,
                                        onIframeLoad: k,
                                        iframeLoadTimeout: x,
                                        onStylesheetLoad: E,
                                        stylesheetLoadTimeout: I,
                                        keepIframeSrcFn: T,
                                    });
                                    n && k(e, n);
                                }
                            },
                            x
                        ),
                    O.type === Pa.Element &&
                        "link" === O.tagName &&
                        "string" == typeof O.attributes.rel &&
                        ("stylesheet" === O.attributes.rel || ("preload" === O.attributes.rel && "string" == typeof O.attributes.href && "css" === Ya(O.attributes.href))) &&
                        (function (e, t, n) {
                            let r,
                                o = !1;
                            try {
                                r = e.sheet;
                            } catch (e) {
                                return;
                            }
                            if (r) return;
                            const i = Ja(() => {
                                o || (t(), (o = !0));
                            }, n);
                            e.addEventListener("load", () => {
                                Xa(i), (o = !0), t();
                            });
                        })(
                            e,
                            () => {
                                if (E) {
                                    const t = wc(e, {
                                        doc: n,
                                        mirror: r,
                                        blockClass: o,
                                        blockSelector: i,
                                        unblockSelector: s,
                                        maskAllText: a,
                                        maskTextClass: c,
                                        unmaskTextClass: u,
                                        maskTextSelector: l,
                                        unmaskTextSelector: d,
                                        skipChild: !1,
                                        inlineStylesheet: f,
                                        maskInputOptions: h,
                                        maskAttributeFn: m,
                                        maskTextFn: g,
                                        maskInputFn: v,
                                        slimDOMOptions: y,
                                        dataURLOptions: _,
                                        inlineImages: b,
                                        recordCanvas: w,
                                        preserveWhiteSpace: A,
                                        onSerialize: S,
                                        onIframeLoad: k,
                                        iframeLoadTimeout: x,
                                        onStylesheetLoad: E,
                                        stylesheetLoadTimeout: I,
                                        keepIframeSrcFn: T,
                                    });
                                    t && E(e, t);
                                }
                            },
                            I
                        ),
                    O
                );
            }
            function Sc(e) {
                let t,
                    n = e[0],
                    r = 1;
                for (; r < e.length; ) {
                    const o = e[r],
                        i = e[r + 1];
                    if (((r += 2), ("optionalAccess" === o || "optionalCall" === o) && null == n)) return;
                    "access" === o || "optionalAccess" === o ? ((t = n), (n = i(n))) : ("call" !== o && "optionalCall" !== o) || ((n = i((...e) => n.call(t, ...e))), (t = void 0));
                }
                return n;
            }
            function kc(e, t, n = document) {
                const r = { capture: !0, passive: !0 };
                return n.addEventListener(e, t, r), () => n.removeEventListener(e, t, r);
            }
            const xc =
                "Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording.";
            let Ec = {
                map: {},
                getId: () => (console.error(xc), -1),
                getNode: () => (console.error(xc), null),
                removeNodeFromMap() {
                    console.error(xc);
                },
                has: () => (console.error(xc), !1),
                reset() {
                    console.error(xc);
                },
            };
            function Ic(e, t, n = {}) {
                let r = null,
                    o = 0;
                return function (...i) {
                    const s = Date.now();
                    o || !1 !== n.leading || (o = s);
                    const a = t - (s - o),
                        c = this;
                    a <= 0 || a > t
                        ? (r &&
                              (!(function (...e) {
                                  Vc("clearTimeout")(...e);
                              })(r),
                              (r = null)),
                          (o = s),
                          e.apply(c, i))
                        : r ||
                          !1 === n.trailing ||
                          (r = Yc(() => {
                              (o = !1 === n.leading ? 0 : Date.now()), (r = null), e.apply(c, i);
                          }, a));
                };
            }
            function Tc(e, t, n, r, o = window) {
                const i = o.Object.getOwnPropertyDescriptor(e, t);
                return (
                    o.Object.defineProperty(
                        e,
                        t,
                        r
                            ? n
                            : {
                                  set(e) {
                                      Yc(() => {
                                          n.set.call(this, e);
                                      }, 0),
                                          i && i.set && i.set.call(this, e);
                                  },
                              }
                    ),
                    () => Tc(e, t, i || {}, !0)
                );
            }
            function Cc(e, t, n) {
                try {
                    if (!(t in e)) return () => {};
                    const r = e[t],
                        o = n(r);
                    return (
                        "function" == typeof o && ((o.prototype = o.prototype || {}), Object.defineProperties(o, { __rrweb_original__: { enumerable: !1, value: r } })),
                        (e[t] = o),
                        () => {
                            e[t] = r;
                        }
                    );
                } catch (e) {
                    return () => {};
                }
            }
            "undefined" != typeof window && window.Proxy && window.Reflect && (Ec = new Proxy(Ec, { get: (e, t, n) => ("map" === t && console.error(xc), Reflect.get(e, t, n)) }));
            let Ac = Date.now;
            function Mc(e) {
                const t = e.document;
                return {
                    left: t.scrollingElement
                        ? t.scrollingElement.scrollLeft
                        : void 0 !== e.pageXOffset
                        ? e.pageXOffset
                        : Sc([t, "optionalAccess", (e) => e.documentElement, "access", (e) => e.scrollLeft]) ||
                          Sc([t, "optionalAccess", (e) => e.body, "optionalAccess", (e) => e.parentElement, "optionalAccess", (e) => e.scrollLeft]) ||
                          Sc([t, "optionalAccess", (e) => e.body, "optionalAccess", (e) => e.scrollLeft]) ||
                          0,
                    top: t.scrollingElement
                        ? t.scrollingElement.scrollTop
                        : void 0 !== e.pageYOffset
                        ? e.pageYOffset
                        : Sc([t, "optionalAccess", (e) => e.documentElement, "access", (e) => e.scrollTop]) ||
                          Sc([t, "optionalAccess", (e) => e.body, "optionalAccess", (e) => e.parentElement, "optionalAccess", (e) => e.scrollTop]) ||
                          Sc([t, "optionalAccess", (e) => e.body, "optionalAccess", (e) => e.scrollTop]) ||
                          0,
                };
            }
            function Rc() {
                return window.innerHeight || (document.documentElement && document.documentElement.clientHeight) || (document.body && document.body.clientHeight);
            }
            function Oc() {
                return window.innerWidth || (document.documentElement && document.documentElement.clientWidth) || (document.body && document.body.clientWidth);
            }
            function Nc(e) {
                if (!e) return null;
                return e.nodeType === e.ELEMENT_NODE ? e : e.parentElement;
            }
            function Pc(e, t, n, r, o) {
                if (!e) return !1;
                const i = Nc(e);
                if (!i) return !1;
                const s = vc(t, n);
                if (!o) {
                    const e = r && i.matches(r);
                    return s(i) && !e;
                }
                const a = gc(i, s);
                let c = -1;
                return !(a < 0) && (r && (c = gc(i, vc(null, r))), (a > -1 && c < 0) || a < c);
            }
            function Dc(e, t) {
                return t.getId(e) === ec;
            }
            function Lc(e, t) {
                if (Da(e)) return !1;
                const n = t.getId(e);
                return !t.has(n) || ((!e.parentNode || e.parentNode.nodeType !== e.DOCUMENT_NODE) && (!e.parentNode || Lc(e.parentNode, t)));
            }
            function Fc(e) {
                return Boolean(e.changedTouches);
            }
            function jc(e, t) {
                return Boolean("IFRAME" === e.nodeName && t.getMeta(e));
            }
            function $c(e, t) {
                return Boolean("LINK" === e.nodeName && e.nodeType === e.ELEMENT_NODE && e.getAttribute && "stylesheet" === e.getAttribute("rel") && t.getMeta(e));
            }
            function Uc(e) {
                return Boolean(Sc([e, "optionalAccess", (e) => e.shadowRoot]));
            }
            /[1-9][0-9]{12}/.test(Date.now().toString()) || (Ac = () => new Date().getTime());
            class Bc {
                constructor() {
                    (this.id = 1), (this.styleIDMap = new WeakMap()), (this.idStyleMap = new Map());
                }
                getId(e) {
                    return (t = this.styleIDMap.get(e)), (n = () => -1), null != t ? t : n();
                    var t, n;
                }
                has(e) {
                    return this.styleIDMap.has(e);
                }
                add(e, t) {
                    if (this.has(e)) return this.getId(e);
                    let n;
                    return (n = void 0 === t ? this.id++ : t), this.styleIDMap.set(e, n), this.idStyleMap.set(n, e), n;
                }
                getStyle(e) {
                    return this.idStyleMap.get(e) || null;
                }
                reset() {
                    (this.styleIDMap = new WeakMap()), (this.idStyleMap = new Map()), (this.id = 1);
                }
                generateId() {
                    return this.id++;
                }
            }
            function qc(e) {
                let t = null;
                return Sc([e, "access", (e) => e.getRootNode, "optionalCall", (e) => e(), "optionalAccess", (e) => e.nodeType]) === Node.DOCUMENT_FRAGMENT_NODE && e.getRootNode().host && (t = e.getRootNode().host), t;
            }
            function zc(e) {
                const t = e.ownerDocument;
                if (!t) return !1;
                const n = (function (e) {
                    let t,
                        n = e;
                    for (; (t = qc(n)); ) n = t;
                    return n;
                })(e);
                return t.contains(n);
            }
            function Hc(e) {
                const t = e.ownerDocument;
                return !!t && (t.contains(e) || zc(e));
            }
            const Wc = {};
            function Vc(e) {
                const t = Wc[e];
                if (t) return t;
                const n = window.document;
                let r = window[e];
                if (n && "function" == typeof n.createElement)
                    try {
                        const t = n.createElement("iframe");
                        (t.hidden = !0), n.head.appendChild(t);
                        const o = t.contentWindow;
                        o && o[e] && (r = o[e]), n.head.removeChild(t);
                    } catch (e) {}
                return (Wc[e] = r.bind(window));
            }
            function Yc(...e) {
                return Vc("setTimeout")(...e);
            }
            var Gc = ((e) => (
                    (e[(e.DomContentLoaded = 0)] = "DomContentLoaded"),
                    (e[(e.Load = 1)] = "Load"),
                    (e[(e.FullSnapshot = 2)] = "FullSnapshot"),
                    (e[(e.IncrementalSnapshot = 3)] = "IncrementalSnapshot"),
                    (e[(e.Meta = 4)] = "Meta"),
                    (e[(e.Custom = 5)] = "Custom"),
                    (e[(e.Plugin = 6)] = "Plugin"),
                    e
                ))(Gc || {}),
                Kc = ((e) => (
                    (e[(e.Mutation = 0)] = "Mutation"),
                    (e[(e.MouseMove = 1)] = "MouseMove"),
                    (e[(e.MouseInteraction = 2)] = "MouseInteraction"),
                    (e[(e.Scroll = 3)] = "Scroll"),
                    (e[(e.ViewportResize = 4)] = "ViewportResize"),
                    (e[(e.Input = 5)] = "Input"),
                    (e[(e.TouchMove = 6)] = "TouchMove"),
                    (e[(e.MediaInteraction = 7)] = "MediaInteraction"),
                    (e[(e.StyleSheetRule = 8)] = "StyleSheetRule"),
                    (e[(e.CanvasMutation = 9)] = "CanvasMutation"),
                    (e[(e.Font = 10)] = "Font"),
                    (e[(e.Log = 11)] = "Log"),
                    (e[(e.Drag = 12)] = "Drag"),
                    (e[(e.StyleDeclaration = 13)] = "StyleDeclaration"),
                    (e[(e.Selection = 14)] = "Selection"),
                    (e[(e.AdoptedStyleSheet = 15)] = "AdoptedStyleSheet"),
                    (e[(e.CustomElement = 16)] = "CustomElement"),
                    e
                ))(Kc || {}),
                Jc = ((e) => (
                    (e[(e.MouseUp = 0)] = "MouseUp"),
                    (e[(e.MouseDown = 1)] = "MouseDown"),
                    (e[(e.Click = 2)] = "Click"),
                    (e[(e.ContextMenu = 3)] = "ContextMenu"),
                    (e[(e.DblClick = 4)] = "DblClick"),
                    (e[(e.Focus = 5)] = "Focus"),
                    (e[(e.Blur = 6)] = "Blur"),
                    (e[(e.TouchStart = 7)] = "TouchStart"),
                    (e[(e.TouchMove_Departed = 8)] = "TouchMove_Departed"),
                    (e[(e.TouchEnd = 9)] = "TouchEnd"),
                    (e[(e.TouchCancel = 10)] = "TouchCancel"),
                    e
                ))(Jc || {}),
                Xc = ((e) => ((e[(e.Mouse = 0)] = "Mouse"), (e[(e.Pen = 1)] = "Pen"), (e[(e.Touch = 2)] = "Touch"), e))(Xc || {});
            function Qc(e) {
                let t,
                    n = e[0],
                    r = 1;
                for (; r < e.length; ) {
                    const o = e[r],
                        i = e[r + 1];
                    if (((r += 2), ("optionalAccess" === o || "optionalCall" === o) && null == n)) return;
                    "access" === o || "optionalAccess" === o ? ((t = n), (n = i(n))) : ("call" !== o && "optionalCall" !== o) || ((n = i((...e) => n.call(t, ...e))), (t = void 0));
                }
                return n;
            }
            function Zc(e) {
                return "__ln" in e;
            }
            class eu {
                constructor() {
                    (this.length = 0), (this.head = null), (this.tail = null);
                }
                get(e) {
                    if (e >= this.length) throw new Error("Position outside of list range");
                    let t = this.head;
                    for (let n = 0; n < e; n++) t = Qc([t, "optionalAccess", (e) => e.next]) || null;
                    return t;
                }
                addNode(e) {
                    const t = { value: e, previous: null, next: null };
                    if (((e.__ln = t), e.previousSibling && Zc(e.previousSibling))) {
                        const n = e.previousSibling.__ln.next;
                        (t.next = n), (t.previous = e.previousSibling.__ln), (e.previousSibling.__ln.next = t), n && (n.previous = t);
                    } else if (e.nextSibling && Zc(e.nextSibling) && e.nextSibling.__ln.previous) {
                        const n = e.nextSibling.__ln.previous;
                        (t.previous = n), (t.next = e.nextSibling.__ln), (e.nextSibling.__ln.previous = t), n && (n.next = t);
                    } else this.head && (this.head.previous = t), (t.next = this.head), (this.head = t);
                    null === t.next && (this.tail = t), this.length++;
                }
                removeNode(e) {
                    const t = e.__ln;
                    this.head &&
                        (t.previous ? ((t.previous.next = t.next), t.next ? (t.next.previous = t.previous) : (this.tail = t.previous)) : ((this.head = t.next), this.head ? (this.head.previous = null) : (this.tail = null)),
                        e.__ln && delete e.__ln,
                        this.length--);
                }
            }
            const tu = (e, t) => `${e}@${t}`;
            class nu {
                constructor() {
                    (this.frozen = !1),
                        (this.locked = !1),
                        (this.texts = []),
                        (this.attributes = []),
                        (this.attributeMap = new WeakMap()),
                        (this.removes = []),
                        (this.mapRemoves = []),
                        (this.movedMap = {}),
                        (this.addedSet = new Set()),
                        (this.movedSet = new Set()),
                        (this.droppedSet = new Set()),
                        (this.processMutations = (e) => {
                            e.forEach(this.processMutation), this.emit();
                        }),
                        (this.emit = () => {
                            if (this.frozen || this.locked) return;
                            const e = [],
                                t = new Set(),
                                n = new eu(),
                                r = (e) => {
                                    let t = e,
                                        n = ec;
                                    for (; n === ec; ) (t = t && t.nextSibling), (n = t && this.mirror.getId(t));
                                    return n;
                                },
                                o = (o) => {
                                    if (!o.parentNode || !Hc(o)) return;
                                    const i = Da(o.parentNode) ? this.mirror.getId(qc(o)) : this.mirror.getId(o.parentNode),
                                        s = r(o);
                                    if (-1 === i || -1 === s) return n.addNode(o);
                                    const a = wc(o, {
                                        doc: this.doc,
                                        mirror: this.mirror,
                                        blockClass: this.blockClass,
                                        blockSelector: this.blockSelector,
                                        maskAllText: this.maskAllText,
                                        unblockSelector: this.unblockSelector,
                                        maskTextClass: this.maskTextClass,
                                        unmaskTextClass: this.unmaskTextClass,
                                        maskTextSelector: this.maskTextSelector,
                                        unmaskTextSelector: this.unmaskTextSelector,
                                        skipChild: !0,
                                        newlyAddedElement: !0,
                                        inlineStylesheet: this.inlineStylesheet,
                                        maskInputOptions: this.maskInputOptions,
                                        maskAttributeFn: this.maskAttributeFn,
                                        maskTextFn: this.maskTextFn,
                                        maskInputFn: this.maskInputFn,
                                        slimDOMOptions: this.slimDOMOptions,
                                        dataURLOptions: this.dataURLOptions,
                                        recordCanvas: this.recordCanvas,
                                        inlineImages: this.inlineImages,
                                        onSerialize: (e) => {
                                            jc(e, this.mirror) && this.iframeManager.addIframe(e), $c(e, this.mirror) && this.stylesheetManager.trackLinkElement(e), Uc(o) && this.shadowDomManager.addShadowRoot(o.shadowRoot, this.doc);
                                        },
                                        onIframeLoad: (e, t) => {
                                            this.iframeManager.attachIframe(e, t), e.contentWindow && this.canvasManager.addWindow(e.contentWindow), this.shadowDomManager.observeAttachShadow(e);
                                        },
                                        onStylesheetLoad: (e, t) => {
                                            this.stylesheetManager.attachLinkElement(e, t);
                                        },
                                    });
                                    a && (e.push({ parentId: i, nextId: s, node: a }), t.add(a.id));
                                };
                            for (; this.mapRemoves.length; ) this.mirror.removeNodeFromMap(this.mapRemoves.shift());
                            for (const e of this.movedSet) (ou(this.removes, e, this.mirror) && !this.movedSet.has(e.parentNode)) || o(e);
                            for (const e of this.addedSet) su(this.droppedSet, e) || ou(this.removes, e, this.mirror) ? (su(this.movedSet, e) ? o(e) : this.droppedSet.add(e)) : o(e);
                            let i = null;
                            for (; n.length; ) {
                                let e = null;
                                if (i) {
                                    const t = this.mirror.getId(i.value.parentNode),
                                        n = r(i.value);
                                    -1 !== t && -1 !== n && (e = i);
                                }
                                if (!e) {
                                    let t = n.tail;
                                    for (; t; ) {
                                        const n = t;
                                        if (((t = t.previous), n)) {
                                            const t = this.mirror.getId(n.value.parentNode);
                                            if (-1 === r(n.value)) continue;
                                            if (-1 !== t) {
                                                e = n;
                                                break;
                                            }
                                            {
                                                const t = n.value;
                                                if (t.parentNode && t.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
                                                    const r = t.parentNode.host;
                                                    if (-1 !== this.mirror.getId(r)) {
                                                        e = n;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                if (!e) {
                                    for (; n.head; ) n.removeNode(n.head.value);
                                    break;
                                }
                                (i = e.previous), n.removeNode(e.value), o(e.value);
                            }
                            const s = {
                                texts: this.texts
                                    .map((e) => ({ id: this.mirror.getId(e.node), value: e.value }))
                                    .filter((e) => !t.has(e.id))
                                    .filter((e) => this.mirror.has(e.id)),
                                attributes: this.attributes
                                    .map((e) => {
                                        const { attributes: t } = e;
                                        if ("string" == typeof t.style) {
                                            const n = JSON.stringify(e.styleDiff),
                                                r = JSON.stringify(e._unchangedStyles);
                                            n.length < t.style.length && (n + r).split("var(").length === t.style.split("var(").length && (t.style = e.styleDiff);
                                        }
                                        return { id: this.mirror.getId(e.node), attributes: t };
                                    })
                                    .filter((e) => !t.has(e.id))
                                    .filter((e) => this.mirror.has(e.id)),
                                removes: this.removes,
                                adds: e,
                            };
                            (s.texts.length || s.attributes.length || s.removes.length || s.adds.length) &&
                                ((this.texts = []),
                                (this.attributes = []),
                                (this.attributeMap = new WeakMap()),
                                (this.removes = []),
                                (this.addedSet = new Set()),
                                (this.movedSet = new Set()),
                                (this.droppedSet = new Set()),
                                (this.movedMap = {}),
                                this.mutationCb(s));
                        }),
                        (this.processMutation = (e) => {
                            if (!Dc(e.target, this.mirror))
                                switch (e.type) {
                                    case "characterData": {
                                        const t = e.target.textContent;
                                        Pc(e.target, this.blockClass, this.blockSelector, this.unblockSelector, !1) ||
                                            t === e.oldValue ||
                                            this.texts.push({
                                                value:
                                                    yc(e.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && t
                                                        ? this.maskTextFn
                                                            ? this.maskTextFn(t, Nc(e.target))
                                                            : t.replace(/[\S]/g, "*")
                                                        : t,
                                                node: e.target,
                                            });
                                        break;
                                    }
                                    case "attributes": {
                                        const t = e.target;
                                        let n = e.attributeName,
                                            r = e.target.getAttribute(n);
                                        if ("value" === n) {
                                            const n = Wa(t),
                                                o = t.tagName;
                                            r = Va(t, o, n);
                                            const i = Ua({ maskInputOptions: this.maskInputOptions, tagName: o, type: n });
                                            r = Ba({ isMasked: yc(e.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, i), element: t, value: r, maskInputFn: this.maskInputFn });
                                        }
                                        if (Pc(e.target, this.blockClass, this.blockSelector, this.unblockSelector, !1) || r === e.oldValue) return;
                                        let o = this.attributeMap.get(e.target);
                                        if ("IFRAME" === t.tagName && "src" === n && !this.keepIframeSrcFn(r)) {
                                            if (t.contentDocument) return;
                                            n = "rr_src";
                                        }
                                        if (
                                            (o || ((o = { node: e.target, attributes: {}, styleDiff: {}, _unchangedStyles: {} }), this.attributes.push(o), this.attributeMap.set(e.target, o)),
                                            "type" === n && "INPUT" === t.tagName && "password" === (e.oldValue || "").toLowerCase() && t.setAttribute("data-rr-is-password", "true"),
                                            !mc(t.tagName, n) && ((o.attributes[n] = hc(this.doc, qa(t.tagName), qa(n), r, t, this.maskAttributeFn)), "style" === n))
                                        ) {
                                            if (!this.unattachedDoc)
                                                try {
                                                    this.unattachedDoc = document.implementation.createHTMLDocument();
                                                } catch (e) {
                                                    this.unattachedDoc = this.doc;
                                                }
                                            const n = this.unattachedDoc.createElement("span");
                                            e.oldValue && n.setAttribute("style", e.oldValue);
                                            for (const e of Array.from(t.style)) {
                                                const r = t.style.getPropertyValue(e),
                                                    i = t.style.getPropertyPriority(e);
                                                r !== n.style.getPropertyValue(e) || i !== n.style.getPropertyPriority(e) ? (o.styleDiff[e] = "" === i ? r : [r, i]) : (o._unchangedStyles[e] = [r, i]);
                                            }
                                            for (const e of Array.from(n.style)) "" === t.style.getPropertyValue(e) && (o.styleDiff[e] = !1);
                                        }
                                        break;
                                    }
                                    case "childList":
                                        if (Pc(e.target, this.blockClass, this.blockSelector, this.unblockSelector, !0)) return;
                                        e.addedNodes.forEach((t) => this.genAdds(t, e.target)),
                                            e.removedNodes.forEach((t) => {
                                                const n = this.mirror.getId(t),
                                                    r = Da(e.target) ? this.mirror.getId(e.target.host) : this.mirror.getId(e.target);
                                                Pc(e.target, this.blockClass, this.blockSelector, this.unblockSelector, !1) ||
                                                    Dc(t, this.mirror) ||
                                                    !(function (e, t) {
                                                        return -1 !== t.getId(e);
                                                    })(t, this.mirror) ||
                                                    (this.addedSet.has(t)
                                                        ? (ru(this.addedSet, t), this.droppedSet.add(t))
                                                        : (this.addedSet.has(e.target) && -1 === n) ||
                                                          Lc(e.target, this.mirror) ||
                                                          (this.movedSet.has(t) && this.movedMap[tu(n, r)] ? ru(this.movedSet, t) : this.removes.push({ parentId: r, id: n, isShadow: !(!Da(e.target) || !La(e.target)) || void 0 })),
                                                    this.mapRemoves.push(t));
                                            });
                                }
                        }),
                        (this.genAdds = (e, t) => {
                            if (!this.processedNodeManager.inOtherBuffer(e, this) && !this.addedSet.has(e) && !this.movedSet.has(e)) {
                                if (this.mirror.hasNode(e)) {
                                    if (Dc(e, this.mirror)) return;
                                    this.movedSet.add(e);
                                    let n = null;
                                    t && this.mirror.hasNode(t) && (n = this.mirror.getId(t)), n && -1 !== n && (this.movedMap[tu(this.mirror.getId(e), n)] = !0);
                                } else this.addedSet.add(e), this.droppedSet.delete(e);
                                Pc(e, this.blockClass, this.blockSelector, this.unblockSelector, !1) ||
                                    (e.childNodes.forEach((e) => this.genAdds(e)),
                                    Uc(e) &&
                                        e.shadowRoot.childNodes.forEach((t) => {
                                            this.processedNodeManager.add(t, this), this.genAdds(t, e);
                                        }));
                            }
                        });
                }
                init(e) {
                    [
                        "mutationCb",
                        "blockClass",
                        "blockSelector",
                        "unblockSelector",
                        "maskAllText",
                        "maskTextClass",
                        "unmaskTextClass",
                        "maskTextSelector",
                        "unmaskTextSelector",
                        "inlineStylesheet",
                        "maskInputOptions",
                        "maskAttributeFn",
                        "maskTextFn",
                        "maskInputFn",
                        "keepIframeSrcFn",
                        "recordCanvas",
                        "inlineImages",
                        "slimDOMOptions",
                        "dataURLOptions",
                        "doc",
                        "mirror",
                        "iframeManager",
                        "stylesheetManager",
                        "shadowDomManager",
                        "canvasManager",
                        "processedNodeManager",
                    ].forEach((t) => {
                        this[t] = e[t];
                    });
                }
                freeze() {
                    (this.frozen = !0), this.canvasManager.freeze();
                }
                unfreeze() {
                    (this.frozen = !1), this.canvasManager.unfreeze(), this.emit();
                }
                isFrozen() {
                    return this.frozen;
                }
                lock() {
                    (this.locked = !0), this.canvasManager.lock();
                }
                unlock() {
                    (this.locked = !1), this.canvasManager.unlock(), this.emit();
                }
                reset() {
                    this.shadowDomManager.reset(), this.canvasManager.reset();
                }
            }
            function ru(e, t) {
                e.delete(t), t.childNodes.forEach((t) => ru(e, t));
            }
            function ou(e, t, n) {
                return 0 !== e.length && iu(e, t, n);
            }
            function iu(e, t, n) {
                const { parentNode: r } = t;
                if (!r) return !1;
                const o = n.getId(r);
                return !!e.some((e) => e.id === o) || iu(e, r, n);
            }
            function su(e, t) {
                return 0 !== e.size && au(e, t);
            }
            function au(e, t) {
                const { parentNode: n } = t;
                return !!n && (!!e.has(n) || au(e, n));
            }
            let cu;
            function uu(e) {
                cu = e;
            }
            function lu() {
                cu = void 0;
            }
            const du = (e) => {
                if (!cu) return e;
                return (...t) => {
                    try {
                        return e(...t);
                    } catch (e) {
                        if (cu && !0 === cu(e)) return () => {};
                        throw e;
                    }
                };
            };
            function pu(e) {
                let t,
                    n = e[0],
                    r = 1;
                for (; r < e.length; ) {
                    const o = e[r],
                        i = e[r + 1];
                    if (((r += 2), ("optionalAccess" === o || "optionalCall" === o) && null == n)) return;
                    "access" === o || "optionalAccess" === o ? ((t = n), (n = i(n))) : ("call" !== o && "optionalCall" !== o) || ((n = i((...e) => n.call(t, ...e))), (t = void 0));
                }
                return n;
            }
            const fu = [];
            function hu(e) {
                try {
                    if ("composedPath" in e) {
                        const t = e.composedPath();
                        if (t.length) return t[0];
                    } else if ("path" in e && e.path.length) return e.path[0];
                } catch (e) {}
                return e && e.target;
            }
            function mu(e, t) {
                const n = new nu();
                fu.push(n), n.init(e);
                let r = window.MutationObserver || window.__rrMutationObserver;
                const o = pu([window, "optionalAccess", (e) => e.Zone, "optionalAccess", (e) => e.__symbol__, "optionalCall", (e) => e("MutationObserver")]);
                o && window[o] && (r = window[o]);
                const i = new r(
                    du((t) => {
                        (e.onMutation && !1 === e.onMutation(t)) || n.processMutations.bind(n)(t);
                    })
                );
                return i.observe(t, { attributes: !0, attributeOldValue: !0, characterData: !0, characterDataOldValue: !0, childList: !0, subtree: !0 }), i;
            }
            function gu({ mouseInteractionCb: e, doc: t, mirror: n, blockClass: r, blockSelector: o, unblockSelector: i, sampling: s }) {
                if (!1 === s.mouseInteraction) return () => {};
                const a = !0 === s.mouseInteraction || void 0 === s.mouseInteraction ? {} : s.mouseInteraction,
                    c = [];
                let u = null;
                return (
                    Object.keys(Jc)
                        .filter((e) => Number.isNaN(Number(e)) && !e.endsWith("_Departed") && !1 !== a[e])
                        .forEach((s) => {
                            let a = qa(s);
                            const l = ((t) => (s) => {
                                const a = hu(s);
                                if (Pc(a, r, o, i, !0)) return;
                                let c = null,
                                    l = t;
                                if ("pointerType" in s) {
                                    switch (s.pointerType) {
                                        case "mouse":
                                            c = Xc.Mouse;
                                            break;
                                        case "touch":
                                            c = Xc.Touch;
                                            break;
                                        case "pen":
                                            c = Xc.Pen;
                                    }
                                    c === Xc.Touch ? (Jc[t] === Jc.MouseDown ? (l = "TouchStart") : Jc[t] === Jc.MouseUp && (l = "TouchEnd")) : Xc.Pen;
                                } else Fc(s) && (c = Xc.Touch);
                                null !== c ? ((u = c), ((l.startsWith("Touch") && c === Xc.Touch) || (l.startsWith("Mouse") && c === Xc.Mouse)) && (c = null)) : Jc[t] === Jc.Click && ((c = u), (u = null));
                                const d = Fc(s) ? s.changedTouches[0] : s;
                                if (!d) return;
                                const p = n.getId(a),
                                    { clientX: f, clientY: h } = d;
                                du(e)({ type: Jc[l], id: p, x: f, y: h, ...(null !== c && { pointerType: c }) });
                            })(s);
                            if (window.PointerEvent)
                                switch (Jc[s]) {
                                    case Jc.MouseDown:
                                    case Jc.MouseUp:
                                        a = a.replace("mouse", "pointer");
                                        break;
                                    case Jc.TouchStart:
                                    case Jc.TouchEnd:
                                        return;
                                }
                            c.push(kc(a, l, t));
                        }),
                    du(() => {
                        c.forEach((e) => e());
                    })
                );
            }
            function vu({ scrollCb: e, doc: t, mirror: n, blockClass: r, blockSelector: o, unblockSelector: i, sampling: s }) {
                return kc(
                    "scroll",
                    du(
                        Ic(
                            du((s) => {
                                const a = hu(s);
                                if (!a || Pc(a, r, o, i, !0)) return;
                                const c = n.getId(a);
                                if (a === t && t.defaultView) {
                                    const n = Mc(t.defaultView);
                                    e({ id: c, x: n.left, y: n.top });
                                } else e({ id: c, x: a.scrollLeft, y: a.scrollTop });
                            }),
                            s.scroll || 100
                        )
                    ),
                    t
                );
            }
            const yu = ["INPUT", "TEXTAREA", "SELECT"],
                _u = new WeakMap();
            function bu({
                inputCb: e,
                doc: t,
                mirror: n,
                blockClass: r,
                blockSelector: o,
                unblockSelector: i,
                ignoreClass: s,
                ignoreSelector: a,
                maskInputOptions: c,
                maskInputFn: u,
                sampling: l,
                userTriggeredOnInput: d,
                maskTextClass: p,
                unmaskTextClass: f,
                maskTextSelector: h,
                unmaskTextSelector: m,
            }) {
                function g(e) {
                    let n = hu(e);
                    const l = e.isTrusted,
                        g = n && za(n.tagName);
                    if (("OPTION" === g && (n = n.parentElement), !n || !g || yu.indexOf(g) < 0 || Pc(n, r, o, i, !0))) return;
                    const y = n;
                    if (y.classList.contains(s) || (a && y.matches(a))) return;
                    const _ = Wa(n);
                    let b = Va(y, g, _),
                        w = !1;
                    const S = Ua({ maskInputOptions: c, tagName: g, type: _ }),
                        k = yc(n, p, h, f, m, S);
                    ("radio" !== _ && "checkbox" !== _) || (w = n.checked), (b = Ba({ isMasked: k, element: n, value: b, maskInputFn: u })), v(n, d ? { text: b, isChecked: w, userTriggered: l } : { text: b, isChecked: w });
                    const x = n.name;
                    "radio" === _ &&
                        x &&
                        w &&
                        t.querySelectorAll(`input[type="radio"][name="${x}"]`).forEach((e) => {
                            if (e !== n) {
                                const t = Ba({ isMasked: k, element: e, value: Va(e, g, _), maskInputFn: u });
                                v(e, d ? { text: t, isChecked: !w, userTriggered: !1 } : { text: t, isChecked: !w });
                            }
                        });
                }
                function v(t, r) {
                    const o = _u.get(t);
                    if (!o || o.text !== r.text || o.isChecked !== r.isChecked) {
                        _u.set(t, r);
                        const o = n.getId(t);
                        du(e)({ ...r, id: o });
                    }
                }
                const y = ("last" === l.input ? ["change"] : ["input", "change"]).map((e) => kc(e, du(g), t)),
                    _ = t.defaultView;
                if (!_)
                    return () => {
                        y.forEach((e) => e());
                    };
                const b = _.Object.getOwnPropertyDescriptor(_.HTMLInputElement.prototype, "value"),
                    w = [
                        [_.HTMLInputElement.prototype, "value"],
                        [_.HTMLInputElement.prototype, "checked"],
                        [_.HTMLSelectElement.prototype, "value"],
                        [_.HTMLTextAreaElement.prototype, "value"],
                        [_.HTMLSelectElement.prototype, "selectedIndex"],
                        [_.HTMLOptionElement.prototype, "selected"],
                    ];
                return (
                    b &&
                        b.set &&
                        y.push(
                            ...w.map((e) =>
                                Tc(
                                    e[0],
                                    e[1],
                                    {
                                        set() {
                                            du(g)({ target: this, isTrusted: !1 });
                                        },
                                    },
                                    !1,
                                    _
                                )
                            )
                        ),
                    du(() => {
                        y.forEach((e) => e());
                    })
                );
            }
            function wu(e) {
                return (function (e, t) {
                    if (
                        (Eu("CSSGroupingRule") && e.parentRule instanceof CSSGroupingRule) ||
                        (Eu("CSSMediaRule") && e.parentRule instanceof CSSMediaRule) ||
                        (Eu("CSSSupportsRule") && e.parentRule instanceof CSSSupportsRule) ||
                        (Eu("CSSConditionRule") && e.parentRule instanceof CSSConditionRule)
                    ) {
                        const n = Array.from(e.parentRule.cssRules).indexOf(e);
                        t.unshift(n);
                    } else if (e.parentStyleSheet) {
                        const n = Array.from(e.parentStyleSheet.cssRules).indexOf(e);
                        t.unshift(n);
                    }
                    return t;
                })(e, []);
            }
            function Su(e, t, n) {
                let r, o;
                return e ? (e.ownerNode ? (r = t.getId(e.ownerNode)) : (o = n.getId(e)), { styleId: o, id: r }) : {};
            }
            function ku({ mirror: e, stylesheetManager: t }, n) {
                let r = null;
                r = "#document" === n.nodeName ? e.getId(n) : e.getId(n.host);
                const o =
                        "#document" === n.nodeName
                            ? pu([n, "access", (e) => e.defaultView, "optionalAccess", (e) => e.Document])
                            : pu([n, "access", (e) => e.ownerDocument, "optionalAccess", (e) => e.defaultView, "optionalAccess", (e) => e.ShadowRoot]),
                    i = pu([o, "optionalAccess", (e) => e.prototype]) ? Object.getOwnPropertyDescriptor(pu([o, "optionalAccess", (e) => e.prototype]), "adoptedStyleSheets") : void 0;
                return null !== r && -1 !== r && o && i
                    ? (Object.defineProperty(n, "adoptedStyleSheets", {
                          configurable: i.configurable,
                          enumerable: i.enumerable,
                          get() {
                              return pu([i, "access", (e) => e.get, "optionalAccess", (e) => e.call, "call", (e) => e(this)]);
                          },
                          set(e) {
                              const n = pu([i, "access", (e) => e.set, "optionalAccess", (e) => e.call, "call", (t) => t(this, e)]);
                              if (null !== r && -1 !== r)
                                  try {
                                      t.adoptStyleSheets(e, r);
                                  } catch (e) {}
                              return n;
                          },
                      }),
                      du(() => {
                          Object.defineProperty(n, "adoptedStyleSheets", { configurable: i.configurable, enumerable: i.enumerable, get: i.get, set: i.set });
                      }))
                    : () => {};
            }
            function xu(e, t = {}) {
                const n = e.doc.defaultView;
                if (!n) return () => {};
                let r;
                e.recordDOM && (r = mu(e, e.doc));
                const o = (function ({ mousemoveCb: e, sampling: t, doc: n, mirror: r }) {
                        if (!1 === t.mousemove) return () => {};
                        const o = "number" == typeof t.mousemove ? t.mousemove : 50,
                            i = "number" == typeof t.mousemoveCallback ? t.mousemoveCallback : 500;
                        let s,
                            a = [];
                        const c = Ic(
                                du((t) => {
                                    const n = Date.now() - s;
                                    e(
                                        a.map((e) => ((e.timeOffset -= n), e)),
                                        t
                                    ),
                                        (a = []),
                                        (s = null);
                                }),
                                i
                            ),
                            u = du(
                                Ic(
                                    du((e) => {
                                        const t = hu(e),
                                            { clientX: n, clientY: o } = Fc(e) ? e.changedTouches[0] : e;
                                        s || (s = Ac()),
                                            a.push({ x: n, y: o, id: r.getId(t), timeOffset: Ac() - s }),
                                            c("undefined" != typeof DragEvent && e instanceof DragEvent ? Kc.Drag : e instanceof MouseEvent ? Kc.MouseMove : Kc.TouchMove);
                                    }),
                                    o,
                                    { trailing: !1 }
                                )
                            ),
                            l = [kc("mousemove", u, n), kc("touchmove", u, n), kc("drag", u, n)];
                        return du(() => {
                            l.forEach((e) => e());
                        });
                    })(e),
                    i = gu(e),
                    s = vu(e),
                    a = (function ({ viewportResizeCb: e }, { win: t }) {
                        let n = -1,
                            r = -1;
                        return kc(
                            "resize",
                            du(
                                Ic(
                                    du(() => {
                                        const t = Rc(),
                                            o = Oc();
                                        (n === t && r === o) || (e({ width: Number(o), height: Number(t) }), (n = t), (r = o));
                                    }),
                                    200
                                )
                            ),
                            t
                        );
                    })(e, { win: n }),
                    c = bu(e),
                    u = (function ({ mediaInteractionCb: e, blockClass: t, blockSelector: n, unblockSelector: r, mirror: o, sampling: i, doc: s }) {
                        const a = du((s) =>
                                Ic(
                                    du((i) => {
                                        const a = hu(i);
                                        if (!a || Pc(a, t, n, r, !0)) return;
                                        const { currentTime: c, volume: u, muted: l, playbackRate: d } = a;
                                        e({ type: s, id: o.getId(a), currentTime: c, volume: u, muted: l, playbackRate: d });
                                    }),
                                    i.media || 500
                                )
                            ),
                            c = [kc("play", a(0), s), kc("pause", a(1), s), kc("seeked", a(2), s), kc("volumechange", a(3), s), kc("ratechange", a(4), s)];
                        return du(() => {
                            c.forEach((e) => e());
                        });
                    })(e);
                let l = () => {},
                    d = () => {},
                    p = () => {},
                    f = () => {};
                e.recordDOM &&
                    ((l = (function ({ styleSheetRuleCb: e, mirror: t, stylesheetManager: n }, { win: r }) {
                        if (!r.CSSStyleSheet || !r.CSSStyleSheet.prototype) return () => {};
                        const o = r.CSSStyleSheet.prototype.insertRule;
                        r.CSSStyleSheet.prototype.insertRule = new Proxy(o, {
                            apply: du((r, o, i) => {
                                const [s, a] = i,
                                    { id: c, styleId: u } = Su(o, t, n.styleMirror);
                                return ((c && -1 !== c) || (u && -1 !== u)) && e({ id: c, styleId: u, adds: [{ rule: s, index: a }] }), r.apply(o, i);
                            }),
                        });
                        const i = r.CSSStyleSheet.prototype.deleteRule;
                        let s, a;
                        (r.CSSStyleSheet.prototype.deleteRule = new Proxy(i, {
                            apply: du((r, o, i) => {
                                const [s] = i,
                                    { id: a, styleId: c } = Su(o, t, n.styleMirror);
                                return ((a && -1 !== a) || (c && -1 !== c)) && e({ id: a, styleId: c, removes: [{ index: s }] }), r.apply(o, i);
                            }),
                        })),
                            r.CSSStyleSheet.prototype.replace &&
                                ((s = r.CSSStyleSheet.prototype.replace),
                                (r.CSSStyleSheet.prototype.replace = new Proxy(s, {
                                    apply: du((r, o, i) => {
                                        const [s] = i,
                                            { id: a, styleId: c } = Su(o, t, n.styleMirror);
                                        return ((a && -1 !== a) || (c && -1 !== c)) && e({ id: a, styleId: c, replace: s }), r.apply(o, i);
                                    }),
                                }))),
                            r.CSSStyleSheet.prototype.replaceSync &&
                                ((a = r.CSSStyleSheet.prototype.replaceSync),
                                (r.CSSStyleSheet.prototype.replaceSync = new Proxy(a, {
                                    apply: du((r, o, i) => {
                                        const [s] = i,
                                            { id: a, styleId: c } = Su(o, t, n.styleMirror);
                                        return ((a && -1 !== a) || (c && -1 !== c)) && e({ id: a, styleId: c, replaceSync: s }), r.apply(o, i);
                                    }),
                                })));
                        const c = {};
                        Iu("CSSGroupingRule")
                            ? (c.CSSGroupingRule = r.CSSGroupingRule)
                            : (Iu("CSSMediaRule") && (c.CSSMediaRule = r.CSSMediaRule), Iu("CSSConditionRule") && (c.CSSConditionRule = r.CSSConditionRule), Iu("CSSSupportsRule") && (c.CSSSupportsRule = r.CSSSupportsRule));
                        const u = {};
                        return (
                            Object.entries(c).forEach(([r, o]) => {
                                (u[r] = { insertRule: o.prototype.insertRule, deleteRule: o.prototype.deleteRule }),
                                    (o.prototype.insertRule = new Proxy(u[r].insertRule, {
                                        apply: du((r, o, i) => {
                                            const [s, a] = i,
                                                { id: c, styleId: u } = Su(o.parentStyleSheet, t, n.styleMirror);
                                            return ((c && -1 !== c) || (u && -1 !== u)) && e({ id: c, styleId: u, adds: [{ rule: s, index: [...wu(o), a || 0] }] }), r.apply(o, i);
                                        }),
                                    })),
                                    (o.prototype.deleteRule = new Proxy(u[r].deleteRule, {
                                        apply: du((r, o, i) => {
                                            const [s] = i,
                                                { id: a, styleId: c } = Su(o.parentStyleSheet, t, n.styleMirror);
                                            return ((a && -1 !== a) || (c && -1 !== c)) && e({ id: a, styleId: c, removes: [{ index: [...wu(o), s] }] }), r.apply(o, i);
                                        }),
                                    }));
                            }),
                            du(() => {
                                (r.CSSStyleSheet.prototype.insertRule = o),
                                    (r.CSSStyleSheet.prototype.deleteRule = i),
                                    s && (r.CSSStyleSheet.prototype.replace = s),
                                    a && (r.CSSStyleSheet.prototype.replaceSync = a),
                                    Object.entries(c).forEach(([e, t]) => {
                                        (t.prototype.insertRule = u[e].insertRule), (t.prototype.deleteRule = u[e].deleteRule);
                                    });
                            })
                        );
                    })(e, { win: n })),
                    (d = ku(e, e.doc)),
                    (p = (function ({ styleDeclarationCb: e, mirror: t, ignoreCSSAttributes: n, stylesheetManager: r }, { win: o }) {
                        const i = o.CSSStyleDeclaration.prototype.setProperty;
                        o.CSSStyleDeclaration.prototype.setProperty = new Proxy(i, {
                            apply: du((o, s, a) => {
                                const [c, u, l] = a;
                                if (n.has(c)) return i.apply(s, [c, u, l]);
                                const { id: d, styleId: p } = Su(pu([s, "access", (e) => e.parentRule, "optionalAccess", (e) => e.parentStyleSheet]), t, r.styleMirror);
                                return ((d && -1 !== d) || (p && -1 !== p)) && e({ id: d, styleId: p, set: { property: c, value: u, priority: l }, index: wu(s.parentRule) }), o.apply(s, a);
                            }),
                        });
                        const s = o.CSSStyleDeclaration.prototype.removeProperty;
                        return (
                            (o.CSSStyleDeclaration.prototype.removeProperty = new Proxy(s, {
                                apply: du((o, i, a) => {
                                    const [c] = a;
                                    if (n.has(c)) return s.apply(i, [c]);
                                    const { id: u, styleId: l } = Su(pu([i, "access", (e) => e.parentRule, "optionalAccess", (e) => e.parentStyleSheet]), t, r.styleMirror);
                                    return ((u && -1 !== u) || (l && -1 !== l)) && e({ id: u, styleId: l, remove: { property: c }, index: wu(i.parentRule) }), o.apply(i, a);
                                }),
                            })),
                            du(() => {
                                (o.CSSStyleDeclaration.prototype.setProperty = i), (o.CSSStyleDeclaration.prototype.removeProperty = s);
                            })
                        );
                    })(e, { win: n })),
                    e.collectFonts &&
                        (f = (function ({ fontCb: e, doc: t }) {
                            const n = t.defaultView;
                            if (!n) return () => {};
                            const r = [],
                                o = new WeakMap(),
                                i = n.FontFace;
                            n.FontFace = function (e, t, n) {
                                const r = new i(e, t, n);
                                return o.set(r, { family: e, buffer: "string" != typeof t, descriptors: n, fontSource: "string" == typeof t ? t : JSON.stringify(Array.from(new Uint8Array(t))) }), r;
                            };
                            const s = Cc(t.fonts, "add", function (t) {
                                return function (n) {
                                    return (
                                        Yc(
                                            du(() => {
                                                const t = o.get(n);
                                                t && (e(t), o.delete(n));
                                            }),
                                            0
                                        ),
                                        t.apply(this, [n])
                                    );
                                };
                            });
                            return (
                                r.push(() => {
                                    n.FontFace = i;
                                }),
                                r.push(s),
                                du(() => {
                                    r.forEach((e) => e());
                                })
                            );
                        })(e)));
                const h = (function (e) {
                        const { doc: t, mirror: n, blockClass: r, blockSelector: o, unblockSelector: i, selectionCb: s } = e;
                        let a = !0;
                        const c = du(() => {
                            const e = t.getSelection();
                            if (!e || (a && pu([e, "optionalAccess", (e) => e.isCollapsed]))) return;
                            a = e.isCollapsed || !1;
                            const c = [],
                                u = e.rangeCount || 0;
                            for (let t = 0; t < u; t++) {
                                const s = e.getRangeAt(t),
                                    { startContainer: a, startOffset: u, endContainer: l, endOffset: d } = s;
                                Pc(a, r, o, i, !0) || Pc(l, r, o, i, !0) || c.push({ start: n.getId(a), startOffset: u, end: n.getId(l), endOffset: d });
                            }
                            s({ ranges: c });
                        });
                        return c(), kc("selectionchange", c);
                    })(e),
                    m = (function ({ doc: e, customElementCb: t }) {
                        const n = e.defaultView;
                        return n && n.customElements
                            ? Cc(n.customElements, "define", function (e) {
                                  return function (n, r, o) {
                                      try {
                                          t({ define: { name: n } });
                                      } catch (e) {}
                                      return e.apply(this, [n, r, o]);
                                  };
                              })
                            : () => {};
                    })(e),
                    g = [];
                for (const t of e.plugins) g.push(t.observer(t.callback, n, t.options));
                return du(() => {
                    fu.forEach((e) => e.reset()), pu([r, "optionalAccess", (e) => e.disconnect, "call", (e) => e()]), o(), i(), s(), a(), c(), u(), l(), d(), p(), f(), h(), m(), g.forEach((e) => e());
                });
            }
            function Eu(e) {
                return void 0 !== window[e];
            }
            function Iu(e) {
                return Boolean(void 0 !== window[e] && window[e].prototype && "insertRule" in window[e].prototype && "deleteRule" in window[e].prototype);
            }
            class Tu {
                constructor(e) {
                    (this.generateIdFn = e), (this.iframeIdToRemoteIdMap = new WeakMap()), (this.iframeRemoteIdToIdMap = new WeakMap());
                }
                getId(e, t, n, r) {
                    const o = n || this.getIdToRemoteIdMap(e),
                        i = r || this.getRemoteIdToIdMap(e);
                    let s = o.get(t);
                    return s || ((s = this.generateIdFn()), o.set(t, s), i.set(s, t)), s;
                }
                getIds(e, t) {
                    const n = this.getIdToRemoteIdMap(e),
                        r = this.getRemoteIdToIdMap(e);
                    return t.map((t) => this.getId(e, t, n, r));
                }
                getRemoteId(e, t, n) {
                    const r = n || this.getRemoteIdToIdMap(e);
                    if ("number" != typeof t) return t;
                    const o = r.get(t);
                    return o || -1;
                }
                getRemoteIds(e, t) {
                    const n = this.getRemoteIdToIdMap(e);
                    return t.map((t) => this.getRemoteId(e, t, n));
                }
                reset(e) {
                    if (!e) return (this.iframeIdToRemoteIdMap = new WeakMap()), void (this.iframeRemoteIdToIdMap = new WeakMap());
                    this.iframeIdToRemoteIdMap.delete(e), this.iframeRemoteIdToIdMap.delete(e);
                }
                getIdToRemoteIdMap(e) {
                    let t = this.iframeIdToRemoteIdMap.get(e);
                    return t || ((t = new Map()), this.iframeIdToRemoteIdMap.set(e, t)), t;
                }
                getRemoteIdToIdMap(e) {
                    let t = this.iframeRemoteIdToIdMap.get(e);
                    return t || ((t = new Map()), this.iframeRemoteIdToIdMap.set(e, t)), t;
                }
            }
            function Cu(e) {
                let t,
                    n = e[0],
                    r = 1;
                for (; r < e.length; ) {
                    const o = e[r],
                        i = e[r + 1];
                    if (((r += 2), ("optionalAccess" === o || "optionalCall" === o) && null == n)) return;
                    "access" === o || "optionalAccess" === o ? ((t = n), (n = i(n))) : ("call" !== o && "optionalCall" !== o) || ((n = i((...e) => n.call(t, ...e))), (t = void 0));
                }
                return n;
            }
            class Au {
                constructor() {
                    (this.crossOriginIframeMirror = new Tu(tc)), (this.crossOriginIframeRootIdMap = new WeakMap());
                }
                addIframe() {}
                addLoadListener() {}
                attachIframe() {}
            }
            class Mu {
                constructor(e) {
                    (this.iframes = new WeakMap()),
                        (this.crossOriginIframeMap = new WeakMap()),
                        (this.crossOriginIframeMirror = new Tu(tc)),
                        (this.crossOriginIframeRootIdMap = new WeakMap()),
                        (this.mutationCb = e.mutationCb),
                        (this.wrappedEmit = e.wrappedEmit),
                        (this.stylesheetManager = e.stylesheetManager),
                        (this.recordCrossOriginIframes = e.recordCrossOriginIframes),
                        (this.crossOriginIframeStyleMirror = new Tu(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror))),
                        (this.mirror = e.mirror),
                        this.recordCrossOriginIframes && window.addEventListener("message", this.handleMessage.bind(this));
                }
                addIframe(e) {
                    this.iframes.set(e, !0), e.contentWindow && this.crossOriginIframeMap.set(e.contentWindow, e);
                }
                addLoadListener(e) {
                    this.loadListener = e;
                }
                attachIframe(e, t) {
                    this.mutationCb({ adds: [{ parentId: this.mirror.getId(e), nextId: null, node: t }], removes: [], texts: [], attributes: [], isAttachIframe: !0 }),
                        Cu([this, "access", (e) => e.loadListener, "optionalCall", (t) => t(e)]),
                        e.contentDocument &&
                            e.contentDocument.adoptedStyleSheets &&
                            e.contentDocument.adoptedStyleSheets.length > 0 &&
                            this.stylesheetManager.adoptStyleSheets(e.contentDocument.adoptedStyleSheets, this.mirror.getId(e.contentDocument));
                }
                handleMessage(e) {
                    const t = e;
                    if ("rrweb" !== t.data.type || t.origin !== t.data.origin) return;
                    if (!e.source) return;
                    const n = this.crossOriginIframeMap.get(e.source);
                    if (!n) return;
                    const r = this.transformCrossOriginEvent(n, t.data.event);
                    r && this.wrappedEmit(r, t.data.isCheckout);
                }
                transformCrossOriginEvent(e, t) {
                    switch (t.type) {
                        case Gc.FullSnapshot: {
                            this.crossOriginIframeMirror.reset(e), this.crossOriginIframeStyleMirror.reset(e), this.replaceIdOnNode(t.data.node, e);
                            const n = t.data.node.id;
                            return (
                                this.crossOriginIframeRootIdMap.set(e, n),
                                this.patchRootIdOnNode(t.data.node, n),
                                {
                                    timestamp: t.timestamp,
                                    type: Gc.IncrementalSnapshot,
                                    data: { source: Kc.Mutation, adds: [{ parentId: this.mirror.getId(e), nextId: null, node: t.data.node }], removes: [], texts: [], attributes: [], isAttachIframe: !0 },
                                }
                            );
                        }
                        case Gc.Meta:
                        case Gc.Load:
                        case Gc.DomContentLoaded:
                            return !1;
                        case Gc.Plugin:
                            return t;
                        case Gc.Custom:
                            return this.replaceIds(t.data.payload, e, ["id", "parentId", "previousId", "nextId"]), t;
                        case Gc.IncrementalSnapshot:
                            switch (t.data.source) {
                                case Kc.Mutation:
                                    return (
                                        t.data.adds.forEach((t) => {
                                            this.replaceIds(t, e, ["parentId", "nextId", "previousId"]), this.replaceIdOnNode(t.node, e);
                                            const n = this.crossOriginIframeRootIdMap.get(e);
                                            n && this.patchRootIdOnNode(t.node, n);
                                        }),
                                        t.data.removes.forEach((t) => {
                                            this.replaceIds(t, e, ["parentId", "id"]);
                                        }),
                                        t.data.attributes.forEach((t) => {
                                            this.replaceIds(t, e, ["id"]);
                                        }),
                                        t.data.texts.forEach((t) => {
                                            this.replaceIds(t, e, ["id"]);
                                        }),
                                        t
                                    );
                                case Kc.Drag:
                                case Kc.TouchMove:
                                case Kc.MouseMove:
                                    return (
                                        t.data.positions.forEach((t) => {
                                            this.replaceIds(t, e, ["id"]);
                                        }),
                                        t
                                    );
                                case Kc.ViewportResize:
                                    return !1;
                                case Kc.MediaInteraction:
                                case Kc.MouseInteraction:
                                case Kc.Scroll:
                                case Kc.CanvasMutation:
                                case Kc.Input:
                                    return this.replaceIds(t.data, e, ["id"]), t;
                                case Kc.StyleSheetRule:
                                case Kc.StyleDeclaration:
                                    return this.replaceIds(t.data, e, ["id"]), this.replaceStyleIds(t.data, e, ["styleId"]), t;
                                case Kc.Font:
                                    return t;
                                case Kc.Selection:
                                    return (
                                        t.data.ranges.forEach((t) => {
                                            this.replaceIds(t, e, ["start", "end"]);
                                        }),
                                        t
                                    );
                                case Kc.AdoptedStyleSheet:
                                    return (
                                        this.replaceIds(t.data, e, ["id"]),
                                        this.replaceStyleIds(t.data, e, ["styleIds"]),
                                        Cu([
                                            t,
                                            "access",
                                            (e) => e.data,
                                            "access",
                                            (e) => e.styles,
                                            "optionalAccess",
                                            (e) => e.forEach,
                                            "call",
                                            (t) =>
                                                t((t) => {
                                                    this.replaceStyleIds(t, e, ["styleId"]);
                                                }),
                                        ]),
                                        t
                                    );
                            }
                    }
                    return !1;
                }
                replace(e, t, n, r) {
                    for (const o of r) (Array.isArray(t[o]) || "number" == typeof t[o]) && (Array.isArray(t[o]) ? (t[o] = e.getIds(n, t[o])) : (t[o] = e.getId(n, t[o])));
                    return t;
                }
                replaceIds(e, t, n) {
                    return this.replace(this.crossOriginIframeMirror, e, t, n);
                }
                replaceStyleIds(e, t, n) {
                    return this.replace(this.crossOriginIframeStyleMirror, e, t, n);
                }
                replaceIdOnNode(e, t) {
                    this.replaceIds(e, t, ["id", "rootId"]),
                        "childNodes" in e &&
                            e.childNodes.forEach((e) => {
                                this.replaceIdOnNode(e, t);
                            });
                }
                patchRootIdOnNode(e, t) {
                    e.type === Pa.Document || e.rootId || (e.rootId = t),
                        "childNodes" in e &&
                            e.childNodes.forEach((e) => {
                                this.patchRootIdOnNode(e, t);
                            });
                }
            }
            class Ru {
                init() {}
                addShadowRoot() {}
                observeAttachShadow() {}
                reset() {}
            }
            class Ou {
                constructor(e) {
                    (this.shadowDoms = new WeakSet()), (this.restoreHandlers = []), (this.mutationCb = e.mutationCb), (this.scrollCb = e.scrollCb), (this.bypassOptions = e.bypassOptions), (this.mirror = e.mirror), this.init();
                }
                init() {
                    this.reset(), this.patchAttachShadow(Element, document);
                }
                addShadowRoot(e, t) {
                    if (!La(e)) return;
                    if (this.shadowDoms.has(e)) return;
                    this.shadowDoms.add(e), this.bypassOptions.canvasManager.addShadowRoot(e);
                    const n = mu({ ...this.bypassOptions, doc: t, mutationCb: this.mutationCb, mirror: this.mirror, shadowDomManager: this }, e);
                    this.restoreHandlers.push(() => n.disconnect()),
                        this.restoreHandlers.push(vu({ ...this.bypassOptions, scrollCb: this.scrollCb, doc: e, mirror: this.mirror })),
                        Yc(() => {
                            e.adoptedStyleSheets && e.adoptedStyleSheets.length > 0 && this.bypassOptions.stylesheetManager.adoptStyleSheets(e.adoptedStyleSheets, this.mirror.getId(e.host)),
                                this.restoreHandlers.push(ku({ mirror: this.mirror, stylesheetManager: this.bypassOptions.stylesheetManager }, e));
                        }, 0);
                }
                observeAttachShadow(e) {
                    e.contentWindow && e.contentDocument && this.patchAttachShadow(e.contentWindow.Element, e.contentDocument);
                }
                patchAttachShadow(e, t) {
                    const n = this;
                    this.restoreHandlers.push(
                        Cc(e.prototype, "attachShadow", function (e) {
                            return function (r) {
                                const o = e.call(this, r);
                                return this.shadowRoot && Hc(this) && n.addShadowRoot(this.shadowRoot, t), o;
                            };
                        })
                    );
                }
                reset() {
                    this.restoreHandlers.forEach((e) => {
                        try {
                            e();
                        } catch (e) {}
                    }),
                        (this.restoreHandlers = []),
                        (this.shadowDoms = new WeakSet()),
                        this.bypassOptions.canvasManager.resetShadowRoots();
                }
            }
            class Nu {
                reset() {}
                freeze() {}
                unfreeze() {}
                lock() {}
                unlock() {}
                snapshot() {}
                addWindow() {}
                addShadowRoot() {}
                resetShadowRoots() {}
            }
            class Pu {
                constructor(e) {
                    (this.trackedLinkElements = new WeakSet()), (this.styleMirror = new Bc()), (this.mutationCb = e.mutationCb), (this.adoptedStyleSheetCb = e.adoptedStyleSheetCb);
                }
                attachLinkElement(e, t) {
                    "_cssText" in t.attributes && this.mutationCb({ adds: [], removes: [], texts: [], attributes: [{ id: t.id, attributes: t.attributes }] }), this.trackLinkElement(e);
                }
                trackLinkElement(e) {
                    this.trackedLinkElements.has(e) || (this.trackedLinkElements.add(e), this.trackStylesheetInLinkElement(e));
                }
                adoptStyleSheets(e, t) {
                    if (0 === e.length) return;
                    const n = { id: t, styleIds: [] },
                        r = [];
                    for (const t of e) {
                        let e;
                        this.styleMirror.has(t) ? (e = this.styleMirror.getId(t)) : ((e = this.styleMirror.add(t)), r.push({ styleId: e, rules: Array.from(t.rules || CSSRule, (e, t) => ({ rule: ja(e), index: t })) })), n.styleIds.push(e);
                    }
                    r.length > 0 && (n.styles = r), this.adoptedStyleSheetCb(n);
                }
                reset() {
                    this.styleMirror.reset(), (this.trackedLinkElements = new WeakSet());
                }
                trackStylesheetInLinkElement(e) {}
            }
            class Du {
                constructor() {
                    (this.nodeMap = new WeakMap()), (this.loop = !0), this.periodicallyClear();
                }
                periodicallyClear() {
                    !(function (...e) {
                        Vc("requestAnimationFrame")(...e);
                    })(() => {
                        this.clear(), this.loop && this.periodicallyClear();
                    });
                }
                inOtherBuffer(e, t) {
                    const n = this.nodeMap.get(e);
                    return n && Array.from(n).some((e) => e !== t);
                }
                add(e, t) {
                    this.nodeMap.set(e, (this.nodeMap.get(e) || new Set()).add(t));
                }
                clear() {
                    this.nodeMap = new WeakMap();
                }
                destroy() {
                    this.loop = !1;
                }
            }
            let Lu, Fu;
            try {
                if (2 !== Array.from([1], (e) => 2 * e)[0]) {
                    const e = document.createElement("iframe");
                    document.body.appendChild(e), (Array.from = bs([e, "access", (e) => e.contentWindow, "optionalAccess", (e) => e.Array, "access", (e) => e.from]) || Array.from), document.body.removeChild(e);
                }
            } catch (e) {
                console.debug("Unable to override Array.from", e);
            }
            const ju = new $a();
            function $u(e = {}) {
                const {
                    emit: t,
                    checkoutEveryNms: n,
                    checkoutEveryNth: r,
                    blockClass: o = "rr-block",
                    blockSelector: i = null,
                    unblockSelector: s = null,
                    ignoreClass: a = "rr-ignore",
                    ignoreSelector: c = null,
                    maskAllText: u = !1,
                    maskTextClass: l = "rr-mask",
                    unmaskTextClass: d = null,
                    maskTextSelector: p = null,
                    unmaskTextSelector: f = null,
                    inlineStylesheet: h = !0,
                    maskAllInputs: m,
                    maskInputOptions: g,
                    slimDOMOptions: v,
                    maskAttributeFn: y,
                    maskInputFn: _,
                    maskTextFn: b,
                    maxCanvasSize: w = null,
                    packFn: S,
                    sampling: k = {},
                    dataURLOptions: x = {},
                    mousemoveWait: E,
                    recordDOM: I = !0,
                    recordCanvas: T = !1,
                    recordCrossOriginIframes: C = !1,
                    recordAfter: A = "DOMContentLoaded" === e.recordAfter ? e.recordAfter : "load",
                    userTriggeredOnInput: M = !1,
                    collectFonts: R = !1,
                    inlineImages: O = !1,
                    plugins: N,
                    keepIframeSrcFn: P = () => !1,
                    ignoreCSSAttributes: D = new Set([]),
                    errorHandler: L,
                    onMutation: F,
                    getCanvasManager: j,
                } = e;
                uu(L);
                const $ = !C || window.parent === window;
                let U = !1;
                if (!$)
                    try {
                        window.parent.document && (U = !1);
                    } catch (e) {
                        U = !0;
                    }
                if ($ && !t) throw new Error("emit function is required");
                void 0 !== E && void 0 === k.mousemove && (k.mousemove = E), ju.reset();
                const B =
                        !0 === m
                            ? { color: !0, date: !0, "datetime-local": !0, email: !0, month: !0, number: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0, textarea: !0, select: !0, radio: !0, checkbox: !0 }
                            : void 0 !== g
                            ? g
                            : {},
                    q =
                        !0 === v || "all" === v
                            ? {
                                  script: !0,
                                  comment: !0,
                                  headFavicon: !0,
                                  headWhitespace: !0,
                                  headMetaSocial: !0,
                                  headMetaRobots: !0,
                                  headMetaHttpEquiv: !0,
                                  headMetaVerification: !0,
                                  headMetaAuthorship: "all" === v,
                                  headMetaDescKeywords: "all" === v,
                              }
                            : v || {};
                let z;
                !(function (e = window) {
                    "NodeList" in e && !e.NodeList.prototype.forEach && (e.NodeList.prototype.forEach = Array.prototype.forEach),
                        "DOMTokenList" in e && !e.DOMTokenList.prototype.forEach && (e.DOMTokenList.prototype.forEach = Array.prototype.forEach),
                        Node.prototype.contains ||
                            (Node.prototype.contains = (...e) => {
                                let t = e[0];
                                if (!(0 in e)) throw new TypeError("1 argument is required");
                                do {
                                    if (this === t) return !0;
                                } while ((t = t && t.parentNode));
                                return !1;
                            });
                })();
                let H = 0;
                const W = (e) => {
                    for (const t of N || []) t.eventProcessor && (e = t.eventProcessor(e));
                    return S && !U && (e = S(e)), e;
                };
                Lu = (e, o) => {
                    const i = e;
                    if (
                        ((i.timestamp = Ac()),
                        !bs([fu, "access", (e) => e[0], "optionalAccess", (e) => e.isFrozen, "call", (e) => e()]) ||
                            i.type === Gc.FullSnapshot ||
                            (i.type === Gc.IncrementalSnapshot && i.data.source === Kc.Mutation) ||
                            fu.forEach((e) => e.unfreeze()),
                        $)
                    )
                        bs([t, "optionalCall", (e) => e(W(i), o)]);
                    else if (U) {
                        const e = { type: "rrweb", event: W(i), origin: window.location.origin, isCheckout: o };
                        window.parent.postMessage(e, "*");
                    }
                    if (i.type === Gc.FullSnapshot) (z = i), (H = 0);
                    else if (i.type === Gc.IncrementalSnapshot) {
                        if (i.data.source === Kc.Mutation && i.data.isAttachIframe) return;
                        H++;
                        const e = r && H >= r,
                            t = n && z && i.timestamp - z.timestamp > n;
                        (e || t) && ee(!0);
                    }
                };
                const V = (e) => {
                        Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.Mutation, ...e } });
                    },
                    Y = (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.Scroll, ...e } }),
                    G = (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.CanvasMutation, ...e } }),
                    K = new Pu({ mutationCb: V, adoptedStyleSheetCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.AdoptedStyleSheet, ...e } }) }),
                    J = "boolean" == typeof __RRWEB_EXCLUDE_IFRAME__ && __RRWEB_EXCLUDE_IFRAME__ ? new Au() : new Mu({ mirror: ju, mutationCb: V, stylesheetManager: K, recordCrossOriginIframes: C, wrappedEmit: Lu });
                for (const e of N || []) e.getMirror && e.getMirror({ nodeMirror: ju, crossOriginIframeMirror: J.crossOriginIframeMirror, crossOriginIframeStyleMirror: J.crossOriginIframeStyleMirror });
                const X = new Du(),
                    Q = (function (e, t) {
                        try {
                            return e ? e(t) : new Nu();
                        } catch (e) {
                            return console.warn("Unable to initialize CanvasManager"), new Nu();
                        }
                    })(j, {
                        mirror: ju,
                        win: window,
                        mutationCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.CanvasMutation, ...e } }),
                        recordCanvas: T,
                        blockClass: o,
                        blockSelector: i,
                        unblockSelector: s,
                        maxCanvasSize: w,
                        sampling: k.canvas,
                        dataURLOptions: x,
                        errorHandler: L,
                    }),
                    Z =
                        "boolean" == typeof __RRWEB_EXCLUDE_SHADOW_DOM__ && __RRWEB_EXCLUDE_SHADOW_DOM__
                            ? new Ru()
                            : new Ou({
                                  mutationCb: V,
                                  scrollCb: Y,
                                  bypassOptions: {
                                      onMutation: F,
                                      blockClass: o,
                                      blockSelector: i,
                                      unblockSelector: s,
                                      maskAllText: u,
                                      maskTextClass: l,
                                      unmaskTextClass: d,
                                      maskTextSelector: p,
                                      unmaskTextSelector: f,
                                      inlineStylesheet: h,
                                      maskInputOptions: B,
                                      dataURLOptions: x,
                                      maskAttributeFn: y,
                                      maskTextFn: b,
                                      maskInputFn: _,
                                      recordCanvas: T,
                                      inlineImages: O,
                                      sampling: k,
                                      slimDOMOptions: q,
                                      iframeManager: J,
                                      stylesheetManager: K,
                                      canvasManager: Q,
                                      keepIframeSrcFn: P,
                                      processedNodeManager: X,
                                  },
                                  mirror: ju,
                              }),
                    ee = (e = !1) => {
                        if (!I) return;
                        Lu({ type: Gc.Meta, data: { href: window.location.href, width: Oc(), height: Rc() } }, e), K.reset(), Z.init(), fu.forEach((e) => e.lock());
                        const t = (function (e, t) {
                            const {
                                mirror: n = new $a(),
                                blockClass: r = "rr-block",
                                blockSelector: o = null,
                                unblockSelector: i = null,
                                maskAllText: s = !1,
                                maskTextClass: a = "rr-mask",
                                unmaskTextClass: c = null,
                                maskTextSelector: u = null,
                                unmaskTextSelector: l = null,
                                inlineStylesheet: d = !0,
                                inlineImages: p = !1,
                                recordCanvas: f = !1,
                                maskAllInputs: h = !1,
                                maskAttributeFn: m,
                                maskTextFn: g,
                                maskInputFn: v,
                                slimDOM: y = !1,
                                dataURLOptions: _,
                                preserveWhiteSpace: b,
                                onSerialize: w,
                                onIframeLoad: S,
                                iframeLoadTimeout: k,
                                onStylesheetLoad: x,
                                stylesheetLoadTimeout: E,
                                keepIframeSrcFn: I = () => !1,
                            } = t || {};
                            return wc(e, {
                                doc: e,
                                mirror: n,
                                blockClass: r,
                                blockSelector: o,
                                unblockSelector: i,
                                maskAllText: s,
                                maskTextClass: a,
                                unmaskTextClass: c,
                                maskTextSelector: u,
                                unmaskTextSelector: l,
                                skipChild: !1,
                                inlineStylesheet: d,
                                maskInputOptions:
                                    !0 === h
                                        ? { color: !0, date: !0, "datetime-local": !0, email: !0, month: !0, number: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0, textarea: !0, select: !0 }
                                        : !1 === h
                                        ? {}
                                        : h,
                                maskAttributeFn: m,
                                maskTextFn: g,
                                maskInputFn: v,
                                slimDOMOptions:
                                    !0 === y || "all" === y
                                        ? {
                                              script: !0,
                                              comment: !0,
                                              headFavicon: !0,
                                              headWhitespace: !0,
                                              headMetaDescKeywords: "all" === y,
                                              headMetaSocial: !0,
                                              headMetaRobots: !0,
                                              headMetaHttpEquiv: !0,
                                              headMetaAuthorship: !0,
                                              headMetaVerification: !0,
                                          }
                                        : !1 === y
                                        ? {}
                                        : y,
                                dataURLOptions: _,
                                inlineImages: p,
                                recordCanvas: f,
                                preserveWhiteSpace: b,
                                onSerialize: w,
                                onIframeLoad: S,
                                iframeLoadTimeout: k,
                                onStylesheetLoad: x,
                                stylesheetLoadTimeout: E,
                                keepIframeSrcFn: I,
                                newlyAddedElement: !1,
                            });
                        })(document, {
                            mirror: ju,
                            blockClass: o,
                            blockSelector: i,
                            unblockSelector: s,
                            maskAllText: u,
                            maskTextClass: l,
                            unmaskTextClass: d,
                            maskTextSelector: p,
                            unmaskTextSelector: f,
                            inlineStylesheet: h,
                            maskAllInputs: B,
                            maskAttributeFn: y,
                            maskInputFn: _,
                            maskTextFn: b,
                            slimDOM: q,
                            dataURLOptions: x,
                            recordCanvas: T,
                            inlineImages: O,
                            onSerialize: (e) => {
                                jc(e, ju) && J.addIframe(e), $c(e, ju) && K.trackLinkElement(e), Uc(e) && Z.addShadowRoot(e.shadowRoot, document);
                            },
                            onIframeLoad: (e, t) => {
                                J.attachIframe(e, t), e.contentWindow && Q.addWindow(e.contentWindow), Z.observeAttachShadow(e);
                            },
                            onStylesheetLoad: (e, t) => {
                                K.attachLinkElement(e, t);
                            },
                            keepIframeSrcFn: P,
                        });
                        if (!t) return console.warn("Failed to snapshot the document");
                        Lu({ type: Gc.FullSnapshot, data: { node: t, initialOffset: Mc(window) } }),
                            fu.forEach((e) => e.unlock()),
                            document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0 && K.adoptStyleSheets(document.adoptedStyleSheets, ju.getId(document));
                    };
                Fu = ee;
                try {
                    const e = [],
                        t = (e) =>
                            du(xu)(
                                {
                                    onMutation: F,
                                    mutationCb: V,
                                    mousemoveCb: (e, t) => Lu({ type: Gc.IncrementalSnapshot, data: { source: t, positions: e } }),
                                    mouseInteractionCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.MouseInteraction, ...e } }),
                                    scrollCb: Y,
                                    viewportResizeCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.ViewportResize, ...e } }),
                                    inputCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.Input, ...e } }),
                                    mediaInteractionCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.MediaInteraction, ...e } }),
                                    styleSheetRuleCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.StyleSheetRule, ...e } }),
                                    styleDeclarationCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.StyleDeclaration, ...e } }),
                                    canvasMutationCb: G,
                                    fontCb: (e) => Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.Font, ...e } }),
                                    selectionCb: (e) => {
                                        Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.Selection, ...e } });
                                    },
                                    customElementCb: (e) => {
                                        Lu({ type: Gc.IncrementalSnapshot, data: { source: Kc.CustomElement, ...e } });
                                    },
                                    blockClass: o,
                                    ignoreClass: a,
                                    ignoreSelector: c,
                                    maskAllText: u,
                                    maskTextClass: l,
                                    unmaskTextClass: d,
                                    maskTextSelector: p,
                                    unmaskTextSelector: f,
                                    maskInputOptions: B,
                                    inlineStylesheet: h,
                                    sampling: k,
                                    recordDOM: I,
                                    recordCanvas: T,
                                    inlineImages: O,
                                    userTriggeredOnInput: M,
                                    collectFonts: R,
                                    doc: e,
                                    maskAttributeFn: y,
                                    maskInputFn: _,
                                    maskTextFn: b,
                                    keepIframeSrcFn: P,
                                    blockSelector: i,
                                    unblockSelector: s,
                                    slimDOMOptions: q,
                                    dataURLOptions: x,
                                    mirror: ju,
                                    iframeManager: J,
                                    stylesheetManager: K,
                                    shadowDomManager: Z,
                                    processedNodeManager: X,
                                    canvasManager: Q,
                                    ignoreCSSAttributes: D,
                                    plugins:
                                        bs([
                                            N,
                                            "optionalAccess",
                                            (e) => e.filter,
                                            "call",
                                            (e) => e((e) => e.observer),
                                            "optionalAccess",
                                            (e) => e.map,
                                            "call",
                                            (e) => e((e) => ({ observer: e.observer, options: e.options, callback: (t) => Lu({ type: Gc.Plugin, data: { plugin: e.name, payload: t } }) })),
                                        ]) || [],
                                },
                                {}
                            );
                    J.addLoadListener((n) => {
                        try {
                            e.push(t(n.contentDocument));
                        } catch (e) {
                            console.warn(e);
                        }
                    });
                    const n = () => {
                        ee(), e.push(t(document));
                    };
                    return (
                        "interactive" === document.readyState || "complete" === document.readyState
                            ? n()
                            : (e.push(
                                  kc("DOMContentLoaded", () => {
                                      Lu({ type: Gc.DomContentLoaded, data: {} }), "DOMContentLoaded" === A && n();
                                  })
                              ),
                              e.push(
                                  kc(
                                      "load",
                                      () => {
                                          Lu({ type: Gc.Load, data: {} }), "load" === A && n();
                                      },
                                      window
                                  )
                              )),
                        () => {
                            e.forEach((e) => e()), X.destroy(), (Fu = void 0), lu();
                        }
                    );
                } catch (e) {
                    console.warn(e);
                }
            }
            ($u.mirror = ju),
                ($u.takeFullSnapshot = function (e) {
                    if (!Fu) throw new Error("please take full snapshot after start recording");
                    Fu(e);
                });
            const Uu = 3;
            function Bu(e) {
                return e > 9999999999 ? e : 1e3 * e;
            }
            function qu(e) {
                return e > 9999999999 ? e / 1e3 : e;
            }
            function zu(e, t) {
                "sentry.transaction" !== t.category &&
                    (["ui.click", "ui.input"].includes(t.category) ? e.triggerUserActivity() : e.checkAndHandleExpiredSession(),
                    e.addUpdate(() => (e.throttledAddEvent({ type: Gc.Custom, timestamp: 1e3 * (t.timestamp || 0), data: { tag: "breadcrumb", payload: He(t, 10, 1e3) } }), "console" === t.category)));
            }
            const Hu = "button,a";
            function Wu(e) {
                return e.closest(Hu) || e;
            }
            function Vu(e) {
                const t = Yu(e);
                return t && t instanceof Element ? Wu(t) : t;
            }
            function Yu(e) {
                return (function (e) {
                    return "object" == typeof e && !!e && "target" in e;
                })(e)
                    ? e.target
                    : e;
            }
            let Gu;
            function Ku(e) {
                return (
                    Gu ||
                        ((Gu = []),
                        q(xa, "open", function (e) {
                            return function (...t) {
                                if (Gu)
                                    try {
                                        Gu.forEach((e) => e());
                                    } catch (e) {}
                                return e.apply(xa, t);
                            };
                        })),
                    Gu.push(e),
                    () => {
                        const t = Gu ? Gu.indexOf(e) : -1;
                        t > -1 && Gu.splice(t, 1);
                    }
                );
            }
            class Ju {
                constructor(e, t, n = zu) {
                    (this._lastMutation = 0),
                        (this._lastScroll = 0),
                        (this._clicks = []),
                        (this._timeout = t.timeout / 1e3),
                        (this._threshold = t.threshold / 1e3),
                        (this._scollTimeout = t.scrollTimeout / 1e3),
                        (this._replay = e),
                        (this._ignoreSelector = t.ignoreSelector),
                        (this._addBreadcrumbEvent = n);
                }
                addListeners() {
                    const e = Ku(() => {
                        this._lastMutation = Qu();
                    });
                    this._teardown = () => {
                        e(), (this._clicks = []), (this._lastMutation = 0), (this._lastScroll = 0);
                    };
                }
                removeListeners() {
                    this._teardown && this._teardown(), this._checkClickTimeout && clearTimeout(this._checkClickTimeout);
                }
                handleClick(e, t) {
                    if (
                        (function (e, t) {
                            if (!Xu.includes(e.tagName)) return !0;
                            if ("INPUT" === e.tagName && !["submit", "button"].includes(e.getAttribute("type") || "")) return !0;
                            if ("A" === e.tagName && (e.hasAttribute("download") || (e.hasAttribute("target") && "_self" !== e.getAttribute("target")))) return !0;
                            if (t && e.matches(t)) return !0;
                            return !1;
                        })(t, this._ignoreSelector) ||
                        !(function (e) {
                            return !(!e.data || "number" != typeof e.data.nodeId || !e.timestamp);
                        })(e)
                    )
                        return;
                    const n = { timestamp: qu(e.timestamp), clickBreadcrumb: e, clickCount: 0, node: t };
                    this._clicks.some((e) => e.node === n.node && Math.abs(e.timestamp - n.timestamp) < 1) || (this._clicks.push(n), 1 === this._clicks.length && this._scheduleCheckClicks());
                }
                registerMutation(e = Date.now()) {
                    this._lastMutation = qu(e);
                }
                registerScroll(e = Date.now()) {
                    this._lastScroll = qu(e);
                }
                registerClick(e) {
                    const t = Wu(e);
                    this._handleMultiClick(t);
                }
                _handleMultiClick(e) {
                    this._getClicks(e).forEach((e) => {
                        e.clickCount++;
                    });
                }
                _getClicks(e) {
                    return this._clicks.filter((t) => t.node === e);
                }
                _checkClicks() {
                    const e = [],
                        t = Qu();
                    this._clicks.forEach((n) => {
                        !n.mutationAfter && this._lastMutation && (n.mutationAfter = n.timestamp <= this._lastMutation ? this._lastMutation - n.timestamp : void 0),
                            !n.scrollAfter && this._lastScroll && (n.scrollAfter = n.timestamp <= this._lastScroll ? this._lastScroll - n.timestamp : void 0),
                            n.timestamp + this._timeout <= t && e.push(n);
                    });
                    for (const t of e) {
                        const e = this._clicks.indexOf(t);
                        e > -1 && (this._generateBreadcrumbs(t), this._clicks.splice(e, 1));
                    }
                    this._clicks.length && this._scheduleCheckClicks();
                }
                _generateBreadcrumbs(e) {
                    const t = this._replay,
                        n = e.scrollAfter && e.scrollAfter <= this._scollTimeout,
                        r = e.mutationAfter && e.mutationAfter <= this._threshold,
                        o = !n && !r,
                        { clickCount: i, clickBreadcrumb: s } = e;
                    if (o) {
                        const n = 1e3 * Math.min(e.mutationAfter || this._timeout, this._timeout),
                            r = n < 1e3 * this._timeout ? "mutation" : "timeout",
                            o = {
                                type: "default",
                                message: s.message,
                                timestamp: s.timestamp,
                                category: "ui.slowClickDetected",
                                data: { ...s.data, url: xa.location.href, route: t.getCurrentRoute(), timeAfterClickMs: n, endReason: r, clickCount: i || 1 },
                            };
                        this._addBreadcrumbEvent(t, o);
                    } else if (i > 1) {
                        const e = { type: "default", message: s.message, timestamp: s.timestamp, category: "ui.multiClick", data: { ...s.data, url: xa.location.href, route: t.getCurrentRoute(), clickCount: i, metric: !0 } };
                        this._addBreadcrumbEvent(t, e);
                    }
                }
                _scheduleCheckClicks() {
                    this._checkClickTimeout && clearTimeout(this._checkClickTimeout), (this._checkClickTimeout = Jo(() => this._checkClicks(), 1e3));
                }
            }
            const Xu = ["A", "BUTTON", "INPUT"];
            function Qu() {
                return Date.now() / 1e3;
            }
            function Zu(e, t) {
                try {
                    if (
                        !(function (e) {
                            return e.type === Uu;
                        })(t)
                    )
                        return;
                    const { source: n } = t.data;
                    if (
                        (n === Kc.Mutation && e.registerMutation(t.timestamp),
                        n === Kc.Scroll && e.registerScroll(t.timestamp),
                        (function (e) {
                            return e.data.source === Kc.MouseInteraction;
                        })(t))
                    ) {
                        const { type: n, id: r } = t.data,
                            o = $u.mirror.getNode(r);
                        o instanceof HTMLElement && n === Jc.Click && e.registerClick(o);
                    }
                } catch (e) {}
            }
            function el(e) {
                return { timestamp: Date.now() / 1e3, type: "default", ...e };
            }
            var tl;
            !(function (e) {
                (e[(e.Document = 0)] = "Document"), (e[(e.DocumentType = 1)] = "DocumentType"), (e[(e.Element = 2)] = "Element"), (e[(e.Text = 3)] = "Text"), (e[(e.CDATA = 4)] = "CDATA"), (e[(e.Comment = 5)] = "Comment");
            })(tl || (tl = {}));
            const nl = new Set(["id", "class", "aria-label", "role", "name", "alt", "title", "data-test-id", "data-testid", "disabled", "aria-disabled", "data-sentry-component"]);
            function rl(e) {
                const t = {};
                !e["data-sentry-component"] && e["data-sentry-element"] && (e["data-sentry-component"] = e["data-sentry-element"]);
                for (const n in e)
                    if (nl.has(n)) {
                        let r = n;
                        ("data-testid" !== n && "data-test-id" !== n) || (r = "testId"), (t[r] = e[n]);
                    }
                return t;
            }
            const ol = (e) => (t) => {
                if (!e.isEnabled()) return;
                const n = (function (e) {
                    const { target: t, message: n } = (function (e) {
                        const t = "click" === e.name;
                        let n,
                            r = null;
                        try {
                            (r = t ? Vu(e.event) : Yu(e.event)), (n = C(r, { maxStringLength: 200 }) || "<unknown>");
                        } catch (e) {
                            n = "<unknown>";
                        }
                        return { target: r, message: n };
                    })(e);
                    return el({ category: `ui.${e.name}`, ...il(t, n) });
                })(t);
                if (!n) return;
                const r = "click" === t.name,
                    o = r ? t.event : void 0;
                var i, s, a;
                !(r && e.clickDetector && o && o.target) || o.altKey || o.metaKey || o.ctrlKey || o.shiftKey || ((i = e.clickDetector), (s = n), (a = Vu(t.event)), i.handleClick(s, a)), zu(e, n);
            };
            function il(e, t) {
                const n = $u.mirror.getId(e),
                    r = n && $u.mirror.getNode(n),
                    o = r && $u.mirror.getMeta(r),
                    i =
                        o &&
                        (function (e) {
                            return e.type === tl.Element;
                        })(o)
                            ? o
                            : null;
                return {
                    message: t,
                    data: i
                        ? {
                              nodeId: n,
                              node: {
                                  id: n,
                                  tagName: i.tagName,
                                  textContent: Array.from(i.childNodes)
                                      .map((e) => e.type === tl.Text && e.textContent)
                                      .filter(Boolean)
                                      .map((e) => e.trim())
                                      .join(""),
                                  attributes: rl(i.attributes),
                              },
                          }
                        : {},
                };
            }
            function sl(e, t) {
                if (!e.isEnabled()) return;
                e.updateUserActivity();
                const n = (function (e) {
                    const { metaKey: t, shiftKey: n, ctrlKey: r, altKey: o, key: i, target: s } = e;
                    if (
                        !s ||
                        (function (e) {
                            return "INPUT" === e.tagName || "TEXTAREA" === e.tagName || e.isContentEditable;
                        })(s) ||
                        !i
                    )
                        return null;
                    const a = t || r || o,
                        c = 1 === i.length;
                    if (!a && c) return null;
                    const u = C(s, { maxStringLength: 200 }) || "<unknown>",
                        l = il(s, u);
                    return el({ category: "ui.keyDown", message: u, data: { ...l.data, metaKey: t, shiftKey: n, ctrlKey: r, altKey: o, key: i } });
                })(t);
                n && zu(e, n);
            }
            const al = {
                resource: function (e) {
                    const { entryType: t, initiatorType: n, name: r, responseEnd: o, startTime: i, decodedBodySize: s, encodedBodySize: a, responseStatus: c, transferSize: u } = e;
                    if (["fetch", "xmlhttprequest"].includes(n)) return null;
                    return { type: `${t}.${n}`, start: ll(i), end: ll(o), name: r, data: { size: u, statusCode: c, decodedBodySize: s, encodedBodySize: a } };
                },
                paint: function (e) {
                    const { duration: t, entryType: n, name: r, startTime: o } = e,
                        i = ll(o);
                    return { type: n, name: r, start: i, end: i + t, data: void 0 };
                },
                navigation: function (e) {
                    const {
                        entryType: t,
                        name: n,
                        decodedBodySize: r,
                        duration: o,
                        domComplete: i,
                        encodedBodySize: s,
                        domContentLoadedEventStart: a,
                        domContentLoadedEventEnd: c,
                        domInteractive: u,
                        loadEventStart: l,
                        loadEventEnd: d,
                        redirectCount: p,
                        startTime: f,
                        transferSize: h,
                        type: m,
                    } = e;
                    if (0 === o) return null;
                    return {
                        type: `${t}.${m}`,
                        start: ll(f),
                        end: ll(i),
                        name: n,
                        data: {
                            size: h,
                            decodedBodySize: r,
                            encodedBodySize: s,
                            duration: o,
                            domInteractive: u,
                            domContentLoadedEventStart: a,
                            domContentLoadedEventEnd: c,
                            loadEventStart: l,
                            loadEventEnd: d,
                            domComplete: i,
                            redirectCount: p,
                        },
                    };
                },
            };
            function cl(e, t) {
                return ({ metric: n }) => {
                    t.replayPerformanceEntries.push(e(n));
                };
            }
            function ul(e) {
                const t = al[e.entryType];
                return t ? t(e) : null;
            }
            function ll(e) {
                return ((ue || xa.performance.timeOrigin) + e) / 1e3;
            }
            function dl(e) {
                const t = e.entries[e.entries.length - 1];
                return ml(e, "largest-contentful-paint", t ? t.element : void 0);
            }
            function pl(e) {
                const t = e.entries[0];
                return ml(e, "cumulative-layout-shift", t && t.sources && t.sources[0] ? t.sources[0].node : void 0);
            }
            function fl(e) {
                const t = e.entries[e.entries.length - 1];
                return ml(e, "first-input-delay", t ? t.target : void 0);
            }
            function hl(e) {
                const t = e.entries[e.entries.length - 1];
                return ml(e, "interaction-to-next-paint", t ? t.target : void 0);
            }
            function ml(e, t, n) {
                const r = e.value,
                    o = e.rating,
                    i = ll(r);
                return { type: "web-vital", name: t, start: i, end: i, data: { value: r, size: r, rating: o, nodeId: n ? $u.mirror.getId(n) : void 0 } };
            }
            const gl = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__,
                vl =
                    'var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if("function"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),J="undefined"!=typeof TextEncoder&&new TextEncoder,K="undefined"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(J)return J.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),a=i.length;return q(i,n),j(i,a-8,r.d()),j(i,a-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const n=this._hasEvents?",":"";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push("]",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push("[")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener("message",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&"function"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});';
            function yl(e, t) {
                gl && (L.info(e), t && bl(e));
            }
            function _l(e, t) {
                gl &&
                    (L.info(e),
                    t &&
                        Jo(() => {
                            bl(e);
                        }, 0));
            }
            function bl(e) {
                Oe({ category: "console", data: { logger: "replay" }, level: "info", message: e }, { level: "info" });
            }
            class wl extends Error {
                constructor() {
                    super("Event buffer exceeded maximum size of 20000000.");
                }
            }
            class Sl {
                constructor() {
                    (this.events = []), (this._totalSize = 0), (this.hasCheckout = !1);
                }
                get hasEvents() {
                    return this.events.length > 0;
                }
                get type() {
                    return "sync";
                }
                destroy() {
                    this.events = [];
                }
                async addEvent(e) {
                    const t = JSON.stringify(e).length;
                    if (((this._totalSize += t), this._totalSize > Ma)) throw new wl();
                    this.events.push(e);
                }
                finish() {
                    return new Promise((e) => {
                        const t = this.events;
                        this.clear(), e(JSON.stringify(t));
                    });
                }
                clear() {
                    (this.events = []), (this._totalSize = 0), (this.hasCheckout = !1);
                }
                getEarliestTimestamp() {
                    const e = this.events.map((e) => e.timestamp).sort()[0];
                    return e ? Bu(e) : null;
                }
            }
            class kl {
                constructor(e) {
                    (this._worker = e), (this._id = 0);
                }
                ensureReady() {
                    return (
                        this._ensureReadyPromise ||
                            (this._ensureReadyPromise = new Promise((e, t) => {
                                this._worker.addEventListener(
                                    "message",
                                    ({ data: n }) => {
                                        n.success ? e() : t();
                                    },
                                    { once: !0 }
                                ),
                                    this._worker.addEventListener(
                                        "error",
                                        (e) => {
                                            t(e);
                                        },
                                        { once: !0 }
                                    );
                            })),
                        this._ensureReadyPromise
                    );
                }
                destroy() {
                    yl("[Replay] Destroying compression worker"), this._worker.terminate();
                }
                postMessage(e, t) {
                    const n = this._getAndIncrementId();
                    return new Promise((r, o) => {
                        const i = ({ data: t }) => {
                            const s = t;
                            if (s.method === e && s.id === n) {
                                if ((this._worker.removeEventListener("message", i), !s.success)) return gl && L.error("[Replay]", s.response), void o(new Error("Error in compression worker"));
                                r(s.response);
                            }
                        };
                        this._worker.addEventListener("message", i), this._worker.postMessage({ id: n, method: e, arg: t });
                    });
                }
                _getAndIncrementId() {
                    return this._id++;
                }
            }
            class xl {
                constructor(e) {
                    (this._worker = new kl(e)), (this._earliestTimestamp = null), (this._totalSize = 0), (this.hasCheckout = !1);
                }
                get hasEvents() {
                    return !!this._earliestTimestamp;
                }
                get type() {
                    return "worker";
                }
                ensureReady() {
                    return this._worker.ensureReady();
                }
                destroy() {
                    this._worker.destroy();
                }
                addEvent(e) {
                    const t = Bu(e.timestamp);
                    (!this._earliestTimestamp || t < this._earliestTimestamp) && (this._earliestTimestamp = t);
                    const n = JSON.stringify(e);
                    return (this._totalSize += n.length), this._totalSize > Ma ? Promise.reject(new wl()) : this._sendEventToWorker(n);
                }
                finish() {
                    return this._finishRequest();
                }
                clear() {
                    (this._earliestTimestamp = null),
                        (this._totalSize = 0),
                        (this.hasCheckout = !1),
                        this._worker.postMessage("clear").then(null, (e) => {
                            gl && L.warn('[Replay] Sending "clear" message to worker failed', e);
                        });
                }
                getEarliestTimestamp() {
                    return this._earliestTimestamp;
                }
                _sendEventToWorker(e) {
                    return this._worker.postMessage("addEvent", e);
                }
                async _finishRequest() {
                    const e = await this._worker.postMessage("finish");
                    return (this._earliestTimestamp = null), (this._totalSize = 0), e;
                }
            }
            class El {
                constructor(e) {
                    (this._fallback = new Sl()), (this._compression = new xl(e)), (this._used = this._fallback), (this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded());
                }
                get type() {
                    return this._used.type;
                }
                get hasEvents() {
                    return this._used.hasEvents;
                }
                get hasCheckout() {
                    return this._used.hasCheckout;
                }
                set hasCheckout(e) {
                    this._used.hasCheckout = e;
                }
                destroy() {
                    this._fallback.destroy(), this._compression.destroy();
                }
                clear() {
                    return this._used.clear();
                }
                getEarliestTimestamp() {
                    return this._used.getEarliestTimestamp();
                }
                addEvent(e) {
                    return this._used.addEvent(e);
                }
                async finish() {
                    return await this.ensureWorkerIsLoaded(), this._used.finish();
                }
                ensureWorkerIsLoaded() {
                    return this._ensureWorkerIsLoadedPromise;
                }
                async _ensureWorkerIsLoaded() {
                    try {
                        await this._compression.ensureReady();
                    } catch (e) {
                        return void yl("[Replay] Failed to load the compression worker, falling back to simple buffer");
                    }
                    await this._switchToCompressionWorker();
                }
                async _switchToCompressionWorker() {
                    const { events: e, hasCheckout: t } = this._fallback,
                        n = [];
                    for (const t of e) n.push(this._compression.addEvent(t));
                    (this._compression.hasCheckout = t), (this._used = this._compression);
                    try {
                        await Promise.all(n);
                    } catch (e) {
                        gl && L.warn("[Replay] Failed to add events when switching buffers.", e);
                    }
                }
            }
            function Il({ useCompression: e, workerUrl: t }) {
                if (e && window.Worker) {
                    const e = (function (e) {
                        try {
                            const t =
                                e ||
                                (function () {
                                    if ("undefined" == typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ || !__SENTRY_EXCLUDE_REPLAY_WORKER__)
                                        return (function () {
                                            const e = new Blob([vl]);
                                            return URL.createObjectURL(e);
                                        })();
                                    return "";
                                })();
                            if (!t) return;
                            yl("[Replay] Using compression worker" + (e ? ` from ${e}` : ""));
                            const n = new Worker(t);
                            return new El(n);
                        } catch (e) {
                            yl("[Replay] Failed to create compression worker");
                        }
                    })(t);
                    if (e) return e;
                }
                return yl("[Replay] Using simple buffer"), new Sl();
            }
            function Tl() {
                try {
                    return "sessionStorage" in xa && !!xa.sessionStorage;
                } catch (e) {
                    return !1;
                }
            }
            function Cl(e) {
                !(function () {
                    if (!Tl()) return;
                    try {
                        xa.sessionStorage.removeItem(Ea);
                    } catch (e) {}
                })(),
                    (e.session = void 0);
            }
            function Al(e) {
                return void 0 !== e && Math.random() < e;
            }
            function Ml(e) {
                const t = Date.now();
                return { id: e.id || X(), started: e.started || t, lastActivity: e.lastActivity || t, segmentId: e.segmentId || 0, sampled: e.sampled, previousSessionId: e.previousSessionId };
            }
            function Rl(e) {
                if (Tl())
                    try {
                        xa.sessionStorage.setItem(Ea, JSON.stringify(e));
                    } catch (e) {}
            }
            function Ol({ sessionSampleRate: e, allowBuffering: t, stickySession: n = !1 }, { previousSessionId: r } = {}) {
                const o = (function (e, t) {
                        return Al(e) ? "session" : !!t && "buffer";
                    })(e, t),
                    i = Ml({ sampled: o, previousSessionId: r });
                return n && Rl(i), i;
            }
            function Nl(e, t, n = +new Date()) {
                return null === e || void 0 === t || t < 0 || (0 !== t && e + t <= n);
            }
            function Pl(e, { maxReplayDuration: t, sessionIdleExpire: n, targetTime: r = Date.now() }) {
                return Nl(e.started, t, r) || Nl(e.lastActivity, n, r);
            }
            function Dl(e, { sessionIdleExpire: t, maxReplayDuration: n }) {
                return !!Pl(e, { sessionIdleExpire: t, maxReplayDuration: n }) && ("buffer" !== e.sampled || 0 !== e.segmentId);
            }
            function Ll({ traceInternals: e, sessionIdleExpire: t, maxReplayDuration: n, previousSessionId: r }, o) {
                const i =
                    o.stickySession &&
                    (function (e) {
                        if (!Tl()) return null;
                        try {
                            const t = xa.sessionStorage.getItem(Ea);
                            if (!t) return null;
                            const n = JSON.parse(t);
                            return _l("[Replay] Loading existing session", e), Ml(n);
                        } catch (e) {
                            return null;
                        }
                    })(e);
                return i
                    ? Dl(i, { sessionIdleExpire: t, maxReplayDuration: n })
                        ? (_l("[Replay] Session in sessionStorage is expired, creating new one..."), Ol(o, { previousSessionId: i.id }))
                        : i
                    : (_l("[Replay] Creating new session", e), Ol(o, { previousSessionId: r }));
            }
            function Fl(e, t, n) {
                return !!$l(e, t) && (jl(e, t, n), !0);
            }
            async function jl(e, t, n) {
                if (!e.eventBuffer) return null;
                try {
                    n && "buffer" === e.recordingMode && e.eventBuffer.clear(), n && (e.eventBuffer.hasCheckout = !0);
                    const r = (function (e, t) {
                        try {
                            if (
                                "function" == typeof t &&
                                (function (e) {
                                    return e.type === Gc.Custom;
                                })(e)
                            )
                                return t(e);
                        } catch (e) {
                            return gl && L.error("[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...", e), null;
                        }
                        return e;
                    })(t, e.getOptions().beforeAddRecordingEvent);
                    if (!r) return;
                    return await e.eventBuffer.addEvent(r);
                } catch (t) {
                    const n = t && t instanceof wl ? "addEventSizeExceeded" : "addEvent";
                    gl && L.error(t), await e.stop({ reason: n });
                    const r = Me();
                    r && r.recordDroppedEvent("internal_sdk_error", "replay");
                }
            }
            function $l(e, t) {
                if (!e.eventBuffer || e.isPaused() || !e.isEnabled()) return !1;
                const n = Bu(t.timestamp);
                return (
                    !(n + e.timeouts.sessionIdlePause < Date.now()) &&
                    (!(n > e.getContext().initialTimestamp + e.getOptions().maxReplayDuration) || (_l(`[Replay] Skipping event with timestamp ${n} because it is after maxReplayDuration`, e.getOptions()._experiments.traceInternals), !1))
                );
            }
            function Ul(e) {
                return !e.type;
            }
            function Bl(e) {
                return "transaction" === e.type;
            }
            function ql(e) {
                return "feedback" === e.type;
            }
            function zl(e) {
                return (t, n) => {
                    if (!e.isEnabled() || (!Ul(t) && !Bl(t))) return;
                    const r = n && n.statusCode;
                    !r ||
                        r < 200 ||
                        r >= 300 ||
                        (Bl(t)
                            ? (function (e, t) {
                                  const n = e.getContext();
                                  t.contexts && t.contexts.trace && t.contexts.trace.trace_id && n.traceIds.size < 100 && n.traceIds.add(t.contexts.trace.trace_id);
                              })(e, t)
                            : (function (e, t) {
                                  const n = e.getContext();
                                  t.event_id && n.errorIds.size < 100 && n.errorIds.add(t.event_id);
                                  if ("buffer" !== e.recordingMode || !t.tags || !t.tags.replayId) return;
                                  const { beforeErrorSampling: r } = e.getOptions();
                                  if ("function" == typeof r && !r(t)) return;
                                  Jo(() => {
                                      e.sendBufferedReplayOrFlush();
                                  });
                              })(e, t));
                };
            }
            function Hl(e) {
                return (t) => {
                    e.isEnabled() &&
                        Ul(t) &&
                        (function (e, t) {
                            const n = t.exception && t.exception.values && t.exception.values[0] && t.exception.values[0].value;
                            if ("string" != typeof n) return;
                            if (n.match(/(reactjs\.org\/docs\/error-decoder\.html\?invariant=|react\.dev\/errors\/)(418|419|422|423|425)/) || n.match(/(does not match server-rendered HTML|Hydration failed because)/i)) {
                                zu(e, el({ category: "replay.hydrate-error", data: { url: M() } }));
                            }
                        })(e, t);
                };
            }
            function Wl(e) {
                const t = Me();
                t &&
                    t.on("beforeAddBreadcrumb", (t) =>
                        (function (e, t) {
                            if (!e.isEnabled() || !Vl(t)) return;
                            const n = (function (e) {
                                if (!Vl(e) || ["fetch", "xhr", "sentry.event", "sentry.transaction"].includes(e.category) || e.category.startsWith("ui.")) return null;
                                if ("console" === e.category)
                                    return (function (e) {
                                        const t = e.data && e.data.arguments;
                                        if (!Array.isArray(t) || 0 === t.length) return el(e);
                                        let n = !1;
                                        const r = t.map((e) => {
                                            if (!e) return e;
                                            if ("string" == typeof e) return e.length > Aa ? ((n = !0), `${e.slice(0, Aa)}\u2026`) : e;
                                            if ("object" == typeof e)
                                                try {
                                                    const t = He(e, 7);
                                                    return JSON.stringify(t).length > Aa ? ((n = !0), `${JSON.stringify(t, null, 2).slice(0, Aa)}\u2026`) : t;
                                                } catch (e) {}
                                            return e;
                                        });
                                        return el({ ...e, data: { ...e.data, arguments: r, ...(n ? { _meta: { warnings: ["CONSOLE_ARG_TRUNCATED"] } } : {}) } });
                                    })(e);
                                return el(e);
                            })(t);
                            n && zu(e, n);
                        })(e, t)
                    );
            }
            function Vl(e) {
                return !!e.category;
            }
            function Yl(e) {
                return Object.assign(
                    (t, n) => {
                        if (!e.isEnabled()) return t;
                        if (
                            (function (e) {
                                return "replay_event" === e.type;
                            })(t)
                        )
                            return delete t.breadcrumbs, t;
                        if (!Ul(t) && !Bl(t) && !ql(t)) return t;
                        if (!e.checkAndHandleExpiredSession()) return t;
                        if (ql(t))
                            return (
                                e.flush(),
                                (t.contexts.feedback.replay_id = e.getSessionId()),
                                (function (e, t) {
                                    e.triggerUserActivity(),
                                        e.addUpdate(
                                            () =>
                                                !t.timestamp ||
                                                (e.throttledAddEvent({
                                                    type: Gc.Custom,
                                                    timestamp: 1e3 * t.timestamp,
                                                    data: { tag: "breadcrumb", payload: { timestamp: t.timestamp, type: "default", category: "sentry.feedback", data: { feedbackId: t.event_id } } },
                                                }),
                                                !1)
                                        );
                                })(e, t),
                                t
                            );
                        if (
                            (function (e, t) {
                                return !(e.type || !e.exception || !e.exception.values || !e.exception.values.length || !t.originalException || !t.originalException.__rrweb__);
                            })(t, n) &&
                            !e.getOptions()._experiments.captureExceptions
                        )
                            return gl && L.log("[Replay] Ignoring error from rrweb internals", t), null;
                        const r = (function (e, t) {
                            return "buffer" === e.recordingMode && t.message !== Ta && !(!t.exception || t.type) && Al(e.getOptions().errorSampleRate);
                        })(e, t);
                        return (r || "session" === e.recordingMode) && (t.tags = { ...t.tags, replayId: e.getSessionId() }), t;
                    },
                    { id: "Replay" }
                );
            }
            function Gl(e, t) {
                return t.map(({ type: t, start: n, end: r, name: o, data: i }) => {
                    const s = e.throttledAddEvent({ type: Gc.Custom, timestamp: n, data: { tag: "performanceSpan", payload: { op: t, description: o, startTimestamp: n, endTimestamp: r, data: i } } });
                    return "string" == typeof s ? Promise.resolve(null) : s;
                });
            }
            function Kl(e) {
                return (t) => {
                    if (!e.isEnabled()) return;
                    const n = (function (e) {
                        const { from: t, to: n } = e,
                            r = Date.now() / 1e3;
                        return { type: "navigation.push", start: r, end: r, name: n, data: { previous: t } };
                    })(t);
                    null !== n && (e.getContext().urls.push(n.name), e.triggerUserActivity(), e.addUpdate(() => (Gl(e, [n]), !1)));
                };
            }
            function Jl(e, t) {
                e.isEnabled() &&
                    null !== t &&
                    ((function (e, t) {
                        return (!gl || !e.getOptions()._experiments.traceInternals) && us(t, Me());
                    })(e, t.name) ||
                        e.addUpdate(() => (Gl(e, [t]), !0)));
            }
            function Xl(e) {
                if (!e) return;
                const t = new TextEncoder();
                try {
                    if ("string" == typeof e) return t.encode(e).length;
                    if (e instanceof URLSearchParams) return t.encode(e.toString()).length;
                    if (e instanceof FormData) {
                        const n = id(e);
                        return t.encode(n).length;
                    }
                    if (e instanceof Blob) return e.size;
                    if (e instanceof ArrayBuffer) return e.byteLength;
                } catch (e) {}
            }
            function Ql(e) {
                if (!e) return;
                const t = parseInt(e, 10);
                return isNaN(t) ? void 0 : t;
            }
            function Zl(e) {
                try {
                    if ("string" == typeof e) return [e];
                    if (e instanceof URLSearchParams) return [e.toString()];
                    if (e instanceof FormData) return [id(e)];
                    if (!e) return [void 0];
                } catch (t) {
                    return gl && L.warn("[Replay] Failed to serialize body", e), [void 0, "BODY_PARSE_ERROR"];
                }
                return gl && L.info("[Replay] Skipping network body because of body type", e), [void 0, "UNPARSEABLE_BODY_TYPE"];
            }
            function ed(e, t) {
                if (!e) return { headers: {}, size: void 0, _meta: { warnings: [t] } };
                const n = { ...e._meta },
                    r = n.warnings || [];
                return (n.warnings = [...r, t]), (e._meta = n), e;
            }
            function td(e, t) {
                if (!t) return null;
                const { startTimestamp: n, endTimestamp: r, url: o, method: i, statusCode: s, request: a, response: c } = t;
                return { type: e, start: n / 1e3, end: r / 1e3, name: o, data: K({ method: i, statusCode: s, request: a, response: c }) };
            }
            function nd(e) {
                return { headers: {}, size: e, _meta: { warnings: ["URL_SKIPPED"] } };
            }
            function rd(e, t, n) {
                if (!t && 0 === Object.keys(e).length) return;
                if (!t) return { headers: e };
                if (!n) return { headers: e, size: t };
                const r = { headers: e, size: t },
                    { body: o, warnings: i } = (function (e) {
                        if (!e || "string" != typeof e) return { body: e };
                        const t = e.length > Ca,
                            n = (function (e) {
                                const t = e[0],
                                    n = e[e.length - 1];
                                return ("[" === t && "]" === n) || ("{" === t && "}" === n);
                            })(e);
                        if (t) {
                            const t = e.slice(0, Ca);
                            return n ? { body: t, warnings: ["MAYBE_JSON_TRUNCATED"] } : { body: `${t}\u2026`, warnings: ["TEXT_TRUNCATED"] };
                        }
                        if (n)
                            try {
                                return { body: JSON.parse(e) };
                            } catch (e) {}
                        return { body: e };
                    })(n);
                return (r.body = o), i && i.length > 0 && (r._meta = { warnings: i }), r;
            }
            function od(e, t) {
                return Object.entries(e).reduce((n, [r, o]) => {
                    const i = r.toLowerCase();
                    return t.includes(i) && e[r] && (n[i] = o), n;
                }, {});
            }
            function id(e) {
                return new URLSearchParams(e).toString();
            }
            function sd(e, t) {
                const n = (function (e, t = xa.document.baseURI) {
                    if (e.startsWith("http://") || e.startsWith("https://") || e.startsWith(xa.location.origin)) return e;
                    const n = new URL(e, t);
                    if (n.origin !== new URL(t).origin) return e;
                    const r = n.href;
                    if (!e.endsWith("/") && r.endsWith("/")) return r.slice(0, -1);
                    return r;
                })(e);
                return B(n, t);
            }
            async function ad(e, t, n) {
                try {
                    const r = await (async function (e, t, n) {
                            const r = Date.now(),
                                { startTimestamp: o = r, endTimestamp: i = r } = t,
                                { url: s, method: a, status_code: c = 0, request_body_size: u, response_body_size: l } = e.data,
                                d = sd(s, n.networkDetailAllowUrls) && !sd(s, n.networkDetailDenyUrls),
                                p = d
                                    ? (function ({ networkCaptureBodies: e, networkRequestHeaders: t }, n, r) {
                                          const o = n
                                              ? (function (e, t) {
                                                    if (1 === e.length && "string" != typeof e[0]) return ld(e[0], t);
                                                    if (2 === e.length) return ld(e[1], t);
                                                    return {};
                                                })(n, t)
                                              : {};
                                          if (!e) return rd(o, r, void 0);
                                          const i = cd(n),
                                              [s, a] = Zl(i),
                                              c = rd(o, r, s);
                                          if (a) return ed(c, a);
                                          return c;
                                      })(n, t.input, u)
                                    : nd(u),
                                f = await (async function (e, { networkCaptureBodies: t, networkResponseHeaders: n }, r, o) {
                                    if (!e && void 0 !== o) return nd(o);
                                    const i = r ? ud(r.headers, n) : {};
                                    if (!r || (!t && void 0 !== o)) return rd(i, o, void 0);
                                    const [s, a] = await (async function (e) {
                                            const t = (function (e) {
                                                try {
                                                    return e.clone();
                                                } catch (e) {
                                                    gl && L.warn("[Replay] Failed to clone response body", e);
                                                }
                                            })(e);
                                            if (!t) return [void 0, "BODY_PARSE_ERROR"];
                                            try {
                                                const e = await (function (e) {
                                                    return new Promise((t, n) => {
                                                        const r = Jo(() => n(new Error("Timeout while trying to read response body")), 500);
                                                        (async function (e) {
                                                            return await e.text();
                                                        })(e)
                                                            .then(
                                                                (e) => t(e),
                                                                (e) => n(e)
                                                            )
                                                            .finally(() => clearTimeout(r));
                                                    });
                                                })(t);
                                                return [e];
                                            } catch (e) {
                                                return gl && L.warn("[Replay] Failed to get text body from response", e), [void 0, "BODY_PARSE_ERROR"];
                                            }
                                        })(r),
                                        c = (function (e, { networkCaptureBodies: t, responseBodySize: n, captureDetails: r, headers: o }) {
                                            try {
                                                const i = e && e.length && void 0 === n ? Xl(e) : n;
                                                return r ? rd(o, i, t ? e : void 0) : nd(i);
                                            } catch (e) {
                                                return gl && L.warn("[Replay] Failed to serialize response body", e), rd(o, n, void 0);
                                            }
                                        })(s, { networkCaptureBodies: t, responseBodySize: o, captureDetails: e, headers: i });
                                    if (a) return ed(c, a);
                                    return c;
                                })(d, n, t.response, l);
                            return { startTimestamp: o, endTimestamp: i, url: s, method: a, statusCode: c, request: p, response: f };
                        })(e, t, n),
                        o = td("resource.fetch", r);
                    Jl(n.replay, o);
                } catch (e) {
                    gl && L.error("[Replay] Failed to capture fetch breadcrumb", e);
                }
            }
            function cd(e = []) {
                if (2 === e.length && "object" == typeof e[1]) return e[1].body;
            }
            function ud(e, t) {
                const n = {};
                return (
                    t.forEach((t) => {
                        e.get(t) && (n[t] = e.get(t));
                    }),
                    n
                );
            }
            function ld(e, t) {
                if (!e) return {};
                const n = e.headers;
                return n ? (n instanceof Headers ? ud(n, t) : Array.isArray(n) ? {} : od(n, t)) : {};
            }
            async function dd(e, t, n) {
                try {
                    const r = (function (e, t, n) {
                            const r = Date.now(),
                                { startTimestamp: o = r, endTimestamp: i = r, input: s, xhr: a } = t,
                                { url: c, method: u, status_code: l = 0, request_body_size: d, response_body_size: p } = e.data;
                            if (!c) return null;
                            if (!a || !sd(c, n.networkDetailAllowUrls) || sd(c, n.networkDetailDenyUrls)) {
                                return { startTimestamp: o, endTimestamp: i, url: c, method: u, statusCode: l, request: nd(d), response: nd(p) };
                            }
                            const f = a[Ii],
                                h = f ? od(f.request_headers, n.networkRequestHeaders) : {},
                                m = od(
                                    (function (e) {
                                        const t = e.getAllResponseHeaders();
                                        if (!t) return {};
                                        return t.split("\r\n").reduce((e, t) => {
                                            const [n, r] = t.split(": ");
                                            return r && (e[n.toLowerCase()] = r), e;
                                        }, {});
                                    })(a),
                                    n.networkResponseHeaders
                                ),
                                [g, v] = n.networkCaptureBodies ? Zl(s) : [void 0],
                                [y, _] = n.networkCaptureBodies
                                    ? (function (e) {
                                          const t = [];
                                          try {
                                              return [e.responseText];
                                          } catch (e) {
                                              t.push(e);
                                          }
                                          try {
                                              return (function (e, t) {
                                                  try {
                                                      if ("string" == typeof e) return [e];
                                                      if (e instanceof Document) return [e.body.outerHTML];
                                                      if ("json" === t && e && "object" == typeof e) return [JSON.stringify(e)];
                                                      if (!e) return [void 0];
                                                  } catch (t) {
                                                      return gl && L.warn("[Replay] Failed to serialize body", e), [void 0, "BODY_PARSE_ERROR"];
                                                  }
                                                  return gl && L.info("[Replay] Skipping network body because of body type", e), [void 0, "UNPARSEABLE_BODY_TYPE"];
                                              })(e.response, e.responseType);
                                          } catch (e) {
                                              t.push(e);
                                          }
                                          return gl && L.warn("[Replay] Failed to get xhr response body", ...t), [void 0];
                                      })(a)
                                    : [void 0],
                                b = rd(h, d, g),
                                w = rd(m, p, y);
                            return { startTimestamp: o, endTimestamp: i, url: c, method: u, statusCode: l, request: v ? ed(b, v) : b, response: _ ? ed(w, _) : w };
                        })(e, t, n),
                        o = td("resource.xhr", r);
                    Jl(n.replay, o);
                } catch (e) {
                    gl && L.error("[Replay] Failed to capture xhr breadcrumb", e);
                }
            }
            function pd(e, t) {
                const { xhr: n, input: r } = t;
                if (!n) return;
                const o = Xl(r),
                    i = n.getResponseHeader("content-length")
                        ? Ql(n.getResponseHeader("content-length"))
                        : (function (e, t) {
                              try {
                                  return Xl("json" === t && e && "object" == typeof e ? JSON.stringify(e) : e);
                              } catch (e) {
                                  return;
                              }
                          })(n.response, n.responseType);
                void 0 !== o && (e.data.request_body_size = o), void 0 !== i && (e.data.response_body_size = i);
            }
            function fd(e) {
                const t = Me();
                try {
                    const { networkDetailAllowUrls: n, networkDetailDenyUrls: r, networkCaptureBodies: o, networkRequestHeaders: i, networkResponseHeaders: s } = e.getOptions(),
                        a = { replay: e, networkDetailAllowUrls: n, networkDetailDenyUrls: r, networkCaptureBodies: o, networkRequestHeaders: i, networkResponseHeaders: s };
                    t &&
                        t.on("beforeAddBreadcrumb", (e, t) =>
                            (function (e, t, n) {
                                if (!t.data) return;
                                try {
                                    (function (e) {
                                        return "xhr" === e.category;
                                    })(t) &&
                                        (function (e) {
                                            return e && e.xhr;
                                        })(n) &&
                                        (pd(t, n), dd(t, n, e)),
                                        (function (e) {
                                            return "fetch" === e.category;
                                        })(t) &&
                                            (function (e) {
                                                return e && e.response;
                                            })(n) &&
                                            (!(function (e, t) {
                                                const { input: n, response: r } = t,
                                                    o = Xl(n ? cd(n) : void 0),
                                                    i = r ? Ql(r.headers.get("content-length")) : void 0;
                                                void 0 !== o && (e.data.request_body_size = o), void 0 !== i && (e.data.response_body_size = i);
                                            })(t, n),
                                            ad(t, n, e));
                                } catch (e) {
                                    gl && L.warn("Error when enriching network breadcrumb");
                                }
                            })(a, e, t)
                        );
                } catch (e) {}
            }
            function hd(e) {
                const { jsHeapSizeLimit: t, totalJSHeapSize: n, usedJSHeapSize: r } = e,
                    o = Date.now() / 1e3;
                return { type: "memory", name: "memory", start: o, end: o, data: { memory: { jsHeapSizeLimit: t, totalJSHeapSize: n, usedJSHeapSize: r } } };
            }
            function md(e) {
                let t = !1;
                return (n, r) => {
                    if (!e.checkAndHandleExpiredSession()) return void (gl && L.warn("[Replay] Received replay event after session expired."));
                    const o = r || !t;
                    (t = !0),
                        e.clickDetector && Zu(e.clickDetector, n),
                        e.addUpdate(() => {
                            if (("buffer" === e.recordingMode && o && e.setInitialState(), !Fl(e, n, o))) return !0;
                            if (!o) return !1;
                            if (
                                ((function (e, t) {
                                    if (!t || !e.session || 0 !== e.session.segmentId) return;
                                    Fl(
                                        e,
                                        (function (e) {
                                            const t = e.getOptions();
                                            return {
                                                type: Gc.Custom,
                                                timestamp: Date.now(),
                                                data: {
                                                    tag: "options",
                                                    payload: {
                                                        shouldRecordCanvas: e.isRecordingCanvas(),
                                                        sessionSampleRate: t.sessionSampleRate,
                                                        errorSampleRate: t.errorSampleRate,
                                                        useCompressionOption: t.useCompression,
                                                        blockAllMedia: t.blockAllMedia,
                                                        maskAllText: t.maskAllText,
                                                        maskAllInputs: t.maskAllInputs,
                                                        useCompression: !!e.eventBuffer && "worker" === e.eventBuffer.type,
                                                        networkDetailHasUrls: t.networkDetailAllowUrls.length > 0,
                                                        networkCaptureBodies: t.networkCaptureBodies,
                                                        networkRequestHasHeaders: t.networkRequestHeaders.length > 0,
                                                        networkResponseHasHeaders: t.networkResponseHeaders.length > 0,
                                                    },
                                                },
                                            };
                                        })(e),
                                        !1
                                    );
                                })(e, o),
                                e.session && e.session.previousSessionId)
                            )
                                return !0;
                            if ("buffer" === e.recordingMode && e.session && e.eventBuffer) {
                                const t = e.eventBuffer.getEarliestTimestamp();
                                t &&
                                    (yl(`[Replay] Updating session start time to earliest event in buffer to ${new Date(t)}`, e.getOptions()._experiments.traceInternals),
                                    (e.session.started = t),
                                    e.getOptions().stickySession && Rl(e.session));
                            }
                            return "session" === e.recordingMode && e.flush(), !0;
                        });
                };
            }
            async function gd({ recordingData: e, replayId: t, segmentId: n, eventContext: r, timestamp: o, session: i }) {
                const s = (function ({ recordingData: e, headers: t }) {
                        let n;
                        const r = `${JSON.stringify(t)}\n`;
                        if ("string" == typeof e) n = `${r}${e}`;
                        else {
                            const t = new TextEncoder().encode(r);
                            (n = new Uint8Array(t.length + e.length)), n.set(t), n.set(e, t.length);
                        }
                        return n;
                    })({ recordingData: e, headers: { segment_id: n } }),
                    { urls: a, errorIds: c, traceIds: u, initialTimestamp: l } = r,
                    d = Me(),
                    p = Ee(),
                    f = d && d.getTransport(),
                    h = d && d.getDsn();
                if (!(d && f && h && i.sampled)) return Ge({});
                const m = { type: Ia, replay_start_timestamp: l / 1e3, timestamp: o / 1e3, error_ids: c, trace_ids: u, urls: a, replay_id: t, segment_id: n, replay_type: i.sampled },
                    g = await (async function ({ client: e, scope: t, replayId: n, event: r }) {
                        const o = { event_id: n, integrations: "object" != typeof e._integrations || null === e._integrations || Array.isArray(e._integrations) ? void 0 : Object.keys(e._integrations) };
                        e.emit("preprocessEvent", r, o);
                        const i = await $t(e.getOptions(), r, o, t, e, Ie());
                        if (!i) return null;
                        i.platform = i.platform || "javascript";
                        const s = e.getSdkMetadata(),
                            { name: a, version: c } = (s && s.sdk) || {};
                        return (i.sdk = { ...i.sdk, name: a || "sentry.javascript.unknown", version: c || "0.0.0" }), i;
                    })({ scope: p, client: d, replayId: t, event: m });
                if (!g) return d.recordDroppedEvent("event_processor", "replay", m), yl("An event processor returned `null`, will not send event."), Ge({});
                delete g.sdkProcessingMetadata;
                const v = (function (e, t, n, r) {
                    return zn(tr(e, er(e), r, n), [
                        [{ type: "replay_event" }, e],
                        [{ type: "replay_recording", length: "string" == typeof t ? new TextEncoder().encode(t).length : t.length }, t],
                    ]);
                })(g, s, h, d.getOptions().tunnel);
                let y;
                try {
                    y = await f.send(v);
                } catch (e) {
                    const t = new Error(Ta);
                    try {
                        t.cause = e;
                    } catch (e) {}
                    throw t;
                }
                if ("number" == typeof y.statusCode && (y.statusCode < 200 || y.statusCode >= 300)) throw new vd(y.statusCode);
                const _ = Cr({}, y);
                if (Tr(_, "replay")) throw new yd(_);
                return y;
            }
            class vd extends Error {
                constructor(e) {
                    super(`Transport returned status code ${e}`);
                }
            }
            class yd extends Error {
                constructor(e) {
                    super("Rate limit hit"), (this.rateLimits = e);
                }
            }
            async function _d(e, t = { count: 0, interval: 5e3 }) {
                const { recordingData: n, options: r } = e;
                if (n.length)
                    try {
                        return await gd(e), !0;
                    } catch (n) {
                        if (n instanceof vd || n instanceof yd) throw n;
                        if ((Vt("Replays", { _retryCount: t.count }), gl && r._experiments && r._experiments.captureExceptions && zt(n), t.count >= 3)) {
                            const e = new Error(`${Ta} - max retries exceeded`);
                            try {
                                e.cause = n;
                            } catch (e) {}
                            throw e;
                        }
                        return (
                            (t.interval *= ++t.count),
                            new Promise((n, r) => {
                                Jo(async () => {
                                    try {
                                        await _d(e, t), n(!0);
                                    } catch (e) {
                                        r(e);
                                    }
                                }, t.interval);
                            })
                        );
                    }
            }
            const bd = "__THROTTLED";
            function wd(e, t, n) {
                const r = new Map();
                let o = !1;
                return (...i) => {
                    const s = Math.floor(Date.now() / 1e3);
                    if (
                        (((e) => {
                            const t = e - n;
                            r.forEach((e, n) => {
                                n < t && r.delete(n);
                            });
                        })(s),
                        [...r.values()].reduce((e, t) => e + t, 0) >= t)
                    ) {
                        const e = o;
                        return (o = !0), e ? "__SKIPPED" : bd;
                    }
                    o = !1;
                    const a = r.get(s) || 0;
                    return r.set(s, a + 1), e(...i);
                };
            }
            class Sd {
                constructor({ options: e, recordingOptions: t }) {
                    Sd.prototype.__init.call(this),
                        Sd.prototype.__init2.call(this),
                        Sd.prototype.__init3.call(this),
                        Sd.prototype.__init4.call(this),
                        Sd.prototype.__init5.call(this),
                        Sd.prototype.__init6.call(this),
                        (this.eventBuffer = null),
                        (this.performanceEntries = []),
                        (this.replayPerformanceEntries = []),
                        (this.recordingMode = "session"),
                        (this.timeouts = { sessionIdlePause: 3e5, sessionIdleExpire: 9e5 }),
                        (this._lastActivity = Date.now()),
                        (this._isEnabled = !1),
                        (this._isPaused = !1),
                        (this._requiresManualStart = !1),
                        (this._hasInitializedCoreListeners = !1),
                        (this._context = { errorIds: new Set(), traceIds: new Set(), urls: [], initialTimestamp: Date.now(), initialUrl: "" }),
                        (this._recordingOptions = t),
                        (this._options = e),
                        (this._debouncedFlush = (function (e, t, n) {
                            let r, o, i;
                            const s = n && n.maxWait ? Math.max(n.maxWait, t) : 0;
                            function a() {
                                return c(), (r = e()), r;
                            }
                            function c() {
                                void 0 !== o && clearTimeout(o), void 0 !== i && clearTimeout(i), (o = i = void 0);
                            }
                            function u() {
                                return o && clearTimeout(o), (o = Jo(a, t)), s && void 0 === i && (i = Jo(a, s)), r;
                            }
                            return (
                                (u.cancel = c),
                                (u.flush = function () {
                                    return void 0 !== o || void 0 !== i ? a() : r;
                                }),
                                u
                            );
                        })(() => this._flush(), this._options.flushMinDelay, { maxWait: this._options.flushMaxDelay })),
                        (this._throttledAddEvent = wd(
                            (e, t) =>
                                (function (e, t, n) {
                                    return $l(e, t) ? jl(e, t, n) : Promise.resolve(null);
                                })(this, e, t),
                            300,
                            5
                        ));
                    const { slowClickTimeout: n, slowClickIgnoreSelectors: r } = this.getOptions(),
                        o = n ? { threshold: Math.min(3e3, n), timeout: n, scrollTimeout: 300, ignoreSelector: r ? r.join(",") : "" } : void 0;
                    o && (this.clickDetector = new Ju(this, o));
                }
                getContext() {
                    return this._context;
                }
                isEnabled() {
                    return this._isEnabled;
                }
                isPaused() {
                    return this._isPaused;
                }
                isRecordingCanvas() {
                    return Boolean(this._canvas);
                }
                getOptions() {
                    return this._options;
                }
                initializeSampling(e) {
                    const { errorSampleRate: t, sessionSampleRate: n } = this._options,
                        r = t <= 0 && n <= 0;
                    (this._requiresManualStart = r),
                        r ||
                            (this._initializeSessionForSampling(e),
                            this.session
                                ? !1 !== this.session.sampled &&
                                  ((this.recordingMode = "buffer" === this.session.sampled && 0 === this.session.segmentId ? "buffer" : "session"),
                                  _l(`[Replay] Starting replay in ${this.recordingMode} mode`, this._options._experiments.traceInternals),
                                  this._initializeRecording())
                                : this._handleException(new Error("Unable to initialize and create session")));
                }
                start() {
                    if (this._isEnabled && "session" === this.recordingMode) return void (gl && L.info("[Replay] Recording is already in progress"));
                    if (this._isEnabled && "buffer" === this.recordingMode) return void (gl && L.info("[Replay] Buffering is in progress, call `flush()` to save the replay"));
                    _l("[Replay] Starting replay in session mode", this._options._experiments.traceInternals), this._updateUserActivity();
                    const e = Ll(
                        { maxReplayDuration: this._options.maxReplayDuration, sessionIdleExpire: this.timeouts.sessionIdleExpire, traceInternals: this._options._experiments.traceInternals },
                        { stickySession: this._options.stickySession, sessionSampleRate: 1, allowBuffering: !1 }
                    );
                    (this.session = e), this._initializeRecording();
                }
                startBuffering() {
                    if (this._isEnabled) return void (gl && L.info("[Replay] Buffering is in progress, call `flush()` to save the replay"));
                    _l("[Replay] Starting replay in buffer mode", this._options._experiments.traceInternals);
                    const e = Ll(
                        { sessionIdleExpire: this.timeouts.sessionIdleExpire, maxReplayDuration: this._options.maxReplayDuration, traceInternals: this._options._experiments.traceInternals },
                        { stickySession: this._options.stickySession, sessionSampleRate: 0, allowBuffering: !0 }
                    );
                    (this.session = e), (this.recordingMode = "buffer"), this._initializeRecording();
                }
                startRecording() {
                    try {
                        const e = this._canvas;
                        this._stopRecording = $u({
                            ...this._recordingOptions,
                            ...("buffer" === this.recordingMode && { checkoutEveryNms: 6e4 }),
                            emit: md(this),
                            onMutation: this._onMutationHandler,
                            ...(e ? { recordCanvas: e.recordCanvas, getCanvasManager: e.getCanvasManager, sampling: e.sampling, dataURLOptions: e.dataURLOptions } : {}),
                        });
                    } catch (e) {
                        this._handleException(e);
                    }
                }
                stopRecording() {
                    try {
                        return this._stopRecording && (this._stopRecording(), (this._stopRecording = void 0)), !0;
                    } catch (e) {
                        return this._handleException(e), !1;
                    }
                }
                async stop({ forceFlush: e = !1, reason: t } = {}) {
                    if (this._isEnabled) {
                        this._isEnabled = !1;
                        try {
                            yl("[Replay] Stopping Replay" + (t ? ` triggered by ${t}` : ""), this._options._experiments.traceInternals),
                                this._removeListeners(),
                                this.stopRecording(),
                                this._debouncedFlush.cancel(),
                                e && (await this._flush({ force: !0 })),
                                this.eventBuffer && this.eventBuffer.destroy(),
                                (this.eventBuffer = null),
                                Cl(this);
                        } catch (e) {
                            this._handleException(e);
                        }
                    }
                }
                pause() {
                    this._isPaused || ((this._isPaused = !0), this.stopRecording(), yl("[Replay] Pausing replay", this._options._experiments.traceInternals));
                }
                resume() {
                    this._isPaused && this._checkSession() && ((this._isPaused = !1), this.startRecording(), yl("[Replay] Resuming replay", this._options._experiments.traceInternals));
                }
                async sendBufferedReplayOrFlush({ continueRecording: e = !0 } = {}) {
                    if ("session" === this.recordingMode) return this.flushImmediate();
                    const t = Date.now();
                    yl("[Replay] Converting buffer to session", this._options._experiments.traceInternals), await this.flushImmediate();
                    const n = this.stopRecording();
                    e && n && "session" !== this.recordingMode && ((this.recordingMode = "session"), this.session && (this._updateUserActivity(t), this._updateSessionActivity(t), this._maybeSaveSession()), this.startRecording());
                }
                addUpdate(e) {
                    const t = e();
                    "buffer" !== this.recordingMode && !0 !== t && this._debouncedFlush();
                }
                triggerUserActivity() {
                    if ((this._updateUserActivity(), this._stopRecording)) this.checkAndHandleExpiredSession(), this._updateSessionActivity();
                    else {
                        if (!this._checkSession()) return;
                        this.resume();
                    }
                }
                updateUserActivity() {
                    this._updateUserActivity(), this._updateSessionActivity();
                }
                conditionalFlush() {
                    return "buffer" === this.recordingMode ? Promise.resolve() : this.flushImmediate();
                }
                flush() {
                    return this._debouncedFlush();
                }
                flushImmediate() {
                    return this._debouncedFlush(), this._debouncedFlush.flush();
                }
                cancelFlush() {
                    this._debouncedFlush.cancel();
                }
                getSessionId() {
                    return this.session && this.session.id;
                }
                checkAndHandleExpiredSession() {
                    if (!(this._lastActivity && Nl(this._lastActivity, this.timeouts.sessionIdlePause) && this.session && "session" === this.session.sampled)) return !!this._checkSession();
                    this.pause();
                }
                setInitialState() {
                    const e = `${xa.location.pathname}${xa.location.hash}${xa.location.search}`,
                        t = `${xa.location.origin}${e}`;
                    (this.performanceEntries = []), (this.replayPerformanceEntries = []), this._clearContext(), (this._context.initialUrl = t), (this._context.initialTimestamp = Date.now()), this._context.urls.push(t);
                }
                throttledAddEvent(e, t) {
                    const n = this._throttledAddEvent(e, t);
                    if (n === bd) {
                        const e = el({ category: "replay.throttled" });
                        this.addUpdate(() => !Fl(this, { type: 5, timestamp: e.timestamp || 0, data: { tag: "breadcrumb", payload: e, metric: !0 } }));
                    }
                    return n;
                }
                getCurrentRoute() {
                    const e = this.lastActiveSpan || At(),
                        t = e && Ct(e),
                        n = ((t && wt(t).data) || {})[r];
                    if (t && n && ["route", "custom"].includes(n)) return wt(t).description;
                }
                _initializeRecording() {
                    this.setInitialState(),
                        this._updateSessionActivity(),
                        (this.eventBuffer = Il({ useCompression: this._options.useCompression, workerUrl: this._options.workerUrl })),
                        this._removeListeners(),
                        this._addListeners(),
                        (this._isEnabled = !0),
                        (this._isPaused = !1),
                        this.startRecording();
                }
                _handleException(e) {
                    gl && L.error("[Replay]", e), gl && this._options._experiments && this._options._experiments.captureExceptions && zt(e);
                }
                _initializeSessionForSampling(e) {
                    const t = this._options.errorSampleRate > 0,
                        n = Ll(
                            { sessionIdleExpire: this.timeouts.sessionIdleExpire, maxReplayDuration: this._options.maxReplayDuration, traceInternals: this._options._experiments.traceInternals, previousSessionId: e },
                            { stickySession: this._options.stickySession, sessionSampleRate: this._options.sessionSampleRate, allowBuffering: t }
                        );
                    this.session = n;
                }
                _checkSession() {
                    if (!this.session) return !1;
                    const e = this.session;
                    return !Dl(e, { sessionIdleExpire: this.timeouts.sessionIdleExpire, maxReplayDuration: this._options.maxReplayDuration }) || (this._refreshSession(e), !1);
                }
                async _refreshSession(e) {
                    this._isEnabled && (await this.stop({ reason: "refresh session" }), this.initializeSampling(e.id));
                }
                _addListeners() {
                    try {
                        xa.document.addEventListener("visibilitychange", this._handleVisibilityChange),
                            xa.addEventListener("blur", this._handleWindowBlur),
                            xa.addEventListener("focus", this._handleWindowFocus),
                            xa.addEventListener("keydown", this._handleKeyboardEvent),
                            this.clickDetector && this.clickDetector.addListeners(),
                            this._hasInitializedCoreListeners ||
                                (!(function (e) {
                                    const t = Me();
                                    ki(ol(e)),
                                        vi(Kl(e)),
                                        Wl(e),
                                        fd(e),
                                        nn(Yl(e)),
                                        t &&
                                            (t.on("beforeSendEvent", Hl(e)),
                                            t.on("afterSendEvent", zl(e)),
                                            t.on("createDsc", (t) => {
                                                const n = e.getSessionId();
                                                n && e.isEnabled() && "session" === e.recordingMode && e.checkAndHandleExpiredSession() && (t.replay_id = n);
                                            }),
                                            t.on("spanStart", (t) => {
                                                e.lastActiveSpan = t;
                                            }),
                                            t.on("spanEnd", (t) => {
                                                e.lastActiveSpan = t;
                                            }),
                                            t.on("beforeSendFeedback", (t, n) => {
                                                const r = e.getSessionId();
                                                n && n.includeReplay && e.isEnabled() && r && t.contexts && t.contexts.feedback && (t.contexts.feedback.replay_id = r);
                                            }));
                                })(this),
                                (this._hasInitializedCoreListeners = !0));
                    } catch (e) {
                        this._handleException(e);
                    }
                    this._performanceCleanupCallback = (function (e) {
                        function t(t) {
                            e.performanceEntries.includes(t) || e.performanceEntries.push(t);
                        }
                        function n({ entries: e }) {
                            e.forEach(t);
                        }
                        const r = [];
                        return (
                            ["navigation", "paint", "resource"].forEach((e) => {
                                r.push(ha(e, n));
                            }),
                            r.push(da(cl(dl, e)), la(cl(pl, e)), pa(cl(fl, e)), fa(cl(hl, e))),
                            () => {
                                r.forEach((e) => e());
                            }
                        );
                    })(this);
                }
                _removeListeners() {
                    try {
                        xa.document.removeEventListener("visibilitychange", this._handleVisibilityChange),
                            xa.removeEventListener("blur", this._handleWindowBlur),
                            xa.removeEventListener("focus", this._handleWindowFocus),
                            xa.removeEventListener("keydown", this._handleKeyboardEvent),
                            this.clickDetector && this.clickDetector.removeListeners(),
                            this._performanceCleanupCallback && this._performanceCleanupCallback();
                    } catch (e) {
                        this._handleException(e);
                    }
                }
                __init() {
                    this._handleVisibilityChange = () => {
                        "visible" === xa.document.visibilityState ? this._doChangeToForegroundTasks() : this._doChangeToBackgroundTasks();
                    };
                }
                __init2() {
                    this._handleWindowBlur = () => {
                        const e = el({ category: "ui.blur" });
                        this._doChangeToBackgroundTasks(e);
                    };
                }
                __init3() {
                    this._handleWindowFocus = () => {
                        const e = el({ category: "ui.focus" });
                        this._doChangeToForegroundTasks(e);
                    };
                }
                __init4() {
                    this._handleKeyboardEvent = (e) => {
                        sl(this, e);
                    };
                }
                _doChangeToBackgroundTasks(e) {
                    if (!this.session) return;
                    Pl(this.session, { maxReplayDuration: this._options.maxReplayDuration, sessionIdleExpire: this.timeouts.sessionIdleExpire }) || (e && this._createCustomBreadcrumb(e), this.conditionalFlush());
                }
                _doChangeToForegroundTasks(e) {
                    if (!this.session) return;
                    this.checkAndHandleExpiredSession() ? e && this._createCustomBreadcrumb(e) : yl("[Replay] Document has become active, but session has expired");
                }
                _updateUserActivity(e = Date.now()) {
                    this._lastActivity = e;
                }
                _updateSessionActivity(e = Date.now()) {
                    this.session && ((this.session.lastActivity = e), this._maybeSaveSession());
                }
                _createCustomBreadcrumb(e) {
                    this.addUpdate(() => {
                        this.throttledAddEvent({ type: Gc.Custom, timestamp: e.timestamp || 0, data: { tag: "breadcrumb", payload: e } });
                    });
                }
                _addPerformanceEntries() {
                    const e = ((t = this.performanceEntries), t.map(ul).filter(Boolean)).concat(this.replayPerformanceEntries);
                    var t;
                    return (this.performanceEntries = []), (this.replayPerformanceEntries = []), Promise.all(Gl(this, e));
                }
                _clearContext() {
                    this._context.errorIds.clear(), this._context.traceIds.clear(), (this._context.urls = []);
                }
                _updateInitialTimestampFromEventBuffer() {
                    const { session: e, eventBuffer: t } = this;
                    if (!e || !t || this._requiresManualStart) return;
                    if (e.segmentId) return;
                    const n = t.getEarliestTimestamp();
                    n && n < this._context.initialTimestamp && (this._context.initialTimestamp = n);
                }
                _popEventContext() {
                    const e = { initialTimestamp: this._context.initialTimestamp, initialUrl: this._context.initialUrl, errorIds: Array.from(this._context.errorIds), traceIds: Array.from(this._context.traceIds), urls: this._context.urls };
                    return this._clearContext(), e;
                }
                async _runFlush() {
                    const e = this.getSessionId();
                    if (this.session && this.eventBuffer && e) {
                        if (
                            (await this._addPerformanceEntries(),
                            this.eventBuffer &&
                                this.eventBuffer.hasEvents &&
                                (await (async function (e) {
                                    try {
                                        return Promise.all(Gl(e, [hd(xa.performance.memory)]));
                                    } catch (e) {
                                        return [];
                                    }
                                })(this),
                                this.eventBuffer && e === this.getSessionId()))
                        )
                            try {
                                this._updateInitialTimestampFromEventBuffer();
                                const t = Date.now();
                                if (t - this._context.initialTimestamp > this._options.maxReplayDuration + 3e4) throw new Error("Session is too long, not sending replay");
                                const n = this._popEventContext(),
                                    r = this.session.segmentId++;
                                this._maybeSaveSession();
                                const o = await this.eventBuffer.finish();
                                await _d({ replayId: e, recordingData: o, segmentId: r, eventContext: n, session: this.session, options: this.getOptions(), timestamp: t });
                            } catch (e) {
                                this._handleException(e), this.stop({ reason: "sendReplay" });
                                const t = Me();
                                t && t.recordDroppedEvent("send_error", "replay");
                            }
                    } else gl && L.error("[Replay] No session or eventBuffer found to flush.");
                }
                __init5() {
                    this._flush = async ({ force: e = !1 } = {}) => {
                        if (!this._isEnabled && !e) return;
                        if (!this.checkAndHandleExpiredSession()) return void (gl && L.error("[Replay] Attempting to finish replay event after session expired."));
                        if (!this.session) return;
                        const t = this.session.started,
                            n = Date.now() - t;
                        this._debouncedFlush.cancel();
                        const r = n < this._options.minReplayDuration,
                            o = n > this._options.maxReplayDuration + 5e3;
                        if (r || o) return yl(`[Replay] Session duration (${Math.floor(n / 1e3)}s) is too ${r ? "short" : "long"}, not sending replay.`, this._options._experiments.traceInternals), void (r && this._debouncedFlush());
                        const i = this.eventBuffer;
                        if ((i && 0 === this.session.segmentId && !i.hasCheckout && yl("[Replay] Flushing initial segment without checkout.", this._options._experiments.traceInternals), !this._flushLock))
                            return (this._flushLock = this._runFlush()), await this._flushLock, void (this._flushLock = void 0);
                        try {
                            await this._flushLock;
                        } catch (e) {
                            gl && L.error(e);
                        } finally {
                            this._debouncedFlush();
                        }
                    };
                }
                _maybeSaveSession() {
                    this.session && this._options.stickySession && Rl(this.session);
                }
                __init6() {
                    this._onMutationHandler = (e) => {
                        const t = e.length,
                            n = this._options.mutationLimit,
                            r = n && t > n;
                        if (t > this._options.mutationBreadcrumbLimit || r) {
                            const e = el({ category: "replay.mutations", data: { count: t, limit: r } });
                            this._createCustomBreadcrumb(e);
                        }
                        return !r || (this.stop({ reason: "mutationLimit", forceFlush: "session" === this.recordingMode }), !1);
                    };
                }
            }
            function kd(e, t) {
                return [...e, ...t].join(",");
            }
            const xd = 'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]',
                Ed = ["content-length", "content-type", "accept"];
            let Id = !1;
            const Td = (e) => new Cd(e);
            class Cd {
                static __initStatic() {
                    this.id = "Replay";
                }
                constructor({
                    flushMinDelay: e = 5e3,
                    flushMaxDelay: t = 5500,
                    minReplayDuration: n = 4999,
                    maxReplayDuration: r = 36e5,
                    stickySession: o = !0,
                    useCompression: i = !0,
                    workerUrl: s,
                    _experiments: a = {},
                    maskAllText: c = !0,
                    maskAllInputs: u = !0,
                    blockAllMedia: l = !0,
                    mutationBreadcrumbLimit: d = 750,
                    mutationLimit: p = 1e4,
                    slowClickTimeout: f = 7e3,
                    slowClickIgnoreSelectors: h = [],
                    networkDetailAllowUrls: m = [],
                    networkDetailDenyUrls: g = [],
                    networkCaptureBodies: v = !0,
                    networkRequestHeaders: y = [],
                    networkResponseHeaders: _ = [],
                    mask: b = [],
                    maskAttributes: w = ["title", "placeholder"],
                    unmask: S = [],
                    block: k = [],
                    unblock: x = [],
                    ignore: E = [],
                    maskFn: I,
                    beforeAddRecordingEvent: T,
                    beforeErrorSampling: C,
                } = {}) {
                    this.name = Cd.id;
                    const A = (function ({ mask: e, unmask: t, block: n, unblock: r, ignore: o }) {
                        return {
                            maskTextSelector: kd(e, [".sentry-mask", "[data-sentry-mask]"]),
                            unmaskTextSelector: kd(t, []),
                            blockSelector: kd(n, [".sentry-block", "[data-sentry-block]", 'base[href="/"]']),
                            unblockSelector: kd(r, []),
                            ignoreSelector: kd(o, [".sentry-ignore", "[data-sentry-ignore]", 'input[type="file"]']),
                        };
                    })({ mask: b, unmask: S, block: k, unblock: x, ignore: E });
                    if (
                        ((this._recordingOptions = {
                            maskAllInputs: u,
                            maskAllText: c,
                            maskInputOptions: { password: !0 },
                            maskTextFn: I,
                            maskInputFn: I,
                            maskAttributeFn: (e, t, n) =>
                                (function ({ el: e, key: t, maskAttributes: n, maskAllText: r, privacyOptions: o, value: i }) {
                                    return r
                                        ? o.unmaskTextSelector && e.matches(o.unmaskTextSelector)
                                            ? i
                                            : n.includes(t) || ("value" === t && "INPUT" === e.tagName && ["submit", "button"].includes(e.getAttribute("type") || ""))
                                            ? i.replace(/[\S]/g, "*")
                                            : i
                                        : i;
                                })({ maskAttributes: w, maskAllText: c, privacyOptions: A, key: e, value: t, el: n }),
                            ...A,
                            slimDOMOptions: "all",
                            inlineStylesheet: !0,
                            inlineImages: !1,
                            collectFonts: !0,
                            errorHandler: (e) => {
                                try {
                                    e.__rrweb__ = !0;
                                } catch (e) {}
                            },
                        }),
                        (this._initialOptions = {
                            flushMinDelay: e,
                            flushMaxDelay: t,
                            minReplayDuration: Math.min(n, 15e3),
                            maxReplayDuration: Math.min(r, Ra),
                            stickySession: o,
                            useCompression: i,
                            workerUrl: s,
                            blockAllMedia: l,
                            maskAllInputs: u,
                            maskAllText: c,
                            mutationBreadcrumbLimit: d,
                            mutationLimit: p,
                            slowClickTimeout: f,
                            slowClickIgnoreSelectors: h,
                            networkDetailAllowUrls: m,
                            networkDetailDenyUrls: g,
                            networkCaptureBodies: v,
                            networkRequestHeaders: Ad(y),
                            networkResponseHeaders: Ad(_),
                            beforeAddRecordingEvent: T,
                            beforeErrorSampling: C,
                            _experiments: a,
                        }),
                        this._initialOptions.blockAllMedia && (this._recordingOptions.blockSelector = this._recordingOptions.blockSelector ? `${this._recordingOptions.blockSelector},${xd}` : xd),
                        this._isInitialized && Ss())
                    )
                        throw new Error("Multiple Sentry Session Replay instances are not supported");
                    this._isInitialized = !0;
                }
                get _isInitialized() {
                    return Id;
                }
                set _isInitialized(e) {
                    Id = e;
                }
                afterAllSetup(e) {
                    Ss() && !this._replay && (this._setup(e), this._initialize(e));
                }
                start() {
                    this._replay && this._replay.start();
                }
                startBuffering() {
                    this._replay && this._replay.startBuffering();
                }
                stop() {
                    return this._replay ? this._replay.stop({ forceFlush: "session" === this._replay.recordingMode }) : Promise.resolve();
                }
                flush(e) {
                    return this._replay ? (this._replay.isEnabled() ? this._replay.sendBufferedReplayOrFlush(e) : (this._replay.start(), Promise.resolve())) : Promise.resolve();
                }
                getReplayId() {
                    if (this._replay && this._replay.isEnabled()) return this._replay.getSessionId();
                }
                _initialize(e) {
                    this._replay && (this._maybeLoadFromReplayCanvasIntegration(e), this._replay.initializeSampling());
                }
                _setup(e) {
                    const t = (function (e, t) {
                        const n = t.getOptions(),
                            r = { sessionSampleRate: 0, errorSampleRate: 0, ...K(e) },
                            o = Ln(n.replaysSessionSampleRate),
                            i = Ln(n.replaysOnErrorSampleRate);
                        null == o &&
                            null == i &&
                            D(() => {
                                console.warn("Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.");
                            });
                        null != o && (r.sessionSampleRate = o);
                        null != i && (r.errorSampleRate = i);
                        return r;
                    })(this._initialOptions, e);
                    this._replay = new Sd({ options: t, recordingOptions: this._recordingOptions });
                }
                _maybeLoadFromReplayCanvasIntegration(e) {
                    try {
                        const t = e.getIntegrationByName("ReplayCanvas");
                        if (!t) return;
                        this._replay._canvas = t.getOptions();
                    } catch (e) {}
                }
            }
            function Ad(e) {
                return [...Ed, ...e.map((e) => e.toLowerCase())];
            }
            function Md() {
                const e = Me();
                return e && e.getIntegrationByName("Replay");
            }
            var Rd;
            function Od(e, t, n = 1 / 0, r = 0) {
                return e ? (e.nodeType !== e.ELEMENT_NODE || r > n ? -1 : t(e) ? r : Od(e.parentNode, t, n, r + 1)) : -1;
            }
            function Nd(e, t) {
                return (n) => {
                    const r = n;
                    if (null === r) return !1;
                    try {
                        if (e)
                            if ("string" == typeof e) {
                                if (r.matches(`.${e}`)) return !0;
                            } else if (
                                (function (e, t) {
                                    for (let n = e.classList.length; n--; ) {
                                        const r = e.classList[n];
                                        if (t.test(r)) return !0;
                                    }
                                    return !1;
                                })(r, e)
                            )
                                return !0;
                        return !(!t || !r.matches(t));
                    } catch (e) {
                        return !1;
                    }
                };
            }
            Cd.__initStatic(),
                (function (e) {
                    (e[(e.Document = 0)] = "Document"), (e[(e.DocumentType = 1)] = "DocumentType"), (e[(e.Element = 2)] = "Element"), (e[(e.Text = 3)] = "Text"), (e[(e.CDATA = 4)] = "CDATA"), (e[(e.Comment = 5)] = "Comment");
                })(Rd || (Rd = {}));
            const Pd =
                "Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording.";
            let Dd = {
                map: {},
                getId: () => (console.error(Pd), -1),
                getNode: () => (console.error(Pd), null),
                removeNodeFromMap() {
                    console.error(Pd);
                },
                has: () => (console.error(Pd), !1),
                reset() {
                    console.error(Pd);
                },
            };
            function Ld(e, t, n, r, o = window) {
                const i = o.Object.getOwnPropertyDescriptor(e, t);
                return (
                    o.Object.defineProperty(
                        e,
                        t,
                        r
                            ? n
                            : {
                                  set(e) {
                                      qd(() => {
                                          n.set.call(this, e);
                                      }, 0),
                                          i && i.set && i.set.call(this, e);
                                  },
                              }
                    ),
                    () => Ld(e, t, i || {}, !0)
                );
            }
            function Fd(e, t, n) {
                try {
                    if (!(t in e)) return () => {};
                    const r = e[t],
                        o = n(r);
                    return (
                        "function" == typeof o && ((o.prototype = o.prototype || {}), Object.defineProperties(o, { __rrweb_original__: { enumerable: !1, value: r } })),
                        (e[t] = o),
                        () => {
                            e[t] = r;
                        }
                    );
                } catch (e) {
                    return () => {};
                }
            }
            function jd(e, t, n, r, o) {
                if (!e) return !1;
                const i = (function (e) {
                    return e ? (e.nodeType === e.ELEMENT_NODE ? e : e.parentElement) : null;
                })(e);
                if (!i) return !1;
                const s = Nd(t, n);
                if (!o) {
                    const e = r && i.matches(r);
                    return s(i) && !e;
                }
                const a = Od(i, s);
                let c = -1;
                return !(a < 0) && (r && (c = Od(i, Nd(null, r))), (a > -1 && c < 0) || a < c);
            }
            "undefined" != typeof window && window.Proxy && window.Reflect && (Dd = new Proxy(Dd, { get: (e, t, n) => ("map" === t && console.error(Pd), Reflect.get(e, t, n)) })), /[1-9][0-9]{12}/.test(Date.now().toString());
            const $d = {};
            function Ud(e) {
                const t = $d[e];
                if (t) return t;
                const n = window.document;
                let r = window[e];
                if (n && "function" == typeof n.createElement)
                    try {
                        const t = n.createElement("iframe");
                        (t.hidden = !0), n.head.appendChild(t);
                        const o = t.contentWindow;
                        o && o[e] && (r = o[e]), n.head.removeChild(t);
                    } catch (e) {}
                return ($d[e] = r.bind(window));
            }
            function Bd(...e) {
                return Ud("requestAnimationFrame")(...e);
            }
            function qd(...e) {
                return Ud("setTimeout")(...e);
            }
            var zd = ((e) => ((e[(e["2D"] = 0)] = "2D"), (e[(e.WebGL = 1)] = "WebGL"), (e[(e.WebGL2 = 2)] = "WebGL2"), e))(zd || {});
            let Hd;
            const Wd = (e) => {
                if (!Hd) return e;
                return (...t) => {
                    try {
                        return e(...t);
                    } catch (e) {
                        if (Hd && !0 === Hd(e)) return () => {};
                        throw e;
                    }
                };
            };
            for (var Vd = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", Yd = "undefined" == typeof Uint8Array ? [] : new Uint8Array(256), Gd = 0; Gd < 64; Gd++) Yd[Vd.charCodeAt(Gd)] = Gd;
            const Kd = new Map();
            const Jd = (e, t, n) => {
                if (!e || (!Zd(e, t) && "object" != typeof e)) return;
                const r = (function (e, t) {
                    let n = Kd.get(e);
                    return n || ((n = new Map()), Kd.set(e, n)), n.has(t) || n.set(t, []), n.get(t);
                })(n, e.constructor.name);
                let o = r.indexOf(e);
                return -1 === o && ((o = r.length), r.push(e)), o;
            };
            function Xd(e, t, n) {
                if (e instanceof Array) return e.map((e) => Xd(e, t, n));
                if (null === e) return e;
                if (
                    e instanceof Float32Array ||
                    e instanceof Float64Array ||
                    e instanceof Int32Array ||
                    e instanceof Uint32Array ||
                    e instanceof Uint8Array ||
                    e instanceof Uint16Array ||
                    e instanceof Int16Array ||
                    e instanceof Int8Array ||
                    e instanceof Uint8ClampedArray
                ) {
                    return { rr_type: e.constructor.name, args: [Object.values(e)] };
                }
                if (e instanceof ArrayBuffer) {
                    const t = e.constructor.name,
                        n = (function (e) {
                            var t,
                                n = new Uint8Array(e),
                                r = n.length,
                                o = "";
                            for (t = 0; t < r; t += 3) (o += Vd[n[t] >> 2]), (o += Vd[((3 & n[t]) << 4) | (n[t + 1] >> 4)]), (o += Vd[((15 & n[t + 1]) << 2) | (n[t + 2] >> 6)]), (o += Vd[63 & n[t + 2]]);
                            return r % 3 == 2 ? (o = o.substring(0, o.length - 1) + "=") : r % 3 == 1 && (o = o.substring(0, o.length - 2) + "=="), o;
                        })(e);
                    return { rr_type: t, base64: n };
                }
                if (e instanceof DataView) {
                    return { rr_type: e.constructor.name, args: [Xd(e.buffer, t, n), e.byteOffset, e.byteLength] };
                }
                if (e instanceof HTMLImageElement) {
                    const t = e.constructor.name,
                        { src: n } = e;
                    return { rr_type: t, src: n };
                }
                if (e instanceof HTMLCanvasElement) {
                    return { rr_type: "HTMLImageElement", src: e.toDataURL() };
                }
                if (e instanceof ImageData) {
                    return { rr_type: e.constructor.name, args: [Xd(e.data, t, n), e.width, e.height] };
                }
                if (Zd(e, t) || "object" == typeof e) {
                    return { rr_type: e.constructor.name, index: Jd(e, t, n) };
                }
                return e;
            }
            const Qd = (e, t, n) => e.map((e) => Xd(e, t, n)),
                Zd = (e, t) => {
                    const n = [
                        "WebGLActiveInfo",
                        "WebGLBuffer",
                        "WebGLFramebuffer",
                        "WebGLProgram",
                        "WebGLRenderbuffer",
                        "WebGLShader",
                        "WebGLShaderPrecisionFormat",
                        "WebGLTexture",
                        "WebGLUniformLocation",
                        "WebGLVertexArrayObject",
                        "WebGLVertexArrayObjectOES",
                    ].filter((e) => "function" == typeof t[e]);
                    return Boolean(n.find((n) => e instanceof t[n]));
                };
            function ep(e, t, n, r, o) {
                const i = [];
                try {
                    const s = Fd(e.HTMLCanvasElement.prototype, "getContext", function (e) {
                        return function (i, ...s) {
                            if (!jd(this, t, n, r, !0)) {
                                const e = (function (e) {
                                    return "experimental-webgl" === e ? "webgl" : e;
                                })(i);
                                if (("__context" in this || (this.__context = e), o && ["webgl", "webgl2"].includes(e)))
                                    if (s[0] && "object" == typeof s[0]) {
                                        const e = s[0];
                                        e.preserveDrawingBuffer || (e.preserveDrawingBuffer = !0);
                                    } else s.splice(0, 1, { preserveDrawingBuffer: !0 });
                            }
                            return e.apply(this, [i, ...s]);
                        };
                    });
                    i.push(s);
                } catch (e) {
                    console.error("failed to patch HTMLCanvasElement.prototype.getContext");
                }
                return () => {
                    i.forEach((e) => e());
                };
            }
            function tp(e, t, n, r, o, i, s, a) {
                const c = [],
                    u = Object.getOwnPropertyNames(e);
                for (const s of u)
                    if (!["isContextLost", "canvas", "drawingBufferWidth", "drawingBufferHeight"].includes(s))
                        try {
                            if ("function" != typeof e[s]) continue;
                            const u = Fd(e, s, function (e) {
                                return function (...c) {
                                    const u = e.apply(this, c);
                                    if ((Jd(u, a, this), "tagName" in this.canvas && !jd(this.canvas, r, o, i, !0))) {
                                        const e = Qd(c, a, this),
                                            r = { type: t, property: s, args: e };
                                        n(this.canvas, r);
                                    }
                                    return u;
                                };
                            });
                            c.push(u);
                        } catch (r) {
                            const o = Ld(e, s, {
                                set(e) {
                                    n(this.canvas, { type: t, property: s, args: [e], setter: !0 });
                                },
                            });
                            c.push(o);
                        }
                return c;
            }
            class np {
                reset() {
                    this.pendingCanvasMutations.clear(),
                        this.restoreHandlers.forEach((e) => {
                            try {
                                e();
                            } catch (e) {}
                        }),
                        (this.restoreHandlers = []),
                        (this.windowsSet = new WeakSet()),
                        (this.windows = []),
                        (this.shadowDoms = new Set()),
                        bs([this, "access", (e) => e.worker, "optionalAccess", (e) => e.terminate, "call", (e) => e()]),
                        (this.worker = null),
                        (this.snapshotInProgressMap = new Map()),
                        ((this.options.recordCanvas && "number" == typeof this.options.sampling) || this.options.enableManualSnapshot) && (this.worker = this.initFPSWorker());
                }
                freeze() {
                    this.frozen = !0;
                }
                unfreeze() {
                    this.frozen = !1;
                }
                lock() {
                    this.locked = !0;
                }
                unlock() {
                    this.locked = !1;
                }
                constructor(e) {
                    (this.pendingCanvasMutations = new Map()),
                        (this.rafStamps = { latestId: 0, invokeId: null }),
                        (this.shadowDoms = new Set()),
                        (this.windowsSet = new WeakSet()),
                        (this.windows = []),
                        (this.restoreHandlers = []),
                        (this.frozen = !1),
                        (this.locked = !1),
                        (this.snapshotInProgressMap = new Map()),
                        (this.worker = null),
                        (this.processMutation = (e, t) => {
                            (!(this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId) && this.rafStamps.invokeId) || (this.rafStamps.invokeId = this.rafStamps.latestId),
                                this.pendingCanvasMutations.has(e) || this.pendingCanvasMutations.set(e, []),
                                this.pendingCanvasMutations.get(e).push(t);
                        });
                    const { sampling: t = "all", win: n, blockClass: r, blockSelector: o, unblockSelector: i, maxCanvasSize: s, recordCanvas: a, dataURLOptions: c, errorHandler: u } = e;
                    (this.mutationCb = e.mutationCb),
                        (this.mirror = e.mirror),
                        (this.options = e),
                        u && (Hd = u),
                        ((a && "number" == typeof t) || e.enableManualSnapshot) && (this.worker = this.initFPSWorker()),
                        this.addWindow(n),
                        e.enableManualSnapshot ||
                            Wd(() => {
                                a && "all" === t && (this.startRAFTimestamping(), this.startPendingCanvasMutationFlusher()), a && "number" == typeof t && this.initCanvasFPSObserver(t, r, o, i, s, { dataURLOptions: c });
                            })();
                }
                addWindow(e) {
                    const { sampling: t = "all", blockClass: n, blockSelector: r, unblockSelector: o, recordCanvas: i, enableManualSnapshot: s } = this.options;
                    if (!this.windowsSet.has(e)) {
                        if (s) return this.windowsSet.add(e), void this.windows.push(new WeakRef(e));
                        Wd(() => {
                            if ((i && "all" === t && this.initCanvasMutationObserver(e, n, r, o), i && "number" == typeof t)) {
                                const t = ep(e, n, r, o, !0);
                                this.restoreHandlers.push(() => {
                                    t();
                                });
                            }
                        })(),
                            this.windowsSet.add(e),
                            this.windows.push(new WeakRef(e));
                    }
                }
                addShadowRoot(e) {
                    this.shadowDoms.add(new WeakRef(e));
                }
                resetShadowRoots() {
                    this.shadowDoms = new Set();
                }
                initFPSWorker() {
                    const e = new Worker(
                        (function () {
                            const e = new Blob([
                                'for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t="undefined"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s="";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+"=":r%3==1&&(s=s.substring(0,s.length-2)+"=="),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!("OffscreenCanvas"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+"-"+t;if("OffscreenCanvas"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext("2d");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return""}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext("bitmaprenderer"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:"low"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};',
                            ]);
                            return URL.createObjectURL(e);
                        })()
                    );
                    return (
                        (e.onmessage = (e) => {
                            const t = e.data,
                                { id: n } = t;
                            if ((this.snapshotInProgressMap.set(n, !1), !("base64" in t))) return;
                            const { base64: r, type: o, width: i, height: s } = t;
                            this.mutationCb({
                                id: n,
                                type: zd["2D"],
                                commands: [
                                    { property: "clearRect", args: [0, 0, i, s] },
                                    { property: "drawImage", args: [{ rr_type: "ImageBitmap", args: [{ rr_type: "Blob", data: [{ rr_type: "ArrayBuffer", base64: r }], type: o }] }, 0, 0, i, s] },
                                ],
                            });
                        }),
                        e
                    );
                }
                initCanvasFPSObserver(e, t, n, r, o, i) {
                    const s = this.takeSnapshot(!1, e, t, n, r, o, i.dataURLOptions);
                    this.restoreHandlers.push(() => {
                        cancelAnimationFrame(s);
                    });
                }
                initCanvasMutationObserver(e, t, n, r) {
                    const o = ep(e, t, n, r, !1),
                        i = (function (e, t, n, r, o) {
                            const i = [],
                                s = Object.getOwnPropertyNames(t.CanvasRenderingContext2D.prototype);
                            for (const a of s)
                                try {
                                    if ("function" != typeof t.CanvasRenderingContext2D.prototype[a]) continue;
                                    const s = Fd(t.CanvasRenderingContext2D.prototype, a, function (i) {
                                        return function (...s) {
                                            return (
                                                jd(this.canvas, n, r, o, !0) ||
                                                    qd(() => {
                                                        const n = Qd(s, t, this);
                                                        e(this.canvas, { type: zd["2D"], property: a, args: n });
                                                    }, 0),
                                                i.apply(this, s)
                                            );
                                        };
                                    });
                                    i.push(s);
                                } catch (n) {
                                    const r = Ld(t.CanvasRenderingContext2D.prototype, a, {
                                        set(t) {
                                            e(this.canvas, { type: zd["2D"], property: a, args: [t], setter: !0 });
                                        },
                                    });
                                    i.push(r);
                                }
                            return () => {
                                i.forEach((e) => e());
                            };
                        })(this.processMutation.bind(this), e, t, n, r),
                        s = (function (e, t, n, r, o) {
                            const i = [];
                            return (
                                i.push(...tp(t.WebGLRenderingContext.prototype, zd.WebGL, e, n, r, o, 0, t)),
                                void 0 !== t.WebGL2RenderingContext && i.push(...tp(t.WebGL2RenderingContext.prototype, zd.WebGL2, e, n, r, o, 0, t)),
                                () => {
                                    i.forEach((e) => e());
                                }
                            );
                        })(this.processMutation.bind(this), e, t, n, r, this.mirror);
                    this.restoreHandlers.push(() => {
                        o(), i(), s();
                    });
                }
                snapshot(e) {
                    const { options: t } = this,
                        n = this.takeSnapshot(!0, "all" === t.sampling ? 2 : t.sampling || 2, t.blockClass, t.blockSelector, t.unblockSelector, t.maxCanvasSize, t.dataURLOptions, e);
                    this.restoreHandlers.push(() => {
                        cancelAnimationFrame(n);
                    });
                }
                takeSnapshot(e, t, n, r, o, i, s, a) {
                    const c = 1e3 / t;
                    let u,
                        l = 0;
                    const d = (e) => {
                            if (e) return [e];
                            const t = [],
                                i = (e) => {
                                    e.querySelectorAll("canvas").forEach((e) => {
                                        jd(e, n, r, o, !0) || t.push(e);
                                    });
                                };
                            for (const e of this.windows) {
                                const t = e.deref();
                                t && i(t.document);
                            }
                            for (const e of this.shadowDoms) {
                                const t = e.deref();
                                t && i(t);
                            }
                            return t;
                        },
                        p = (t) => {
                            this.windows.length &&
                                ((l && t - l < c) ||
                                    ((l = t),
                                    d(a).forEach((t) => {
                                        if (!this.mirror.hasNode(t)) return;
                                        const n = this.mirror.getId(t);
                                        if (!this.snapshotInProgressMap.get(n) && t.width && t.height) {
                                            if ((this.snapshotInProgressMap.set(n, !0), !e && ["webgl", "webgl2"].includes(t.__context))) {
                                                const e = t.getContext(t.__context);
                                                !1 === bs([e, "optionalAccess", (e) => e.getContextAttributes, "call", (e) => e(), "optionalAccess", (e) => e.preserveDrawingBuffer]) && e.clear(e.COLOR_BUFFER_BIT);
                                            }
                                            createImageBitmap(t)
                                                .then((e) => {
                                                    bs([
                                                        this,
                                                        "access",
                                                        (e) => e.worker,
                                                        "optionalAccess",
                                                        (e) => e.postMessage,
                                                        "call",
                                                        (r) => r({ id: n, bitmap: e, width: t.width, height: t.height, dataURLOptions: s, maxCanvasSize: i }, [e]),
                                                    ]);
                                                })
                                                .catch((e) => {
                                                    Wd(() => {
                                                        throw e;
                                                    })();
                                                });
                                        }
                                    })),
                                (u = Bd(p)));
                        };
                    return (u = Bd(p)), u;
                }
                startPendingCanvasMutationFlusher() {
                    Bd(() => this.flushPendingCanvasMutations());
                }
                startRAFTimestamping() {
                    const e = (t) => {
                        (this.rafStamps.latestId = t), Bd(e);
                    };
                    Bd(e);
                }
                flushPendingCanvasMutations() {
                    this.pendingCanvasMutations.forEach((e, t) => {
                        const n = this.mirror.getId(t);
                        this.flushPendingCanvasMutationFor(t, n);
                    }),
                        Bd(() => this.flushPendingCanvasMutations());
                }
                flushPendingCanvasMutationFor(e, t) {
                    if (this.frozen || this.locked) return;
                    const n = this.pendingCanvasMutations.get(e);
                    if (!n || -1 === t) return;
                    const r = n.map((e) => {
                            const { type: t, ...n } = e;
                            return n;
                        }),
                        { type: o } = n[0];
                    this.mutationCb({ id: t, type: o, commands: r }), this.pendingCanvasMutations.delete(e);
                }
            }
            const rp = {
                    low: { sampling: { canvas: 1 }, dataURLOptions: { type: "image/webp", quality: 0.25 } },
                    medium: { sampling: { canvas: 2 }, dataURLOptions: { type: "image/webp", quality: 0.4 } },
                    high: { sampling: { canvas: 4 }, dataURLOptions: { type: "image/webp", quality: 0.5 } },
                },
                op = 1280,
                ip = (e = {}) => {
                    const [t, n] = e.maxCanvasSize || [],
                        r = { quality: e.quality || "medium", enableManualSnapshot: e.enableManualSnapshot, maxCanvasSize: [t ? Math.min(t, op) : op, n ? Math.min(n, op) : op] };
                    let o;
                    const i = new Promise((e) => (o = e));
                    return {
                        name: "ReplayCanvas",
                        getOptions() {
                            const { quality: e, enableManualSnapshot: t, maxCanvasSize: n } = r;
                            return {
                                enableManualSnapshot: t,
                                recordCanvas: !0,
                                getCanvasManager: (e) => {
                                    const r = new np({
                                        ...e,
                                        enableManualSnapshot: t,
                                        maxCanvasSize: n,
                                        errorHandler: (e) => {
                                            try {
                                                "object" == typeof e && (e.__rrweb__ = !0);
                                            } catch (e) {}
                                        },
                                    });
                                    return o(r), r;
                                },
                                ...(rp[e || "medium"] || rp.medium),
                            };
                        },
                        async snapshot(e) {
                            (await i).snapshot(e);
                        },
                    };
                },
                sp = x,
                ap = sp.document,
                cp = sp.navigator,
                up = "Report a Bug",
                lp = "widget",
                dp = (e, t = { includeReplay: !0 }) => {
                    if (!e.message) throw new Error("Unable to submit feedback with empty message");
                    const n = Me();
                    if (!n) throw new Error("No client setup, cannot send feedback.");
                    e.tags && Object.keys(e.tags).length && Ee().setTags(e.tags);
                    const r = Nn({ source: "api", url: M(), ...e }, t);
                    return new Promise((e, t) => {
                        const o = setTimeout(() => t("Unable to determine if Feedback was correctly sent."), 5e3),
                            i = n.on("afterSendEvent", (n, s) => {
                                if (n.event_id === r)
                                    return (
                                        clearTimeout(o),
                                        i(),
                                        s && "number" == typeof s.statusCode && s.statusCode >= 200 && s.statusCode < 300 && e(r),
                                        s && "number" == typeof s.statusCode && 0 === s.statusCode
                                            ? t("Unable to send Feedback. This is because of network issues, or because you are using an ad-blocker.")
                                            : t("Unable to send Feedback. This could be because of network issues, or because you are using an ad-blocker")
                                    );
                            });
                    });
                },
                pp = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__;
            function fp(e, t) {
                return {
                    ...e,
                    ...t,
                    tags: { ...e.tags, ...t.tags },
                    onFormOpen: () => {
                        t.onFormOpen && t.onFormOpen(), e.onFormOpen && e.onFormOpen();
                    },
                    onFormClose: () => {
                        t.onFormClose && t.onFormClose(), e.onFormClose && e.onFormClose();
                    },
                    onSubmitSuccess: (n) => {
                        t.onSubmitSuccess && t.onSubmitSuccess(n), e.onSubmitSuccess && e.onSubmitSuccess(n);
                    },
                    onSubmitError: (n) => {
                        t.onSubmitError && t.onSubmitError(n), e.onSubmitError && e.onSubmitError(n);
                    },
                    onFormSubmitted: () => {
                        t.onFormSubmitted && t.onFormSubmitted(), e.onFormSubmitted && e.onFormSubmitted();
                    },
                    themeDark: { ...e.themeDark, ...t.themeDark },
                    themeLight: { ...e.themeLight, ...t.themeLight },
                };
            }
            function hp(e, t) {
                return (
                    Object.entries(t).forEach(([t, n]) => {
                        e.setAttributeNS(null, t, n);
                    }),
                    e
                );
            }
            const mp = 20,
                gp = "http://www.w3.org/2000/svg";
            function vp({ triggerLabel: e, triggerAriaLabel: t, shadow: n }) {
                const r = ap.createElement("button");
                if (
                    ((r.type = "button"),
                    (r.className = "widget__actor"),
                    (r.ariaHidden = "false"),
                    (r.ariaLabel = t || e || up),
                    r.appendChild(
                        (function () {
                            const e = (e) => sp.document.createElementNS(gp, e),
                                t = hp(e("svg"), { width: `${mp}`, height: `${mp}`, viewBox: `0 0 ${mp} ${mp}`, fill: "var(--foreground)" }),
                                n = hp(e("g"), { clipPath: "url(#clip0_57_80)" }),
                                r = hp(e("path"), {
                                    "fill-rule": "evenodd",
                                    "clip-rule": "evenodd",
                                    d:
                                        "M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z",
                                });
                            t.appendChild(n).appendChild(r);
                            const o = e("defs"),
                                i = hp(e("clipPath"), { id: "clip0_57_80" }),
                                s = hp(e("rect"), { width: `${mp}`, height: `${mp}`, fill: "white" });
                            return i.appendChild(s), o.appendChild(i), t.appendChild(o).appendChild(i).appendChild(s), t;
                        })()
                    ),
                    e)
                ) {
                    const t = ap.createElement("span");
                    t.appendChild(ap.createTextNode(e)), r.appendChild(t);
                }
                const o = (function () {
                    const e = ap.createElement("style");
                    return (
                        (e.textContent =
                            '\n.widget__actor {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: var(--page-margin);\n  inset: var(--actor-inset);\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px;\n\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  line-height: 1.14em;\n  text-decoration: none;\n\n  background: var(--actor-background, var(--background));\n  border-radius: var(--actor-border-radius, 1.7em/50%);\n  border: var(--actor-border, var(--border));\n  box-shadow: var(--actor-box-shadow, var(--box-shadow));\n  color: var(--actor-color, var(--foreground));\n  fill: var(--actor-color, var(--foreground));\n  cursor: pointer;\n  opacity: 1;\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n.widget__actor[aria-hidden="true"] {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  transform: translate(0, 16px) scale(0.98);\n}\n\n.widget__actor:hover {\n  background: var(--actor-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n\n.widget__actor svg {\n  width: 1.14em;\n  height: 1.14em;\n}\n\n@media (max-width: 600px) {\n  .widget__actor span {\n    display: none;\n  }\n}\n'),
                        e
                    );
                })();
                return {
                    el: r,
                    appendToDom() {
                        n.appendChild(o), n.appendChild(r);
                    },
                    removeFromDom() {
                        n.removeChild(r), n.removeChild(o);
                    },
                    show() {
                        r.ariaHidden = "false";
                    },
                    hide() {
                        r.ariaHidden = "true";
                    },
                };
            }
            const yp = "rgba(88, 74, 192, 1)",
                _p = {
                    foreground: "#2b2233",
                    background: "#ffffff",
                    accentForeground: "white",
                    accentBackground: yp,
                    successColor: "#268d75",
                    errorColor: "#df3338",
                    border: "1.5px solid rgba(41, 35, 47, 0.13)",
                    boxShadow: "0px 4px 24px 0px rgba(43, 34, 51, 0.12)",
                    outline: "1px auto var(--accent-background)",
                    interactiveFilter: "brightness(95%)",
                },
                bp = {
                    foreground: "#ebe6ef",
                    background: "#29232f",
                    accentForeground: "white",
                    accentBackground: yp,
                    successColor: "#2da98c",
                    errorColor: "#f55459",
                    border: "1.5px solid rgba(235, 230, 239, 0.15)",
                    boxShadow: "0px 4px 24px 0px rgba(43, 34, 51, 0.12)",
                    outline: "1px auto var(--accent-background)",
                    interactiveFilter: "brightness(150%)",
                };
            function wp(e) {
                return `\n  --foreground: ${e.foreground};\n  --background: ${e.background};\n  --accent-foreground: ${e.accentForeground};\n  --accent-background: ${e.accentBackground};\n  --success-color: ${e.successColor};\n  --error-color: ${e.errorColor};\n  --border: ${e.border};\n  --box-shadow: ${e.boxShadow};\n  --outline: ${e.outline};\n  --interactive-filter: ${e.interactiveFilter};\n  `;
            }
            const Sp = ({ lazyLoadIntegration: e, getModalIntegration: t, getScreenshotIntegration: n }) => ({
                id: r = "sentry-feedback",
                autoInject: o = !0,
                showBranding: i = !0,
                isEmailRequired: s = !1,
                isNameRequired: a = !1,
                showEmail: c = !0,
                showName: u = !0,
                enableScreenshot: l = !0,
                useSentryUser: d = { email: "email", name: "username" },
                tags: p,
                colorScheme: f = "system",
                themeLight: h = {},
                themeDark: m = {},
                addScreenshotButtonLabel: g = "Add a screenshot",
                cancelButtonLabel: v = "Cancel",
                confirmButtonLabel: y = "Confirm",
                emailLabel: _ = "Email",
                emailPlaceholder: b = "your.email@example.org",
                formTitle: w = "Report a Bug",
                isRequiredLabel: S = "(required)",
                messageLabel: k = "Description",
                messagePlaceholder: x = "What's the bug? What did you expect?",
                nameLabel: E = "Name",
                namePlaceholder: I = "Your Name",
                removeScreenshotButtonLabel: T = "Remove screenshot",
                submitButtonLabel: C = "Send Bug Report",
                successMessageText: A = "Thank you for your report!",
                triggerLabel: M = up,
                triggerAriaLabel: R = "",
                onFormOpen: O,
                onFormClose: N,
                onSubmitSuccess: P,
                onSubmitError: D,
                onFormSubmitted: F,
            } = {}) => {
                const j = {
                    id: r,
                    autoInject: o,
                    showBranding: i,
                    isEmailRequired: s,
                    isNameRequired: a,
                    showEmail: c,
                    showName: u,
                    enableScreenshot: l,
                    useSentryUser: d,
                    tags: p,
                    colorScheme: f,
                    themeDark: m,
                    themeLight: h,
                    triggerLabel: M,
                    triggerAriaLabel: R,
                    cancelButtonLabel: v,
                    submitButtonLabel: C,
                    confirmButtonLabel: y,
                    formTitle: w,
                    emailLabel: _,
                    emailPlaceholder: b,
                    messageLabel: k,
                    messagePlaceholder: x,
                    nameLabel: E,
                    namePlaceholder: I,
                    successMessageText: A,
                    isRequiredLabel: S,
                    addScreenshotButtonLabel: g,
                    removeScreenshotButtonLabel: T,
                    onFormClose: N,
                    onFormOpen: O,
                    onSubmitError: D,
                    onSubmitSuccess: P,
                    onFormSubmitted: F,
                };
                let $ = null,
                    U = [];
                const B = (e) => {
                        if (!$) {
                            const t = ap.createElement("div");
                            (t.id = String(e.id)),
                                ap.body.appendChild(t),
                                ($ = t.attachShadow({ mode: "open" })),
                                $.appendChild(
                                    (function ({ colorScheme: e, themeDark: t, themeLight: n }) {
                                        const r = ap.createElement("style");
                                        return (
                                            (r.textContent = `\n:host {\n  --font-family: system-ui, 'Helvetica Neue', Arial, sans-serif;\n  --font-size: 14px;\n  --z-index: 100000;\n\n  --page-margin: 16px;\n  --inset: auto 0 0 auto;\n  --actor-inset: var(--inset);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${
                                                "system" !== e ? "color-scheme: only light;" : ""
                                            }\n\n  ${wp("dark" === e ? { ...bp, ...t } : { ..._p, ...n })}\n}\n\n${"system" === e ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${wp({ ...bp, ...t })}\n  }\n}` : ""}\n}\n`),
                                            r
                                        );
                                    })(e)
                                );
                        }
                        return $;
                    },
                    q = async (t, n, r) => {
                        const o = Me(),
                            i = o && o.getIntegrationByName(t);
                        if (i) return i;
                        const s = ((n && n()) || (await e(r)))();
                        return o && o.addIntegration(s), s;
                    },
                    z = async (e) => {
                        const r =
                                e.enableScreenshot &&
                                !(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(cp.userAgent) || (/Macintosh/i.test(cp.userAgent) && cp.maxTouchPoints && cp.maxTouchPoints > 1) || !isSecureContext),
                            [o, i] = await Promise.all([q("FeedbackModal", t, "feedbackModalIntegration"), r ? q("FeedbackScreenshot", n, "feedbackScreenshotIntegration") : void 0]);
                        if (!o) throw (pp && L.error("[Feedback] Missing feedback modal integration. Try using `feedbackSyncIntegration` in your `Sentry.init`."), new Error("[Feedback] Missing feedback modal integration!"));
                        return (
                            r && !i && pp && L.error("[Feedback] Missing feedback screenshot integration. Proceeding without screenshots."),
                            o.createDialog({ options: e, screenshotIntegration: r ? i : void 0, sendFeedback: dp, shadow: B(e) })
                        );
                    },
                    H = (e, t = {}) => {
                        const n = fp(j, t),
                            r = "string" == typeof e ? ap.querySelector(e) : "function" == typeof e.addEventListener ? e : null;
                        if (!r) throw (pp && L.error("[Feedback] Unable to attach to target element"), new Error("Unable to attach to target element"));
                        let o = null;
                        const i = async () => {
                            o ||
                                (o = await z({
                                    ...n,
                                    onFormClose: () => {
                                        o && o.close(), n.onFormClose && n.onFormClose();
                                    },
                                    onFormSubmitted: () => {
                                        o && o.removeFromDom(), n.onFormSubmitted && n.onFormSubmitted();
                                    },
                                })),
                                o.appendToDom(),
                                o.open();
                        };
                        r.addEventListener("click", i);
                        const s = () => {
                            (U = U.filter((e) => e !== s)), o && o.removeFromDom(), (o = null), r.removeEventListener("click", i);
                        };
                        return U.push(s), s;
                    },
                    W = (e = {}) => {
                        const t = fp(j, e),
                            n = B(t),
                            r = vp({ triggerLabel: t.triggerLabel, triggerAriaLabel: t.triggerAriaLabel, shadow: n });
                        return (
                            H(r.el, {
                                ...t,
                                onFormOpen() {
                                    r.hide();
                                },
                                onFormClose() {
                                    r.show();
                                },
                                onFormSubmitted() {
                                    r.show();
                                },
                            }),
                            r
                        );
                    };
                return {
                    name: "Feedback",
                    setupOnce() {
                        Ss() && j.autoInject && ("loading" === ap.readyState ? ap.addEventListener("DOMContentLoaded", () => W().appendToDom()) : W().appendToDom());
                    },
                    attachTo: H,
                    createWidget(e = {}) {
                        const t = W(fp(j, e));
                        return t.appendToDom(), t;
                    },
                    createForm: async (e = {}) => z(fp(j, e)),
                    remove() {
                        $ && ($.parentElement && $.parentElement.remove(), ($ = null)), U.forEach((e) => e()), (U = []);
                    },
                };
            };
            function kp() {
                const e = Me();
                return e && e.getIntegrationByName("Feedback");
            }
            var xp,
                Ep,
                Ip,
                Tp,
                Cp,
                Ap,
                Mp,
                Rp = {},
                Op = [],
                Np = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,
                Pp = Array.isArray;
            function Dp(e, t) {
                for (var n in t) e[n] = t[n];
                return e;
            }
            function Lp(e) {
                var t = e.parentNode;
                t && t.removeChild(e);
            }
            function Fp(e, t, n) {
                var r,
                    o,
                    i,
                    s = {};
                for (i in t) "key" == i ? (r = t[i]) : "ref" == i ? (o = t[i]) : (s[i] = t[i]);
                if ((arguments.length > 2 && (s.children = arguments.length > 3 ? xp.call(arguments, 2) : n), "function" == typeof e && null != e.defaultProps)) for (i in e.defaultProps) void 0 === s[i] && (s[i] = e.defaultProps[i]);
                return jp(e, s, r, o, null);
            }
            function jp(e, t, n, r, o) {
                var i = { type: e, props: t, key: n, ref: r, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: null == o ? ++Ip : o, __i: -1, __u: 0 };
                return null == o && null != Ep.vnode && Ep.vnode(i), i;
            }
            function $p(e) {
                return e.children;
            }
            function Up(e, t) {
                (this.props = e), (this.context = t);
            }
            function Bp(e, t) {
                if (null == t) return e.__ ? Bp(e.__, e.__i + 1) : null;
                for (var n; t < e.__k.length; t++) if (null != (n = e.__k[t]) && null != n.__e) return n.__e;
                return "function" == typeof e.type ? Bp(e) : null;
            }
            function qp(e, t, n) {
                var r,
                    o = e.__v,
                    i = o.__e,
                    s = e.__P;
                if (s)
                    return (
                        ((r = Dp({}, o)).__v = o.__v + 1),
                        Ep.vnode && Ep.vnode(r),
                        Zp(s, r, o, e.__n, void 0 !== s.ownerSVGElement, 32 & o.__u ? [i] : null, t, null == i ? Bp(o) : i, !!(32 & o.__u), n),
                        (r.__.__k[r.__i] = r),
                        (r.__d = void 0),
                        r.__e != i && zp(r),
                        r
                    );
            }
            function zp(e) {
                var t, n;
                if (null != (e = e.__) && null != e.__c) {
                    for (e.__e = e.__c.base = null, t = 0; t < e.__k.length; t++)
                        if (null != (n = e.__k[t]) && null != n.__e) {
                            e.__e = e.__c.base = n.__e;
                            break;
                        }
                    return zp(e);
                }
            }
            function Hp(e) {
                ((!e.__d && (e.__d = !0) && Tp.push(e) && !Wp.__r++) || Cp !== Ep.debounceRendering) && ((Cp = Ep.debounceRendering) || Ap)(Wp);
            }
            function Wp() {
                var e,
                    t,
                    n,
                    r = [],
                    o = [];
                for (Tp.sort(Mp); (e = Tp.shift()); ) e.__d && ((n = Tp.length), (t = qp(e, r, o) || t), 0 === n || Tp.length > n ? (ef(r, t, o), (o.length = r.length = 0), (t = void 0), Tp.sort(Mp)) : t && Ep.__c && Ep.__c(t, Op));
                t && ef(r, t, o), (Wp.__r = 0);
            }
            function Vp(e, t, n, r, o, i, s, a, c, u, l) {
                var d,
                    p,
                    f,
                    h,
                    m,
                    g = (r && r.__k) || Op,
                    v = t.length;
                for (
                    n.__d = c,
                        (function (e, t, n) {
                            var r,
                                o,
                                i,
                                s,
                                a,
                                c = t.length,
                                u = n.length,
                                l = u,
                                d = 0;
                            for (e.__k = [], r = 0; r < c; r++)
                                null !=
                                (o = e.__k[r] =
                                    null == (o = t[r]) || "boolean" == typeof o || "function" == typeof o
                                        ? null
                                        : "string" == typeof o || "number" == typeof o || "bigint" == typeof o || o.constructor == String
                                        ? jp(null, o, null, null, o)
                                        : Pp(o)
                                        ? jp($p, { children: o }, null, null, null)
                                        : void 0 === o.constructor && o.__b > 0
                                        ? jp(o.type, o.props, o.key, o.ref ? o.ref : null, o.__v)
                                        : o)
                                    ? ((o.__ = e),
                                      (o.__b = e.__b + 1),
                                      (a = Gp(o, n, (s = r + d), l)),
                                      (o.__i = a),
                                      (i = null),
                                      -1 !== a && (l--, (i = n[a]) && (i.__u |= 131072)),
                                      null == i || null === i.__v
                                          ? (-1 == a && d--, "function" != typeof o.type && (o.__u |= 65536))
                                          : a !== s && (a === s + 1 ? d++ : a > s ? (l > c - s ? (d += a - s) : d--) : (d = a < s && a == s - 1 ? a - s : 0), a !== r + d && (o.__u |= 65536)))
                                    : (i = n[r]) && null == i.key && i.__e && (i.__e == e.__d && (e.__d = Bp(i)), rf(i, i, !1), (n[r] = null), l--);
                            if (l) for (r = 0; r < u; r++) null != (i = n[r]) && !(131072 & i.__u) && (i.__e == e.__d && (e.__d = Bp(i)), rf(i, i));
                        })(n, t, g),
                        c = n.__d,
                        d = 0;
                    d < v;
                    d++
                )
                    null != (f = n.__k[d]) &&
                        "boolean" != typeof f &&
                        "function" != typeof f &&
                        ((p = -1 === f.__i ? Rp : g[f.__i] || Rp),
                        (f.__i = d),
                        Zp(e, f, p, o, i, s, a, c, u, l),
                        (h = f.__e),
                        f.ref && p.ref != f.ref && (p.ref && nf(p.ref, null, f), l.push(f.ref, f.__c || h, f)),
                        null == m && null != h && (m = h),
                        65536 & f.__u || p.__k === f.__k ? (c = Yp(f, c, e)) : "function" == typeof f.type && void 0 !== f.__d ? (c = f.__d) : h && (c = h.nextSibling),
                        (f.__d = void 0),
                        (f.__u &= -196609));
                (n.__d = c), (n.__e = m);
            }
            function Yp(e, t, n) {
                var r, o;
                if ("function" == typeof e.type) {
                    for (r = e.__k, o = 0; r && o < r.length; o++) r[o] && ((r[o].__ = e), (t = Yp(r[o], t, n)));
                    return t;
                }
                e.__e != t && (n.insertBefore(e.__e, t || null), (t = e.__e));
                do {
                    t = t && t.nextSibling;
                } while (null != t && 8 === t.nodeType);
                return t;
            }
            function Gp(e, t, n, r) {
                var o = e.key,
                    i = e.type,
                    s = n - 1,
                    a = n + 1,
                    c = t[n];
                if (null === c || (c && o == c.key && i === c.type)) return n;
                if (r > (null == c || 131072 & c.__u ? 0 : 1))
                    for (; s >= 0 || a < t.length; ) {
                        if (s >= 0) {
                            if ((c = t[s]) && !(131072 & c.__u) && o == c.key && i === c.type) return s;
                            s--;
                        }
                        if (a < t.length) {
                            if ((c = t[a]) && !(131072 & c.__u) && o == c.key && i === c.type) return a;
                            a++;
                        }
                    }
                return -1;
            }
            function Kp(e, t, n) {
                "-" === t[0] ? e.setProperty(t, null == n ? "" : n) : (e[t] = null == n ? "" : "number" != typeof n || Np.test(t) ? n : n + "px");
            }
            function Jp(e, t, n, r, o) {
                var i;
                e: if ("style" === t)
                    if ("string" == typeof n) e.style.cssText = n;
                    else {
                        if (("string" == typeof r && (e.style.cssText = r = ""), r)) for (t in r) (n && t in n) || Kp(e.style, t, "");
                        if (n) for (t in n) (r && n[t] === r[t]) || Kp(e.style, t, n[t]);
                    }
                else if ("o" === t[0] && "n" === t[1])
                    (i = t !== (t = t.replace(/(PointerCapture)$|Capture$/i, "$1"))),
                        (t = t.toLowerCase() in e ? t.toLowerCase().slice(2) : t.slice(2)),
                        e.l || (e.l = {}),
                        (e.l[t + i] = n),
                        n ? (r ? (n.u = r.u) : ((n.u = Date.now()), e.addEventListener(t, i ? Qp : Xp, i))) : e.removeEventListener(t, i ? Qp : Xp, i);
                else {
                    if (o) t = t.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
                    else if ("width" !== t && "height" !== t && "href" !== t && "list" !== t && "form" !== t && "tabIndex" !== t && "download" !== t && "rowSpan" !== t && "colSpan" !== t && "role" !== t && t in e)
                        try {
                            e[t] = null == n ? "" : n;
                            break e;
                        } catch (e) {}
                    "function" == typeof n || (null == n || (!1 === n && "-" !== t[4]) ? e.removeAttribute(t) : e.setAttribute(t, n));
                }
            }
            function Xp(e) {
                if (this.l) {
                    var t = this.l[e.type + !1];
                    if (e.t) {
                        if (e.t <= t.u) return;
                    } else e.t = Date.now();
                    return t(Ep.event ? Ep.event(e) : e);
                }
            }
            function Qp(e) {
                if (this.l) return this.l[e.type + !0](Ep.event ? Ep.event(e) : e);
            }
            function Zp(e, t, n, r, o, i, s, a, c, u) {
                var l,
                    d,
                    p,
                    f,
                    h,
                    m,
                    g,
                    v,
                    y,
                    _,
                    b,
                    w,
                    S,
                    k,
                    x,
                    E = t.type;
                if (void 0 !== t.constructor) return null;
                128 & n.__u && ((c = !!(32 & n.__u)), (i = [(a = t.__e = n.__e)])), (l = Ep.__b) && l(t);
                e: if ("function" == typeof E)
                    try {
                        if (
                            ((v = t.props),
                            (y = (l = E.contextType) && r[l.__c]),
                            (_ = l ? (y ? y.props.value : l.__) : r),
                            n.__c
                                ? (g = (d = t.__c = n.__c).__ = d.__E)
                                : ("prototype" in E && E.prototype.render ? (t.__c = d = new E(v, _)) : ((t.__c = d = new Up(v, _)), (d.constructor = E), (d.render = of)),
                                  y && y.sub(d),
                                  (d.props = v),
                                  d.state || (d.state = {}),
                                  (d.context = _),
                                  (d.__n = r),
                                  (p = d.__d = !0),
                                  (d.__h = []),
                                  (d._sb = [])),
                            null == d.__s && (d.__s = d.state),
                            null != E.getDerivedStateFromProps && (d.__s == d.state && (d.__s = Dp({}, d.__s)), Dp(d.__s, E.getDerivedStateFromProps(v, d.__s))),
                            (f = d.props),
                            (h = d.state),
                            (d.__v = t),
                            p)
                        )
                            null == E.getDerivedStateFromProps && null != d.componentWillMount && d.componentWillMount(), null != d.componentDidMount && d.__h.push(d.componentDidMount);
                        else {
                            if (
                                (null == E.getDerivedStateFromProps && v !== f && null != d.componentWillReceiveProps && d.componentWillReceiveProps(v, _),
                                !d.__e && ((null != d.shouldComponentUpdate && !1 === d.shouldComponentUpdate(v, d.__s, _)) || t.__v === n.__v))
                            ) {
                                for (
                                    t.__v !== n.__v && ((d.props = v), (d.state = d.__s), (d.__d = !1)),
                                        t.__e = n.__e,
                                        t.__k = n.__k,
                                        t.__k.forEach(function (e) {
                                            e && (e.__ = t);
                                        }),
                                        b = 0;
                                    b < d._sb.length;
                                    b++
                                )
                                    d.__h.push(d._sb[b]);
                                (d._sb = []), d.__h.length && s.push(d);
                                break e;
                            }
                            null != d.componentWillUpdate && d.componentWillUpdate(v, d.__s, _),
                                null != d.componentDidUpdate &&
                                    d.__h.push(function () {
                                        d.componentDidUpdate(f, h, m);
                                    });
                        }
                        if (((d.context = _), (d.props = v), (d.__P = e), (d.__e = !1), (w = Ep.__r), (S = 0), "prototype" in E && E.prototype.render)) {
                            for (d.state = d.__s, d.__d = !1, w && w(t), l = d.render(d.props, d.state, d.context), k = 0; k < d._sb.length; k++) d.__h.push(d._sb[k]);
                            d._sb = [];
                        } else
                            do {
                                (d.__d = !1), w && w(t), (l = d.render(d.props, d.state, d.context)), (d.state = d.__s);
                            } while (d.__d && ++S < 25);
                        (d.state = d.__s),
                            null != d.getChildContext && (r = Dp(Dp({}, r), d.getChildContext())),
                            p || null == d.getSnapshotBeforeUpdate || (m = d.getSnapshotBeforeUpdate(f, h)),
                            Vp(e, Pp((x = null != l && l.type === $p && null == l.key ? l.props.children : l)) ? x : [x], t, n, r, o, i, s, a, c, u),
                            (d.base = t.__e),
                            (t.__u &= -161),
                            d.__h.length && s.push(d),
                            g && (d.__E = d.__ = null);
                    } catch (e) {
                        (t.__v = null), c || null != i ? ((t.__e = a), (t.__u |= c ? 160 : 32), (i[i.indexOf(a)] = null)) : ((t.__e = n.__e), (t.__k = n.__k)), Ep.__e(e, t, n);
                    }
                else null == i && t.__v === n.__v ? ((t.__k = n.__k), (t.__e = n.__e)) : (t.__e = tf(n.__e, t, n, r, o, i, s, c, u));
                (l = Ep.diffed) && l(t);
            }
            function ef(e, t, n) {
                for (var r = 0; r < n.length; r++) nf(n[r], n[++r], n[++r]);
                Ep.__c && Ep.__c(t, e),
                    e.some(function (t) {
                        try {
                            (e = t.__h),
                                (t.__h = []),
                                e.some(function (e) {
                                    e.call(t);
                                });
                        } catch (e) {
                            Ep.__e(e, t.__v);
                        }
                    });
            }
            function tf(e, t, n, r, o, i, s, a, c) {
                var u,
                    l,
                    d,
                    p,
                    f,
                    h,
                    m,
                    g = n.props,
                    v = t.props,
                    y = t.type;
                if (("svg" === y && (o = !0), null != i))
                    for (u = 0; u < i.length; u++)
                        if ((f = i[u]) && "setAttribute" in f == !!y && (y ? f.localName === y : 3 === f.nodeType)) {
                            (e = f), (i[u] = null);
                            break;
                        }
                if (null == e) {
                    if (null === y) return document.createTextNode(v);
                    (e = o ? document.createElementNS("http://www.w3.org/2000/svg", y) : document.createElement(y, v.is && v)), (i = null), (a = !1);
                }
                if (null === y) g === v || (a && e.data === v) || (e.data = v);
                else {
                    if (((i = i && xp.call(e.childNodes)), (g = n.props || Rp), !a && null != i)) for (g = {}, u = 0; u < e.attributes.length; u++) g[(f = e.attributes[u]).name] = f.value;
                    for (u in g) (f = g[u]), "children" == u || ("dangerouslySetInnerHTML" == u ? (d = f) : "key" === u || u in v || Jp(e, u, null, f, o));
                    for (u in v)
                        (f = v[u]),
                            "children" == u ? (p = f) : "dangerouslySetInnerHTML" == u ? (l = f) : "value" == u ? (h = f) : "checked" == u ? (m = f) : "key" === u || (a && "function" != typeof f) || g[u] === f || Jp(e, u, f, g[u], o);
                    if (l) a || (d && (l.__html === d.__html || l.__html === e.innerHTML)) || (e.innerHTML = l.__html), (t.__k = []);
                    else if ((d && (e.innerHTML = ""), Vp(e, Pp(p) ? p : [p], t, n, r, o && "foreignObject" !== y, i, s, i ? i[0] : n.__k && Bp(n, 0), a, c), null != i)) for (u = i.length; u--; ) null != i[u] && Lp(i[u]);
                    a || ((u = "value"), void 0 !== h && (h !== e[u] || ("progress" === y && !h) || ("option" === y && h !== g[u])) && Jp(e, u, h, g[u], !1), (u = "checked"), void 0 !== m && m !== e[u] && Jp(e, u, m, g[u], !1));
                }
                return e;
            }
            function nf(e, t, n) {
                try {
                    "function" == typeof e ? e(t) : (e.current = t);
                } catch (e) {
                    Ep.__e(e, n);
                }
            }
            function rf(e, t, n) {
                var r, o;
                if ((Ep.unmount && Ep.unmount(e), (r = e.ref) && ((r.current && r.current !== e.__e) || nf(r, null, t)), null != (r = e.__c))) {
                    if (r.componentWillUnmount)
                        try {
                            r.componentWillUnmount();
                        } catch (e) {
                            Ep.__e(e, t);
                        }
                    (r.base = r.__P = null), (e.__c = void 0);
                }
                if ((r = e.__k)) for (o = 0; o < r.length; o++) r[o] && rf(r[o], t, n || "function" != typeof e.type);
                n || null == e.__e || Lp(e.__e), (e.__ = e.__e = e.__d = void 0);
            }
            function of(e, t, n) {
                return this.constructor(e, n);
            }
            (xp = Op.slice),
                (Ep = {
                    __e: function (e, t, n, r) {
                        for (var o, i, s; (t = t.__); )
                            if ((o = t.__c) && !o.__)
                                try {
                                    if (
                                        ((i = o.constructor) && null != i.getDerivedStateFromError && (o.setState(i.getDerivedStateFromError(e)), (s = o.__d)),
                                        null != o.componentDidCatch && (o.componentDidCatch(e, r || {}), (s = o.__d)),
                                        s)
                                    )
                                        return (o.__E = o);
                                } catch (t) {
                                    e = t;
                                }
                        throw e;
                    },
                }),
                (Ip = 0),
                (Up.prototype.setState = function (e, t) {
                    var n;
                    (n = null != this.__s && this.__s !== this.state ? this.__s : (this.__s = Dp({}, this.state))),
                        "function" == typeof e && (e = e(Dp({}, n), this.props)),
                        e && Dp(n, e),
                        null != e && this.__v && (t && this._sb.push(t), Hp(this));
                }),
                (Up.prototype.forceUpdate = function (e) {
                    this.__v && ((this.__e = !0), e && this.__h.push(e), Hp(this));
                }),
                (Up.prototype.render = $p),
                (Tp = []),
                (Ap = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout),
                (Mp = function (e, t) {
                    return e.__v.__b - t.__v.__b;
                }),
                (Wp.__r = 0);
            var sf,
                af,
                cf,
                uf,
                lf = 0,
                df = [],
                pf = [],
                ff = Ep,
                hf = ff.__b,
                mf = ff.__r,
                gf = ff.diffed,
                vf = ff.__c,
                yf = ff.unmount,
                _f = ff.__;
            function bf(e, t) {
                ff.__h && ff.__h(af, e, lf || t), (lf = 0);
                var n = af.__H || (af.__H = { __: [], __h: [] });
                return e >= n.__.length && n.__.push({ __V: pf }), n.__[e];
            }
            function wf(e) {
                return (lf = 1), Sf(Of, e);
            }
            function Sf(e, t, n) {
                var r = bf(sf++, 2);
                if (
                    ((r.t = e),
                    !r.__c &&
                        ((r.__ = [
                            n ? n(t) : Of(void 0, t),
                            function (e) {
                                var t = r.__N ? r.__N[0] : r.__[0],
                                    n = r.t(t, e);
                                t !== n && ((r.__N = [n, r.__[1]]), r.__c.setState({}));
                            },
                        ]),
                        (r.__c = af),
                        !af.u))
                ) {
                    var o = function (e, t, n) {
                        if (!r.__c.__H) return !0;
                        var o = r.__c.__H.__.filter(function (e) {
                            return !!e.__c;
                        });
                        if (
                            o.every(function (e) {
                                return !e.__N;
                            })
                        )
                            return !i || i.call(this, e, t, n);
                        var s = !1;
                        return (
                            o.forEach(function (e) {
                                if (e.__N) {
                                    var t = e.__[0];
                                    (e.__ = e.__N), (e.__N = void 0), t !== e.__[0] && (s = !0);
                                }
                            }),
                            !(!s && r.__c.props === e) && (!i || i.call(this, e, t, n))
                        );
                    };
                    af.u = !0;
                    var i = af.shouldComponentUpdate,
                        s = af.componentWillUpdate;
                    (af.componentWillUpdate = function (e, t, n) {
                        if (this.__e) {
                            var r = i;
                            (i = void 0), o(e, t, n), (i = r);
                        }
                        s && s.call(this, e, t, n);
                    }),
                        (af.shouldComponentUpdate = o);
                }
                return r.__N || r.__;
            }
            function kf(e, t) {
                var n = bf(sf++, 4);
                !ff.__s && Rf(n.__H, t) && ((n.__ = e), (n.i = t), af.__h.push(n));
            }
            function xf(e, t) {
                var n = bf(sf++, 7);
                return Rf(n.__H, t) ? ((n.__V = e()), (n.i = t), (n.__h = e), n.__V) : n.__;
            }
            function Ef(e, t) {
                return (
                    (lf = 8),
                    xf(function () {
                        return e;
                    }, t)
                );
            }
            function If() {
                for (var e; (e = df.shift()); )
                    if (e.__P && e.__H)
                        try {
                            e.__H.__h.forEach(Af), e.__H.__h.forEach(Mf), (e.__H.__h = []);
                        } catch (t) {
                            (e.__H.__h = []), ff.__e(t, e.__v);
                        }
            }
            (ff.__b = function (e) {
                (af = null), hf && hf(e);
            }),
                (ff.__ = function (e, t) {
                    t.__k && t.__k.__m && (e.__m = t.__k.__m), _f && _f(e, t);
                }),
                (ff.__r = function (e) {
                    mf && mf(e), (sf = 0);
                    var t = (af = e.__c).__H;
                    t &&
                        (cf === af
                            ? ((t.__h = []),
                              (af.__h = []),
                              t.__.forEach(function (e) {
                                  e.__N && (e.__ = e.__N), (e.__V = pf), (e.__N = e.i = void 0);
                              }))
                            : (t.__h.forEach(Af), t.__h.forEach(Mf), (t.__h = []), (sf = 0))),
                        (cf = af);
                }),
                (ff.diffed = function (e) {
                    gf && gf(e);
                    var t = e.__c;
                    t &&
                        t.__H &&
                        (t.__H.__h.length && ((1 !== df.push(t) && uf === ff.requestAnimationFrame) || ((uf = ff.requestAnimationFrame) || Cf)(If)),
                        t.__H.__.forEach(function (e) {
                            e.i && (e.__H = e.i), e.__V !== pf && (e.__ = e.__V), (e.i = void 0), (e.__V = pf);
                        })),
                        (cf = af = null);
                }),
                (ff.__c = function (e, t) {
                    t.some(function (e) {
                        try {
                            e.__h.forEach(Af),
                                (e.__h = e.__h.filter(function (e) {
                                    return !e.__ || Mf(e);
                                }));
                        } catch (n) {
                            t.some(function (e) {
                                e.__h && (e.__h = []);
                            }),
                                (t = []),
                                ff.__e(n, e.__v);
                        }
                    }),
                        vf && vf(e, t);
                }),
                (ff.unmount = function (e) {
                    yf && yf(e);
                    var t,
                        n = e.__c;
                    n &&
                        n.__H &&
                        (n.__H.__.forEach(function (e) {
                            try {
                                Af(e);
                            } catch (e) {
                                t = e;
                            }
                        }),
                        (n.__H = void 0),
                        t && ff.__e(t, n.__v));
                });
            var Tf = "function" == typeof requestAnimationFrame;
            function Cf(e) {
                var t,
                    n = function () {
                        clearTimeout(r), Tf && cancelAnimationFrame(t), setTimeout(e);
                    },
                    r = setTimeout(n, 100);
                Tf && (t = requestAnimationFrame(n));
            }
            function Af(e) {
                var t = af,
                    n = e.__c;
                "function" == typeof n && ((e.__c = void 0), n()), (af = t);
            }
            function Mf(e) {
                var t = af;
                (e.__c = e.__()), (af = t);
            }
            function Rf(e, t) {
                return (
                    !e ||
                    e.length !== t.length ||
                    t.some(function (t, n) {
                        return t !== e[n];
                    })
                );
            }
            function Of(e, t) {
                return "function" == typeof t ? t(e) : t;
            }
            const Nf = {
                    __proto__: null,
                    useCallback: Ef,
                    useContext: function (e) {
                        var t = af.context[e.__c],
                            n = bf(sf++, 9);
                        return (n.c = e), t ? (null == n.__ && ((n.__ = !0), t.sub(af)), t.props.value) : e.__;
                    },
                    useDebugValue: function (e, t) {
                        ff.useDebugValue && ff.useDebugValue(t ? t(e) : e);
                    },
                    useEffect: function (e, t) {
                        var n = bf(sf++, 3);
                        !ff.__s && Rf(n.__H, t) && ((n.__ = e), (n.i = t), af.__H.__h.push(n));
                    },
                    useErrorBoundary: function (e) {
                        var t = bf(sf++, 10),
                            n = wf();
                        return (
                            (t.__ = e),
                            af.componentDidCatch ||
                                (af.componentDidCatch = function (e, r) {
                                    t.__ && t.__(e, r), n[1](e);
                                }),
                            [
                                n[0],
                                function () {
                                    n[1](void 0);
                                },
                            ]
                        );
                    },
                    useId: function () {
                        var e = bf(sf++, 11);
                        if (!e.__) {
                            for (var t = af.__v; null !== t && !t.__m && null !== t.__; ) t = t.__;
                            var n = t.__m || (t.__m = [0, 0]);
                            e.__ = "P" + n[0] + "-" + n[1]++;
                        }
                        return e.__;
                    },
                    useImperativeHandle: function (e, t, n) {
                        (lf = 6),
                            kf(
                                function () {
                                    return "function" == typeof e
                                        ? (e(t()),
                                          function () {
                                              return e(null);
                                          })
                                        : e
                                        ? ((e.current = t()),
                                          function () {
                                              return (e.current = null);
                                          })
                                        : void 0;
                                },
                                null == n ? n : n.concat(e)
                            );
                    },
                    useLayoutEffect: kf,
                    useMemo: xf,
                    useReducer: Sf,
                    useRef: function (e) {
                        return (
                            (lf = 5),
                            xf(function () {
                                return { current: e };
                            }, [])
                        );
                    },
                    useState: wf,
                },
                Pf = "http://www.w3.org/2000/svg";
            function Df() {
                const e = (e) => ap.createElementNS(Pf, e),
                    t = hp(e("svg"), { width: "32", height: "30", viewBox: "0 0 72 66", fill: "inherit" }),
                    n = hp(e("path"), {
                        transform: "translate(11, 11)",
                        d:
                            "M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z",
                    });
                return t.appendChild(n), t;
            }
            const Lf = "/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/DialogHeader.tsx";
            function Ff({ options: e }) {
                const t = xf(() => ({ __html: Df().outerHTML }), []);
                return Fp(
                    "h2",
                    { class: "dialog__header", __self: this, __source: { fileName: Lf, lineNumber: 16 } },
                    e.formTitle,
                    e.showBranding
                        ? Fp("a", {
                              class: "brand-link",
                              target: "_blank",
                              href: "https://sentry.io/welcome/",
                              title: "Powered by Sentry",
                              rel: "noopener noreferrer",
                              dangerouslySetInnerHTML: t,
                              __self: this,
                              __source: { fileName: Lf, lineNumber: 19 },
                          })
                        : null
                );
            }
            const jf = "/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/Form.tsx";
            function $f(e, t) {
                const n = e.get(t);
                return "string" == typeof n ? n.trim() : "";
            }
            function Uf({ options: e, defaultEmail: t, defaultName: n, onFormClose: r, onSubmit: o, onSubmitSuccess: i, onSubmitError: s, showEmail: a, showName: c, screenshotInput: u }) {
                const {
                        tags: l,
                        addScreenshotButtonLabel: d,
                        removeScreenshotButtonLabel: p,
                        cancelButtonLabel: f,
                        emailLabel: h,
                        emailPlaceholder: m,
                        isEmailRequired: g,
                        isNameRequired: v,
                        messageLabel: y,
                        messagePlaceholder: _,
                        nameLabel: b,
                        namePlaceholder: w,
                        submitButtonLabel: S,
                        isRequiredLabel: k,
                    } = e,
                    [x, E] = wf(null),
                    [I, T] = wf(!1),
                    C = u && u.input,
                    [A, M] = wf(null),
                    R = Ef((e) => {
                        M(e), T(!1);
                    }, []),
                    O = Ef(
                        (e) => {
                            const t = (function (e, t) {
                                const n = [];
                                return t.isNameRequired && !e.name && n.push(t.nameLabel), t.isEmailRequired && !e.email && n.push(t.emailLabel), e.message || n.push(t.messageLabel), n;
                            })(e, { emailLabel: h, isEmailRequired: g, isNameRequired: v, messageLabel: y, nameLabel: b });
                            return t.length > 0 ? E(`Please enter in the following required fields: ${t.join(", ")}`) : E(null), 0 === t.length;
                        },
                        [h, g, v, y, b]
                    ),
                    N = Ef(
                        async (e) => {
                            try {
                                if ((e.preventDefault(), !(e.target instanceof HTMLFormElement))) return;
                                const t = new FormData(e.target),
                                    n = await (u && I ? u.value() : void 0),
                                    r = { name: $f(t, "name"), email: $f(t, "email"), message: $f(t, "message"), attachments: n ? [n] : void 0 };
                                if (!O(r)) return;
                                try {
                                    await o({ name: r.name, email: r.email, message: r.message, source: lp, tags: l }, { attachments: r.attachments }), i(r);
                                } catch (e) {
                                    pp && L.error(e), E(e), s(e);
                                }
                            } catch (e) {}
                        },
                        [u && I, i, s]
                    );
                return Fp(
                    "form",
                    { class: "form", onSubmit: N, __self: this, __source: { fileName: jf, lineNumber: 144 } },
                    C && I ? Fp(C, { onError: R, __self: this, __source: { fileName: jf, lineNumber: 146 } }) : null,
                    Fp(
                        "div",
                        { class: "form__right", "data-sentry-feedback": !0, __self: this, __source: { fileName: jf, lineNumber: 149 } },
                        Fp(
                            "div",
                            { class: "form__top", __self: this, __source: { fileName: jf, lineNumber: 150 } },
                            x ? Fp("div", { class: "form__error-container", __self: this, __source: { fileName: jf, lineNumber: 151 } }, x) : null,
                            c
                                ? Fp(
                                      "label",
                                      { for: "name", class: "form__label", __self: this, __source: { fileName: jf, lineNumber: 154 } },
                                      Fp(Bf, { label: b, isRequiredLabel: k, isRequired: v, __self: this, __source: { fileName: jf, lineNumber: 155 } }),
                                      Fp("input", { class: "form__input", defaultValue: n, id: "name", name: "name", placeholder: w, required: v, type: "text", __self: this, __source: { fileName: jf, lineNumber: 156 } })
                                  )
                                : Fp("input", { "aria-hidden": !0, value: n, name: "name", type: "hidden", __self: this, __source: { fileName: jf, lineNumber: 167 } }),
                            a
                                ? Fp(
                                      "label",
                                      { for: "email", class: "form__label", __self: this, __source: { fileName: jf, lineNumber: 171 } },
                                      Fp(Bf, { label: h, isRequiredLabel: k, isRequired: g, __self: this, __source: { fileName: jf, lineNumber: 172 } }),
                                      Fp("input", { class: "form__input", defaultValue: t, id: "email", name: "email", placeholder: m, required: g, type: "email", __self: this, __source: { fileName: jf, lineNumber: 173 } })
                                  )
                                : Fp("input", { "aria-hidden": !0, value: t, name: "email", type: "hidden", __self: this, __source: { fileName: jf, lineNumber: 184 } }),
                            Fp(
                                "label",
                                { for: "message", class: "form__label", __self: this, __source: { fileName: jf, lineNumber: 187 } },
                                Fp(Bf, { label: y, isRequiredLabel: k, isRequired: !0, __self: this, __source: { fileName: jf, lineNumber: 188 } }),
                                Fp("textarea", { autoFocus: !0, class: "form__input form__input--textarea", id: "message", name: "message", placeholder: _, required: !0, rows: 5, __self: this, __source: { fileName: jf, lineNumber: 189 } })
                            ),
                            C
                                ? Fp(
                                      "label",
                                      { for: "screenshot", class: "form__label", __self: this, __source: { fileName: jf, lineNumber: 201 } },
                                      Fp(
                                          "button",
                                          {
                                              class: "btn btn--default",
                                              type: "button",
                                              onClick: () => {
                                                  M(null), T((e) => !e);
                                              },
                                              __self: this,
                                              __source: { fileName: jf, lineNumber: 202 },
                                          },
                                          I ? p : d
                                      ),
                                      A ? Fp("div", { class: "form__error-container", __self: this, __source: { fileName: jf, lineNumber: 212 } }, A.message) : null
                                  )
                                : null
                        ),
                        Fp(
                            "div",
                            { class: "btn-group", __self: this, __source: { fileName: jf, lineNumber: 216 } },
                            Fp("button", { class: "btn btn--primary", type: "submit", __self: this, __source: { fileName: jf, lineNumber: 217 } }, S),
                            Fp("button", { class: "btn btn--default", type: "button", onClick: r, __self: this, __source: { fileName: jf, lineNumber: 220 } }, f)
                        )
                    )
                );
            }
            function Bf({ label: e, isRequired: t, isRequiredLabel: n }) {
                return Fp(
                    "span",
                    { class: "form__label__text", __self: this, __source: { fileName: jf, lineNumber: 239 } },
                    e,
                    t && Fp("span", { class: "form__label__text--required", __self: this, __source: { fileName: jf, lineNumber: 241 } }, n)
                );
            }
            const qf = 16,
                zf = 17,
                Hf = "http://www.w3.org/2000/svg";
            function Wf() {
                const e = (e) => sp.document.createElementNS(Hf, e),
                    t = hp(e("svg"), { width: `${qf}`, height: `${zf}`, viewBox: `0 0 ${qf} ${zf}`, fill: "inherit" }),
                    n = hp(e("g"), { clipPath: "url(#clip0_57_156)" }),
                    r = hp(e("path"), {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                            "M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z",
                    }),
                    o = hp(e("path"), {
                        d:
                            "M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z",
                    });
                t.appendChild(n).append(o, r);
                const i = e("defs"),
                    s = hp(e("clipPath"), { id: "clip0_57_156" }),
                    a = hp(e("rect"), { width: `${qf}`, height: `${qf}`, fill: "white", transform: "translate(0 0.5)" });
                return s.appendChild(a), i.appendChild(s), t.appendChild(i).appendChild(s).appendChild(a), t;
            }
            const Vf = "/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/components/Dialog.tsx";
            function Yf({ open: e, onFormSubmitted: t, ...n }) {
                const r = n.options,
                    o = xf(() => ({ __html: Wf().outerHTML }), []),
                    [i, s] = wf(null),
                    a = Ef(() => {
                        i && (clearTimeout(i), s(null)), t();
                    }, [i]),
                    c = Ef(
                        (e) => {
                            n.onSubmitSuccess(e),
                                s(
                                    setTimeout(() => {
                                        t(), s(null);
                                    }, 5e3)
                                );
                        },
                        [t]
                    );
                return Fp(
                    $p,
                    { __self: this, __source: { fileName: Vf, lineNumber: 48 } },
                    i
                        ? Fp(
                              "div",
                              { class: "success__position", onClick: a, __self: this, __source: { fileName: Vf, lineNumber: 50 } },
                              Fp(
                                  "div",
                                  { class: "success__content", __self: this, __source: { fileName: Vf, lineNumber: 51 } },
                                  r.successMessageText,
                                  Fp("span", { class: "success__icon", dangerouslySetInnerHTML: o, __self: this, __source: { fileName: Vf, lineNumber: 53 } })
                              )
                          )
                        : Fp(
                              "dialog",
                              { class: "dialog", onClick: r.onFormClose, open: e, __self: this, __source: { fileName: Vf, lineNumber: 57 } },
                              Fp(
                                  "div",
                                  { class: "dialog__position", __self: this, __source: { fileName: Vf, lineNumber: 58 } },
                                  Fp(
                                      "div",
                                      {
                                          class: "dialog__content",
                                          onClick: (e) => {
                                              e.stopPropagation();
                                          },
                                          __self: this,
                                          __source: { fileName: Vf, lineNumber: 59 },
                                      },
                                      Fp(Ff, { options: r, __self: this, __source: { fileName: Vf, lineNumber: 66 } }),
                                      Fp(Uf, { ...n, onSubmitSuccess: c, __self: this, __source: { fileName: Vf, lineNumber: 67 } })
                                  )
                              )
                          )
                );
            }
            const Gf = () => ({
                    name: "FeedbackModal",
                    setupOnce() {},
                    createDialog: ({ options: e, screenshotIntegration: t, sendFeedback: n, shadow: r }) => {
                        const o = r,
                            i = e.useSentryUser,
                            s = (function () {
                                const e = Ee().getUser(),
                                    t = Ie().getUser(),
                                    n = Te().getUser();
                                return e && Object.keys(e).length ? e : t && Object.keys(t).length ? t : n;
                            })(),
                            a = ap.createElement("div"),
                            c = (function () {
                                const e = ap.createElement("style");
                                return (
                                    (e.textContent =
                                        "\n:host {\n  --dialog-inset: var(--inset);\n}\n\n\n.dialog {\n  position: fixed;\n  z-index: var(--z-index);\n  margin: 0;\n  inset: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  height: 100vh;\n  width: 100vw;\n\n  color: var(--dialog-color, var(--foreground));\n  fill: var(--dialog-color, var(--foreground));\n  line-height: 1.75em;\n\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  inset: 0;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog__position {\n  position: fixed;\n  z-index: var(--z-index);\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  display: flex;\n  max-height: calc(100vh - (2 * var(--page-margin)));\n}\n@media (max-width: 600px) {\n  .dialog__position {\n    inset: var(--page-margin);\n    padding: 0;\n  }\n}\n\n.dialog__position:has(.editor) {\n  inset: var(--page-margin);\n  padding: 0;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  padding: var(--dialog-padding, 24px);\n  max-width: 100%;\n  width: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  background: var(--dialog-background, var(--background));\n  border-radius: var(--dialog-border-radius, 20px);\n  border: var(--dialog-border, var(--border));\n  box-shadow: var(--dialog-box-shadow, var(--box-shadow));\n  transform: translate(0, 0) scale(1);\n  transition: transform 0.2s ease-in-out;\n}\n\n\n.dialog__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: var(--dialog-header-weight, 600);\n  margin: 0;\n}\n\n.brand-link {\n  display: inline-flex;\n}\n.brand-link:focus-visible {\n  outline: var(--outline);\n}\n\n\n.form {\n  display: flex;\n  overflow: auto;\n  flex-direction: row;\n  gap: 16px;\n  flex: 1 0;\n}\n\n.form__right {\n  flex: 0 0 var(--form-width, 272px);\n  width: var(--form-width, 272px);\n  display: flex;\n  overflow: auto;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 20px;\n}\n\n@media (max-width: 600px) {\n  .form__right {\n    width: auto;\n  }\n}\n\n.form__top {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.form__error-container {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: flex;\n  gap: 4px;\n  align-items: center;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  font-family: inherit;\n  line-height: inherit;\n  background: transparent;\n  box-sizing: border-box;\n  border: var(--input-border, var(--border));\n  border-radius: var(--input-border-radius, 6px);\n  color: var(--input-color, inherit);\n  fill: var(--input-color, inherit);\n  font-size: var(--input-font-size, inherit);\n  font-weight: var(--input-font-weight, 500);\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  opacity: 0.65;\n  color: var(--input-placeholder-color, inherit);\n  filter: var(--interactive-filter);\n}\n\n.form__input:focus-visible {\n  outline: var(--input-focus-outline, var(--outline));\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.error {\n  color: var(--error-color);\n  fill: var(--error-color);\n}\n\n\n.btn-group {\n  display: grid;\n  gap: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--button-font-size, inherit);\n  font-weight: var(--button-font-weight, 600);\n  padding: var(--button-padding, 6px 16px);\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  color: var(--button-primary-color, var(--accent-foreground));\n  fill: var(--button-primary-color, var(--accent-foreground));\n  background: var(--button-primary-background, var(--accent-background));\n  border: var(--button-primary-border, var(--border));\n  border-radius: var(--button-primary-border-radius, 6px);\n  font-weight: var(--button-primary-font-weight, 500);\n}\n.btn--primary:hover {\n  color: var(--button-primary-hover-color, var(--accent-foreground));\n  fill: var(--button-primary-hover-color, var(--accent-foreground));\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n}\n.btn--primary:focus-visible {\n  background: var(--button-primary-hover-background, var(--accent-background));\n  filter: var(--interactive-filter);\n  outline: var(--button-primary-focus-outline, var(--outline));\n}\n\n.btn--default {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-background, var(--background));\n  border: var(--button-border, var(--border));\n  border-radius: var(--button-border-radius, 6px);\n  font-weight: var(--button-font-weight, 500);\n}\n.btn--default:hover {\n  color: var(--button-color, var(--foreground));\n  fill: var(--button-color, var(--foreground));\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n}\n.btn--default:focus-visible {\n  background: var(--button-hover-background, var(--background));\n  filter: var(--interactive-filter);\n  outline: var(--button-focus-outline, var(--outline));\n}\n\n\n.success__position {\n  position: fixed;\n  inset: var(--dialog-inset);\n  padding: var(--page-margin);\n  z-index: var(--z-index);\n}\n.success__content {\n  background: var(--success-background, var(--background));\n  border: var(--success-border, var(--border));\n  border-radius: var(--success-border-radius, 1.7em/50%);\n  box-shadow: var(--success-box-shadow, var(--box-shadow));\n  font-weight: var(--success-font-weight, 600);\n  color: var(--success-color);\n  fill: var(--success-color);\n  padding: 12px 24px;\n  line-height: 1.75em;\n\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success__icon {\n  display: flex;\n}\n\n"),
                                    e
                                );
                            })();
                        let u = "";
                        const l = {
                                get el() {
                                    return a;
                                },
                                appendToDom() {
                                    o.contains(c) || o.contains(a) || (o.appendChild(c), o.appendChild(a));
                                },
                                removeFromDom() {
                                    o.removeChild(a), o.removeChild(c), (ap.body.style.overflow = u);
                                },
                                open() {
                                    p(!0), e.onFormOpen && e.onFormOpen(), (u = ap.body.style.overflow), (ap.body.style.overflow = "hidden");
                                },
                                close() {
                                    p(!1), (ap.body.style.overflow = u);
                                },
                            },
                            d = t && t.createInput({ h: Fp, hooks: Nf, dialog: l, options: e }),
                            p = (t) => {
                                !(function (e, t, n) {
                                    var r, o, i, s;
                                    Ep.__ && Ep.__(e, t),
                                        (o = (r = "function" == typeof n) ? null : (n && n.__k) || t.__k),
                                        (i = []),
                                        (s = []),
                                        Zp(
                                            t,
                                            (e = ((!r && n) || t).__k = Fp($p, null, [e])),
                                            o || Rp,
                                            Rp,
                                            void 0 !== t.ownerSVGElement,
                                            !r && n ? [n] : o ? null : t.firstChild ? xp.call(t.childNodes) : null,
                                            i,
                                            !r && n ? n : o ? o.__e : t.firstChild,
                                            r,
                                            s
                                        ),
                                        (e.__d = void 0),
                                        ef(i, e, s);
                                })(
                                    Fp(Yf, {
                                        options: e,
                                        screenshotInput: d,
                                        showName: e.showName || e.isNameRequired,
                                        showEmail: e.showEmail || e.isEmailRequired,
                                        defaultName: (i && s && s[i.name]) || "",
                                        defaultEmail: (i && s && s[i.email]) || "",
                                        onFormClose: () => {
                                            p(!1), e.onFormClose && e.onFormClose();
                                        },
                                        onSubmit: n,
                                        onSubmitSuccess: (t) => {
                                            p(!1), e.onSubmitSuccess && e.onSubmitSuccess(t);
                                        },
                                        onSubmitError: (t) => {
                                            e.onSubmitError && e.onSubmitError(t);
                                        },
                                        onFormSubmitted: () => {
                                            e.onFormSubmitted && e.onFormSubmitted();
                                        },
                                        open: t,
                                        __self: void 0,
                                        __source: { fileName: "/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/modal/integration.tsx", lineNumber: 67 },
                                    }),
                                    a
                                );
                            };
                        return l;
                    },
                }),
                Kf = "/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/screenshot/components/CropCorner.tsx";
            function Jf() {
                const e = ap.createElement("style"),
                    t = "#1A141F",
                    n = "#302735";
                return (
                    (e.textContent = `\n.editor {\n  padding: 10px;\n  padding-top: 65px;\n  padding-bottom: 65px;\n  flex-grow: 1;\n\n  background-color: ${t};\n  background-image: repeating-linear-gradient(\n      -145deg,\n      transparent,\n      transparent 8px,\n      ${t} 8px,\n      ${t} 11px\n    ),\n    repeating-linear-gradient(\n      -45deg,\n      transparent,\n      transparent 15px,\n      ${n} 15px,\n      ${n} 16px\n    );\n}\n\n.editor__canvas-container {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.editor__canvas-container canvas {\n  object-fit: contain;\n  position: relative;\n}\n\n.editor__crop-btn-group {\n  padding: 8px;\n  gap: 8px;\n  border-radius: var(--menu-border-radius, 6px);\n  background: var(--button-primary-background, var(--background));\n  width: 175px;\n  position: absolute;\n}\n\n.editor__crop-corner {\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  background: none;\n  border: 3px solid #ffffff;\n}\n\n.editor__crop-corner--top-left {\n  cursor: nwse-resize;\n  border-right: none;\n  border-bottom: none;\n}\n.editor__crop-corner--top-right {\n  cursor: nesw-resize;\n  border-left: none;\n  border-bottom: none;\n}\n.editor__crop-corner--bottom-left {\n  cursor: nesw-resize;\n  border-right: none;\n  border-top: none;\n}\n.editor__crop-corner--bottom-right {\n  cursor: nwse-resize;\n  border-left: none;\n  border-top: none;\n}\n`),
                    e
                );
            }
            const Xf = "/home/runner/work/sentry-javascript/sentry-javascript/packages/feedback/src/screenshot/components/ScreenshotEditor.tsx",
                Qf = 33,
                Zf = sp.devicePixelRatio,
                eh = (e) => ({ x: Math.min(e.startX, e.endX), y: Math.min(e.startY, e.endY), width: Math.abs(e.startX - e.endX), height: Math.abs(e.startY - e.endY) }),
                th = (e) => {
                    const t = e.clientHeight,
                        n = e.clientWidth,
                        r = e.width / e.height;
                    let o = t * r,
                        i = t;
                    o > n && ((o = n), (i = n / r));
                    const s = (n - o) / 2,
                        a = (t - i) / 2;
                    return { startX: s, startY: a, endX: o + s, endY: i + a };
                };
            function nh({ h: e, hooks: t, imageBuffer: n, dialog: r, options: o }) {
                const i = (function ({ hooks: e }) {
                    return function ({ onBeforeScreenshot: t, onScreenshot: n, onAfterScreenshot: r, onError: o }) {
                        e.useEffect(() => {
                            (async () => {
                                t();
                                const e = await cp.mediaDevices.getDisplayMedia({
                                        video: { width: sp.innerWidth * sp.devicePixelRatio, height: sp.innerHeight * sp.devicePixelRatio },
                                        audio: !1,
                                        monitorTypeSurfaces: "exclude",
                                        preferCurrentTab: !0,
                                        selfBrowserSurface: "include",
                                        surfaceSwitching: "exclude",
                                    }),
                                    o = ap.createElement("video");
                                await new Promise((t, r) => {
                                    (o.srcObject = e),
                                        (o.onloadedmetadata = () => {
                                            n(o), e.getTracks().forEach((e) => e.stop()), t();
                                        }),
                                        o.play().catch(r);
                                }),
                                    r();
                            })().catch(o);
                        }, []);
                    };
                })({ hooks: t });
                return function ({ onError: s }) {
                    const a = t.useMemo(() => ({ __html: Jf().innerText }), []),
                        c = (function ({ h: e }) {
                            return function ({ top: t, left: n, corner: r, onGrabButton: o }) {
                                return e("button", {
                                    class: `editor__crop-corner editor__crop-corner--${r} `,
                                    style: { top: t, left: n },
                                    onMouseDown: (e) => {
                                        e.preventDefault(), o(e, r);
                                    },
                                    onClick: (e) => {
                                        e.preventDefault();
                                    },
                                    __self: this,
                                    __source: { fileName: Kf, lineNumber: 22 },
                                });
                            };
                        })({ h: e }),
                        u = t.useRef(null),
                        l = t.useRef(null),
                        d = t.useRef(null),
                        [p, f] = t.useState({ startX: 0, startY: 0, endX: 0, endY: 0 }),
                        [h, m] = t.useState(!1);
                    function g() {
                        const e = d.current,
                            t = eh(th(n));
                        if (e) {
                            (e.width = t.width * Zf), (e.height = t.height * Zf), (e.style.width = `${t.width}px`), (e.style.height = `${t.height}px`);
                            const n = e.getContext("2d");
                            n && n.scale(Zf, Zf);
                        }
                        const r = l.current;
                        r && ((r.style.width = `${t.width}px`), (r.style.height = `${t.height}px`)), f({ startX: 0, startY: 0, endX: t.width, endY: t.height });
                    }
                    function v(e, t) {
                        m(!1);
                        const n = y(t),
                            r = () => {
                                ap.removeEventListener("mousemove", n), ap.removeEventListener("mouseup", r), m(!0);
                            };
                        ap.addEventListener("mouseup", r), ap.addEventListener("mousemove", n);
                    }
                    t.useEffect(() => {
                        sp.addEventListener("resize", g, !1);
                    }, []),
                        t.useEffect(() => {
                            const e = d.current;
                            if (!e) return;
                            const t = e.getContext("2d");
                            if (!t) return;
                            const r = eh(th(n)),
                                o = eh(p);
                            t.clearRect(0, 0, r.width, r.height),
                                (t.fillStyle = "rgba(0, 0, 0, 0.5)"),
                                t.fillRect(0, 0, r.width, r.height),
                                t.clearRect(o.x, o.y, o.width, o.height),
                                (t.strokeStyle = "#ffffff"),
                                (t.lineWidth = 3),
                                t.strokeRect(o.x + 1, o.y + 1, o.width - 2, o.height - 2),
                                (t.strokeStyle = "#000000"),
                                (t.lineWidth = 1),
                                t.strokeRect(o.x + 3, o.y + 3, o.width - 6, o.height - 6);
                        }, [p]);
                    const y = t.useCallback(
                        (e) =>
                            function (t) {
                                if (!d.current) return;
                                const n = d.current,
                                    r = n.getBoundingClientRect(),
                                    o = t.clientX - r.x,
                                    i = t.clientY - r.y;
                                switch (e) {
                                    case "top-left":
                                        f((e) => ({ ...e, startX: Math.min(Math.max(0, o), e.endX - Qf), startY: Math.min(Math.max(0, i), e.endY - Qf) }));
                                        break;
                                    case "top-right":
                                        f((e) => ({ ...e, endX: Math.max(Math.min(o, n.width / Zf), e.startX + Qf), startY: Math.min(Math.max(0, i), e.endY - Qf) }));
                                        break;
                                    case "bottom-left":
                                        f((e) => ({ ...e, startX: Math.min(Math.max(0, o), e.endX - Qf), endY: Math.max(Math.min(i, n.height / Zf), e.startY + Qf) }));
                                        break;
                                    case "bottom-right":
                                        f((e) => ({ ...e, endX: Math.max(Math.min(o, n.width / Zf), e.startX + Qf), endY: Math.max(Math.min(i, n.height / Zf), e.startY + Qf) }));
                                }
                            },
                        []
                    );
                    return (
                        i({
                            onBeforeScreenshot: t.useCallback(() => {
                                r.el.style.display = "none";
                            }, []),
                            onScreenshot: t.useCallback(
                                (e) => {
                                    const t = n.getContext("2d");
                                    if (!t) throw new Error("Could not get canvas context");
                                    (n.width = e.videoWidth), (n.height = e.videoHeight), (n.style.width = "100%"), (n.style.height = "100%"), t.drawImage(e, 0, 0);
                                },
                                [n]
                            ),
                            onAfterScreenshot: t.useCallback(() => {
                                r.el.style.display = "block";
                                const e = u.current;
                                e && e.appendChild(n), g();
                            }, []),
                            onError: t.useCallback((e) => {
                                (r.el.style.display = "block"), s(e);
                            }, []),
                        }),
                        e(
                            "div",
                            { class: "editor", __self: this, __source: { fileName: Xf, lineNumber: 262 } },
                            e("style", { dangerouslySetInnerHTML: a, __self: this, __source: { fileName: Xf, lineNumber: 263 } }),
                            e(
                                "div",
                                { class: "editor__canvas-container", ref: u, __self: this, __source: { fileName: Xf, lineNumber: 264 } },
                                e(
                                    "div",
                                    { class: "editor__crop-container", style: { position: "absolute", zIndex: 1 }, ref: l, __self: this, __source: { fileName: Xf, lineNumber: 265 } },
                                    e("canvas", { style: { position: "absolute" }, ref: d, __self: this, __source: { fileName: Xf, lineNumber: 266 } }),
                                    e(c, { left: p.startX - 3, top: p.startY - 3, onGrabButton: v, corner: "top-left", __self: this, __source: { fileName: Xf, lineNumber: 267 } }),
                                    e(c, { left: p.endX - 30 + 3, top: p.startY - 3, onGrabButton: v, corner: "top-right", __self: this, __source: { fileName: Xf, lineNumber: 273 } }),
                                    e(c, { left: p.startX - 3, top: p.endY - 30 + 3, onGrabButton: v, corner: "bottom-left", __self: this, __source: { fileName: Xf, lineNumber: 279 } }),
                                    e(c, { left: p.endX - 30 + 3, top: p.endY - 30 + 3, onGrabButton: v, corner: "bottom-right", __self: this, __source: { fileName: Xf, lineNumber: 285 } }),
                                    e(
                                        "div",
                                        { style: { left: Math.max(0, p.endX - 191), top: Math.max(0, p.endY + 8), display: h ? "flex" : "none" }, class: "editor__crop-btn-group", __self: this, __source: { fileName: Xf, lineNumber: 291 } },
                                        e(
                                            "button",
                                            {
                                                onClick: (e) => {
                                                    e.preventDefault(), d.current && f({ startX: 0, startY: 0, endX: d.current.width / Zf, endY: d.current.height / Zf }), m(!1);
                                                },
                                                class: "btn btn--default",
                                                __self: this,
                                                __source: { fileName: Xf, lineNumber: 299 },
                                            },
                                            o.cancelButtonLabel
                                        ),
                                        e(
                                            "button",
                                            {
                                                onClick: (e) => {
                                                    e.preventDefault(),
                                                        (function () {
                                                            const e = ap.createElement("canvas"),
                                                                t = eh(th(n)),
                                                                r = eh(p);
                                                            (e.width = r.width * Zf), (e.height = r.height * Zf);
                                                            const o = e.getContext("2d");
                                                            o && n && o.drawImage(n, (r.x / t.width) * n.width, (r.y / t.height) * n.height, (r.width / t.width) * n.width, (r.height / t.height) * n.height, 0, 0, e.width, e.height);
                                                            const i = n.getContext("2d");
                                                            i &&
                                                                (i.clearRect(0, 0, n.width, n.height),
                                                                (n.width = e.width),
                                                                (n.height = e.height),
                                                                (n.style.width = `${r.width}px`),
                                                                (n.style.height = `${r.height}px`),
                                                                i.drawImage(e, 0, 0),
                                                                g());
                                                        })(),
                                                        m(!1);
                                                },
                                                class: "btn btn--primary",
                                                __self: this,
                                                __source: { fileName: Xf, lineNumber: 316 },
                                            },
                                            o.confirmButtonLabel
                                        )
                                    )
                                )
                            )
                        )
                    );
                };
            }
            const rh = () => ({
                    name: "FeedbackScreenshot",
                    setupOnce() {},
                    createInput: ({ h: e, hooks: t, dialog: n, options: r }) => {
                        const o = ap.createElement("canvas");
                        return {
                            input: nh({ h: e, hooks: t, imageBuffer: o, dialog: n, options: r }),
                            value: async () => {
                                const e = await new Promise((e) => {
                                    o.toBlob(e, "image/png");
                                });
                                if (e) {
                                    return { data: new Uint8Array(await e.arrayBuffer()), filename: "screenshot.png", contentType: "application/png" };
                                }
                            },
                        };
                    },
                }),
                oh = Sp({ lazyLoadIntegration: is }),
                ih = Sp({ lazyLoadIntegration: is, getModalIntegration: () => Gf, getScreenshotIntegration: () => rh }),
                sh = "c",
                ah = "g",
                ch = "s",
                uh = "d";
            function lh(e, t) {
                const n = E("globalMetricsAggregators", () => new WeakMap()),
                    r = n.get(e);
                if (r) return r;
                const o = new t(e);
                return e.on("flush", () => o.flush()), e.on("close", () => o.close()), n.set(e, o), o;
            }
            function dh(e, t, n, r, o = {}) {
                const i = o.client || Me();
                if (!i) return;
                const s = At(),
                    a = s ? Ct(s) : void 0,
                    c = a && wt(a).description,
                    { unit: u, tags: l, timestamp: d } = o,
                    { release: p, environment: f } = i.getOptions(),
                    h = {};
                p && (h.release = p), f && (h.environment = f), c && (h.transaction = c), Pe && L.log(`Adding value of ${r} to ${t} metric ${n}`);
                lh(i, e).add(t, n, r, u, { ...h, ...l }, d);
            }
            function ph(e, t, n, r) {
                dh(e, uh, t, hh(n), r);
            }
            const fh = {
                increment: function (e, t, n = 1, r) {
                    dh(e, "c", t, hh(n), r);
                },
                distribution: ph,
                set: function (e, t, n, r) {
                    dh(e, "s", t, n, r);
                },
                gauge: function (e, t, n, r) {
                    dh(e, "g", t, hh(n), r);
                },
                timing: function (e, t, n, r = "second", o) {
                    if ("function" == typeof n) {
                        const r = ae();
                        return pr({ op: "metrics.timing", name: t, startTime: r, onlyIfParent: !0 }, (i) =>
                            Pn(
                                () => n(),
                                () => {},
                                () => {
                                    const n = ae();
                                    ph(e, t, n - r, { ...o, unit: "second" }), i.end(n);
                                }
                            )
                        );
                    }
                    ph(e, t, n, { ...o, unit: r });
                },
                getMetricsAggregatorForClient: lh,
            };
            function hh(e) {
                return "string" == typeof e ? parseInt(e) : e;
            }
            function mh(e) {
                return e.replace(/[^\w\-./]+/gi, "");
            }
            const gh = [
                ["\n", "\\n"],
                ["\r", "\\r"],
                ["\t", "\\t"],
                ["\\", "\\\\"],
                ["|", "\\u{7c}"],
                [",", "\\u{2c}"],
            ];
            function vh(e) {
                return [...e].reduce(
                    (e, t) =>
                        e +
                        (function (e) {
                            for (const [t, n] of gh) if (e === t) return n;
                            return e;
                        })(t),
                    ""
                );
            }
            function yh(e, t) {
                L.log(`Flushing aggregated metrics, number of metrics: ${t.length}`);
                const n = (function (e, t, n, r) {
                    const o = { sent_at: new Date().toISOString() };
                    n && n.sdk && (o.sdk = { name: n.sdk.name, version: n.sdk.version });
                    r && t && (o.dsn = $n(t));
                    const i = (function (e) {
                        const t = (function (e) {
                            let t = "";
                            for (const n of e) {
                                const e = Object.entries(n.tags),
                                    r = e.length > 0 ? `|#${e.map(([e, t]) => `${e}:${t}`).join(",")}` : "";
                                t += `${n.name}@${n.unit}:${n.metric}|${n.metricType}${r}|T${n.timestamp}\n`;
                            }
                            return t;
                        })(e);
                        return [{ type: "statsd", length: t.length }, t];
                    })(e);
                    return zn(o, [i]);
                })(t, e.getDsn(), e.getSdkMetadata(), e.getOptions().tunnel);
                e.sendEnvelope(n);
            }
            const _h = {
                [sh]: class {
                    constructor(e) {
                        this._value = e;
                    }
                    get weight() {
                        return 1;
                    }
                    add(e) {
                        this._value += e;
                    }
                    toString() {
                        return `${this._value}`;
                    }
                },
                [ah]: class {
                    constructor(e) {
                        (this._last = e), (this._min = e), (this._max = e), (this._sum = e), (this._count = 1);
                    }
                    get weight() {
                        return 5;
                    }
                    add(e) {
                        (this._last = e), e < this._min && (this._min = e), e > this._max && (this._max = e), (this._sum += e), this._count++;
                    }
                    toString() {
                        return `${this._last}:${this._min}:${this._max}:${this._sum}:${this._count}`;
                    }
                },
                [uh]: class {
                    constructor(e) {
                        this._value = [e];
                    }
                    get weight() {
                        return this._value.length;
                    }
                    add(e) {
                        this._value.push(e);
                    }
                    toString() {
                        return this._value.join(":");
                    }
                },
                [ch]: class {
                    constructor(e) {
                        (this.first = e), (this._value = new Set([e]));
                    }
                    get weight() {
                        return this._value.size;
                    }
                    add(e) {
                        this._value.add(e);
                    }
                    toString() {
                        return Array.from(this._value)
                            .map((e) =>
                                "string" == typeof e
                                    ? (function (e) {
                                          let t = 0;
                                          for (let n = 0; n < e.length; n++) (t = (t << 5) - t + e.charCodeAt(n)), (t &= t);
                                          return t >>> 0;
                                      })(e)
                                    : e
                            )
                            .join(":");
                    }
                },
            };
            class bh {
                constructor(e) {
                    (this._client = e), (this._buckets = new Map()), (this._interval = setInterval(() => this.flush(), 5e3));
                }
                add(e, t, n, r = "none", o = {}, i = ae()) {
                    const s = Math.floor(i),
                        a = t.replace(/[^\w\-.]+/gi, "_");
                    const c = (function (e) {
                            const t = {};
                            for (const n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[mh(n)] = vh(String(e[n])));
                            return t;
                        })(o),
                        u = (function (e) {
                            return e.replace(/[^\w]+/gi, "_");
                        })(r),
                        l = (function (e, t, n, r) {
                            const o = Object.entries(K(r)).sort((e, t) => e[0].localeCompare(t[0]));
                            return `${e}${t}${n}${o}`;
                        })(e, a, u, c);
                    let d = this._buckets.get(l);
                    const p = d && "s" === e ? d.metric.weight : 0;
                    d ? (d.metric.add(n), d.timestamp < s && (d.timestamp = s)) : ((d = { metric: new _h[e](n), timestamp: s, metricType: e, name: a, unit: u, tags: c }), this._buckets.set(l, d));
                    Mt(e, a, "string" == typeof n ? d.metric.weight - p : n, u, o, l);
                }
                flush() {
                    if (0 === this._buckets.size) return;
                    const e = Array.from(this._buckets.values());
                    yh(this._client, e), this._buckets.clear();
                }
                close() {
                    clearInterval(this._interval), this.flush();
                }
            }
            const wh = {
                increment: function (e, t = 1, n) {
                    fh.increment(bh, e, t, n);
                },
                distribution: function (e, t, n) {
                    fh.distribution(bh, e, t, n);
                },
                set: function (e, t, n) {
                    fh.set(bh, e, t, n);
                },
                gauge: function (e, t, n) {
                    fh.gauge(bh, e, t, n);
                },
                timing: function (e, t, n = "second", r) {
                    return fh.timing(bh, e, t, n, r);
                },
            };
            function Sh(e, t, n, r, o = "auto.http.browser") {
                if (!e.fetchData) return;
                const a = Dn() && t(e.fetchData.url);
                if (e.endTimestamp && a) {
                    const t = e.fetchData.__span;
                    if (!t) return;
                    const n = r[t];
                    return void (
                        n &&
                        (!(function (e, t) {
                            if (t.response) {
                                ht(e, t.response.status);
                                const n = t.response && t.response.headers && t.response.headers.get("content-length");
                                if (n) {
                                    const t = parseInt(n);
                                    t > 0 && e.setAttribute("http.response_content_length", t);
                                }
                            } else t.error && e.setStatus({ code: pt, message: "internal_error" });
                            e.end();
                        })(n, e),
                        delete r[t])
                    );
                }
                const c = Ee(),
                    u = Me(),
                    { method: l, url: d } = e.fetchData,
                    p = (function (e) {
                        try {
                            return new URL(e).href;
                        } catch (e) {
                            return;
                        }
                    })(d),
                    f = p ? Ni(p).host : void 0,
                    h = !!At(),
                    m = a && h ? fr({ name: `${l} ${d}`, attributes: { url: d, type: "fetch", "http.method": l, "http.url": p, "server.address": f, [s]: o, [i]: "http.client" } }) : new Fn();
                if (((e.fetchData.__span = m.spanContext().spanId), (r[m.spanContext().spanId] = m), n(e.fetchData.url) && u)) {
                    const t = e.args[0];
                    e.args[1] = e.args[1] || {};
                    const n = e.args[1];
                    n.headers = (function (e, t, n, r, o) {
                        const i = Ie(),
                            { traceId: s, spanId: a, sampled: c, dsc: u } = { ...i.getPropagationContext(), ...n.getPropagationContext() },
                            l = o ? yt(o) : at(s, a, c),
                            d = rt(u || (o ? Pt(o) : Nt(s, t))),
                            p = r.headers || ("undefined" != typeof Request && S(e, Request) ? e.headers : void 0);
                        if (p) {
                            if ("undefined" != typeof Headers && S(p, Headers)) {
                                const e = new Headers(p);
                                return e.append("sentry-trace", l), d && e.append(Qe, d), e;
                            }
                            if (Array.isArray(p)) {
                                const e = [...p, ["sentry-trace", l]];
                                return d && e.push([Qe, d]), e;
                            }
                            {
                                const e = "baggage" in p ? p.baggage : void 0,
                                    t = [];
                                return Array.isArray(e) ? t.push(...e) : e && t.push(e), d && t.push(d), { ...p, "sentry-trace": l, baggage: t.length > 0 ? t.join(",") : void 0 };
                            }
                        }
                        return { "sentry-trace": l, baggage: d };
                    })(t, u, c, n, Dn() && h ? m : void 0);
                }
                return m;
            }
            const kh = { traceFetch: !0, traceXHR: !0, enableHTTPTimings: !0 };
            function xh(e) {
                const { traceFetch: t, traceXHR: n, shouldCreateSpanForRequest: r, enableHTTPTimings: o, tracePropagationTargets: a } = { traceFetch: kh.traceFetch, traceXHR: kh.traceXHR, ...e },
                    c = "function" == typeof r ? r : (e) => !0,
                    u = (e) =>
                        (function (e, t) {
                            const n = _o.location && _o.location.href;
                            if (n) {
                                let r, o;
                                try {
                                    (r = new URL(e, n)), (o = new URL(n).origin);
                                } catch (e) {
                                    return !1;
                                }
                                const i = r.origin === o;
                                return t ? B(r.toString(), t) || (i && B(r.pathname, t)) : i;
                            }
                            {
                                const n = !!e.match(/^\/(?!\/)/);
                                return t ? B(e, t) : n;
                            }
                        })(e, a),
                    l = {};
                t &&
                    Ai((e) => {
                        const t = Sh(e, c, u, l);
                        if (t) {
                            const n = Th(e.fetchData.url),
                                r = n ? Ni(n).host : void 0;
                            t.setAttributes({ "http.url": n, "server.address": r });
                        }
                        o && t && Eh(t);
                    }),
                    n &&
                        Ti((e) => {
                            const t = (function (e, t, n, r) {
                                const o = e.xhr,
                                    a = o && o[Ii];
                                if (!o || o.__sentry_own_request__ || !a) return;
                                const c = Dn() && t(a.url);
                                if (e.endTimestamp && c) {
                                    const e = o.__sentry_xhr_span_id__;
                                    if (!e) return;
                                    const t = r[e];
                                    return void (t && void 0 !== a.status_code && (ht(t, a.status_code), t.end(), delete r[e]));
                                }
                                const u = Th(a.url),
                                    l = u ? Ni(u).host : void 0,
                                    d = !!At(),
                                    p =
                                        c && d
                                            ? fr({ name: `${a.method} ${a.url}`, attributes: { type: "xhr", "http.method": a.method, "http.url": u, url: a.url, "server.address": l, [s]: "auto.http.browser", [i]: "http.client" } })
                                            : new Fn();
                                (o.__sentry_xhr_span_id__ = p.spanContext().spanId), (r[o.__sentry_xhr_span_id__] = p);
                                const f = Me();
                                o.setRequestHeader &&
                                    n(a.url) &&
                                    f &&
                                    (function (e, t, n) {
                                        const r = Ee(),
                                            o = Ie(),
                                            { traceId: i, spanId: s, sampled: a, dsc: c } = { ...o.getPropagationContext(), ...r.getPropagationContext() },
                                            u = n && Dn() ? yt(n) : at(i, s, a),
                                            l = rt(c || (n ? Pt(n) : Nt(i, t)));
                                        !(function (e, t, n) {
                                            try {
                                                e.setRequestHeader("sentry-trace", t), n && e.setRequestHeader(Qe, n);
                                            } catch (e) {}
                                        })(e, u, l);
                                    })(o, f, Dn() && d ? p : void 0);
                                return p;
                            })(e, c, u, l);
                            o && t && Eh(t);
                        });
            }
            function Eh(e) {
                const { url: t } = wt(e).data || {};
                if (!t || "string" != typeof t) return;
                const n = ha("resource", ({ entries: r }) => {
                    r.forEach((r) => {
                        if (
                            (function (e) {
                                return "resource" === e.entryType && "initiatorType" in e && "string" == typeof e.nextHopProtocol && ("fetch" === e.initiatorType || "xmlhttprequest" === e.initiatorType);
                            })(r) &&
                            r.name.endsWith(t)
                        ) {
                            (function (e) {
                                const { name: t, version: n } = (function (e) {
                                        let t = "unknown",
                                            n = "unknown",
                                            r = "";
                                        for (const o of e) {
                                            if ("/" === o) {
                                                [t, n] = e.split("/");
                                                break;
                                            }
                                            if (!isNaN(Number(o))) {
                                                (t = "h" === r ? "http" : r), (n = e.split(r)[1]);
                                                break;
                                            }
                                            r += o;
                                        }
                                        r === e && (t = r);
                                        return { name: t, version: n };
                                    })(e.nextHopProtocol),
                                    r = [];
                                if ((r.push(["network.protocol.version", n], ["network.protocol.name", t]), !ue)) return r;
                                return [
                                    ...r,
                                    ["http.request.redirect_start", Ih(e.redirectStart)],
                                    ["http.request.fetch_start", Ih(e.fetchStart)],
                                    ["http.request.domain_lookup_start", Ih(e.domainLookupStart)],
                                    ["http.request.domain_lookup_end", Ih(e.domainLookupEnd)],
                                    ["http.request.connect_start", Ih(e.connectStart)],
                                    ["http.request.secure_connection_start", Ih(e.secureConnectionStart)],
                                    ["http.request.connection_end", Ih(e.connectEnd)],
                                    ["http.request.request_start", Ih(e.requestStart)],
                                    ["http.request.response_start", Ih(e.responseStart)],
                                    ["http.request.response_end", Ih(e.responseEnd)],
                                ];
                            })(r).forEach((t) => e.setAttribute(...t)),
                                setTimeout(n);
                        }
                    });
                });
            }
            function Ih(e = 0) {
                return ((ue || performance.timeOrigin) + e) / 1e3;
            }
            function Th(e) {
                try {
                    return new URL(e, _o.location.origin).href;
                } catch (e) {
                    return;
                }
            }
            function Ch(e) {
                return "number" == typeof e && isFinite(e);
            }
            function Ah(e, t, n, { ...r }) {
                const o = wt(e).start_timestamp;
                return (
                    o && o > t && "function" == typeof e.updateStartTime && e.updateStartTime(t),
                    mr(e, () => {
                        const e = fr({ startTime: t, ...r });
                        return e && e.end(n), e;
                    })
                );
            }
            function Mh() {
                return Vo && Vo.addEventListener && Vo.performance;
            }
            function Rh(e) {
                return e / 1e3;
            }
            const Oh = 2147483647;
            let Nh,
                Ph,
                Dh = 0,
                Lh = {};
            function Fh() {
                const e = Mh();
                if (e && ue) {
                    e.mark && Vo.performance.mark("sentry-tracing-init");
                    const t = pa(({ metric: e }) => {
                            const t = e.entries[e.entries.length - 1];
                            if (!t) return;
                            const n = Rh(ue),
                                r = Rh(t.startTime);
                            Wo && L.log("[Measurements] Adding FID"), (Lh.fid = { value: e.value, unit: "millisecond" }), (Lh["mark.fid"] = { value: n + r, unit: "second" });
                        }),
                        n = la(({ metric: e }) => {
                            const t = e.entries[e.entries.length - 1];
                            t && (Wo && L.log("[Measurements] Adding CLS"), (Lh.cls = { value: e.value, unit: "" }), (Ph = t));
                        }, !0),
                        r = da(({ metric: e }) => {
                            const t = e.entries[e.entries.length - 1];
                            t && (Wo && L.log("[Measurements] Adding LCP"), (Lh.lcp = { value: e.value, unit: "millisecond" }), (Nh = t));
                        }, !0),
                        o = wa(
                            "ttfb",
                            ({ metric: e }) => {
                                e.entries[e.entries.length - 1] && (Wo && L.log("[Measurements] Adding TTFB"), (Lh.ttfb = { value: e.value, unit: "millisecond" }));
                            },
                            _a,
                            ca
                        );
                    return () => {
                        t(), n(), r(), o();
                    };
                }
                return () => {};
            }
            function jh(e) {
                const t = Mh();
                if (!t || !Vo.performance.getEntries || !ue) return;
                Wo && L.log("[Tracing] Adding & adjusting spans using Performance API");
                const n = Rh(ue),
                    r = t.getEntries(),
                    { op: o, start_timestamp: i } = wt(e);
                if (
                    (r.slice(Dh).forEach((t) => {
                        const r = Rh(t.startTime),
                            a = Rh(Math.max(0, t.duration));
                        if (!("navigation" === o && i && n + r < i))
                            switch (t.entryType) {
                                case "navigation":
                                    !(function (e, t, n) {
                                        ["unloadEvent", "redirect", "domContentLoadedEvent", "loadEvent", "connect"].forEach((r) => {
                                            $h(e, t, r, n);
                                        }),
                                            $h(e, t, "secureConnection", n, "TLS/SSL", "connectEnd"),
                                            $h(e, t, "fetch", n, "cache", "domainLookupStart"),
                                            $h(e, t, "domainLookup", n, "DNS"),
                                            (function (e, t, n) {
                                                const r = n + Rh(t.requestStart),
                                                    o = n + Rh(t.responseEnd),
                                                    i = n + Rh(t.responseStart);
                                                t.responseEnd &&
                                                    (Ah(e, r, o, { op: "browser", name: "request", attributes: { [s]: "auto.ui.browser.metrics" } }),
                                                    Ah(e, i, o, { op: "browser", name: "response", attributes: { [s]: "auto.ui.browser.metrics" } }));
                                            })(e, t, n);
                                    })(e, t, n);
                                    break;
                                case "mark":
                                case "paint":
                                case "measure": {
                                    !(function (e, t, n, r, o) {
                                        const i = xs(),
                                            a = Rh(i ? i.requestStart : 0),
                                            c = o + Math.max(n, a),
                                            u = o + n,
                                            l = u + r,
                                            d = { [s]: "auto.resource.browser.metrics" };
                                        c !== u && ((d["sentry.browser.measure_happened_before_request"] = !0), (d["sentry.browser.measure_start_time"] = c));
                                        Ah(e, c, l, { name: t.name, op: t.entryType, attributes: d });
                                    })(e, t, r, a, n);
                                    const o = Os(),
                                        i = t.startTime < o.firstHiddenTime;
                                    "first-paint" === t.name && i && (Wo && L.log("[Measurements] Adding FP"), (Lh.fp = { value: t.startTime, unit: "millisecond" })),
                                        "first-contentful-paint" === t.name && i && (Wo && L.log("[Measurements] Adding FCP"), (Lh.fcp = { value: t.startTime, unit: "millisecond" }));
                                    break;
                                }
                                case "resource":
                                    !(function (e, t, n, r, o, i) {
                                        if ("xmlhttprequest" === t.initiatorType || "fetch" === t.initiatorType) return;
                                        const a = Ni(n),
                                            c = { [s]: "auto.resource.browser.metrics" };
                                        Uh(c, t, "transferSize", "http.response_transfer_size"),
                                            Uh(c, t, "encodedBodySize", "http.response_content_length"),
                                            Uh(c, t, "decodedBodySize", "http.decoded_response_content_length"),
                                            "renderBlockingStatus" in t && (c["resource.render_blocking_status"] = t.renderBlockingStatus);
                                        a.protocol && (c["url.scheme"] = a.protocol.split(":").pop());
                                        a.host && (c["server.address"] = a.host);
                                        c["url.same_origin"] = n.includes(Vo.location.origin);
                                        const u = i + r,
                                            l = u + o;
                                        Ah(e, u, l, { name: n.replace(Vo.location.origin, ""), op: t.initiatorType ? `resource.${t.initiatorType}` : "resource.other", attributes: c });
                                    })(e, t, t.name, r, a, n);
                            }
                    }),
                    (Dh = Math.max(r.length - 1, 0)),
                    (function (e) {
                        const t = Vo.navigator;
                        if (!t) return;
                        const n = t.connection;
                        n && (n.effectiveType && e.setAttribute("effectiveConnectionType", n.effectiveType), n.type && e.setAttribute("connectionType", n.type), Ch(n.rtt) && (Lh["connection.rtt"] = { value: n.rtt, unit: "millisecond" }));
                        Ch(t.deviceMemory) && e.setAttribute("deviceMemory", `${t.deviceMemory} GB`);
                        Ch(t.hardwareConcurrency) && e.setAttribute("hardwareConcurrency", String(t.hardwareConcurrency));
                    })(e),
                    "pageload" === o)
                ) {
                    !(function (e) {
                        const t = xs();
                        if (!t) return;
                        const { responseStart: n, requestStart: r } = t;
                        r <= n && (Wo && L.log("[Measurements] Adding TTFB Request Time"), (e["ttfb.requestTime"] = { value: n - r, unit: "millisecond" }));
                    })(Lh),
                        ["fcp", "fp", "lcp"].forEach((e) => {
                            const t = Lh[e];
                            if (!t || !i || n >= i) return;
                            const r = t.value,
                                o = n + Rh(r),
                                s = Math.abs(1e3 * (o - i)),
                                a = s - r;
                            Wo && L.log(`[Measurements] Normalized ${e} from ${r} to ${s} (${a})`), (t.value = s);
                        });
                    const t = Lh["mark.fid"];
                    t && Lh.fid && (Ah(e, t.value, t.value + Rh(Lh.fid.value), { name: "first input delay", op: "ui.action", attributes: { [s]: "auto.ui.browser.metrics" } }), delete Lh["mark.fid"]),
                        "fcp" in Lh || delete Lh.cls,
                        Object.entries(Lh).forEach(([e, t]) => {
                            nr(e, t.value, t.unit);
                        }),
                        (function (e) {
                            Nh &&
                                (Wo && L.log("[Measurements] Adding LCP Data"),
                                Nh.element && e.setAttribute("lcp.element", C(Nh.element)),
                                Nh.id && e.setAttribute("lcp.id", Nh.id),
                                Nh.url && e.setAttribute("lcp.url", Nh.url.trim().slice(0, 200)),
                                e.setAttribute("lcp.size", Nh.size));
                            Ph && Ph.sources && (Wo && L.log("[Measurements] Adding CLS Data"), Ph.sources.forEach((t, n) => e.setAttribute(`cls.source.${n + 1}`, C(t.node))));
                        })(e);
                }
                (Nh = void 0), (Ph = void 0), (Lh = {});
            }
            function $h(e, t, n, r, o, i) {
                const a = i ? t[i] : t[`${n}End`],
                    c = t[`${n}Start`];
                c && a && Ah(e, r + Rh(c), r + Rh(a), { op: "browser", name: o || n, attributes: { [s]: "auto.ui.browser.metrics" } });
            }
            function Uh(e, t, n, r) {
                const o = t[n];
                null != o && o < Oh && (e[r] = o);
            }
            const Bh = [],
                qh = new Map();
            function zh() {
                if (Mh() && ue) {
                    const e = fa(({ metric: e }) => {
                        const t = Me();
                        if (!t || null == e.value) return;
                        const n = e.entries.find((t) => t.duration === e.value && Hh[t.name]);
                        if (!n) return;
                        const { interactionId: r } = n,
                            o = Hh[n.name],
                            i = t.getOptions(),
                            a = Rh(ue + n.startTime),
                            d = Rh(e.value),
                            p = Ee(),
                            f = At(),
                            h = f ? Ct(f) : void 0,
                            m = (null != r ? qh.get(r) : void 0) || h,
                            g = m ? wt(m).description : p.getScopeData().transactionName,
                            v = p.getUser(),
                            y = t.getIntegrationByName("Replay"),
                            _ = y && y.getReplayId(),
                            b = void 0 !== v ? v.email || v.id || v.ip_address : void 0;
                        let w;
                        try {
                            w = p.getScopeData().contexts.profile.profile_id;
                        } catch (e) {}
                        const S = fr({
                            name: C(n.target),
                            op: `ui.interaction.${o}`,
                            attributes: K({
                                release: i.release,
                                environment: i.environment,
                                transaction: g,
                                [l]: e.value,
                                [s]: "auto.http.browser.inp",
                                user: b || void 0,
                                profile_id: w || void 0,
                                replay_id: _ || void 0,
                                "user_agent.original": Vo.navigator && Vo.navigator.userAgent,
                            }),
                            startTime: a,
                            experimental: { standalone: !0 },
                        });
                        S.addEvent("inp", { [c]: "millisecond", [u]: e.value }), S.end(a + d);
                    });
                    return () => {
                        e();
                    };
                }
                return () => {};
            }
            const Hh = {
                click: "click",
                pointerdown: "click",
                pointerup: "click",
                mousedown: "click",
                mouseup: "click",
                touchstart: "click",
                touchend: "click",
                mouseover: "hover",
                mouseout: "hover",
                mouseenter: "hover",
                mouseleave: "hover",
                pointerover: "hover",
                pointerout: "hover",
                pointerenter: "hover",
                pointerleave: "hover",
                dragstart: "drag",
                dragend: "drag",
                drag: "drag",
                dragenter: "drag",
                dragleave: "drag",
                dragover: "drag",
                drop: "drag",
                keydown: "press",
                keyup: "press",
                keypress: "press",
                input: "press",
            };
            const Wh = { idleTimeout: 1e3, finalTimeout: 3e4, childSpanTimeout: 15e3 },
                Vh = "heartbeatFailed",
                Yh = "idleTimeout",
                Gh = "finalTimeout",
                Kh = "externalFinish";
            function Jh(e, t = {}) {
                const n = new Map();
                let r,
                    o = !1,
                    i = Kh,
                    s = !t.disableAutoFinish;
                const c = [],
                    { idleTimeout: u = Wh.idleTimeout, finalTimeout: l = Wh.finalTimeout, childSpanTimeout: d = Wh.childSpanTimeout, beforeSpanEnd: p } = t,
                    f = Me();
                if (!f || !Dn()) return new Fn();
                const h = Ee(),
                    m = At(),
                    g = (function (e) {
                        const t = fr(e);
                        return fe(Ee(), t), Pe && L.log("[Tracing] Started span is an idle span"), t;
                    })(e);
                function v() {
                    r && (clearTimeout(r), (r = void 0));
                }
                function y(e) {
                    v(),
                        (r = setTimeout(() => {
                            !o && 0 === n.size && s && ((i = Yh), g.end(e));
                        }, u));
                }
                function _(e) {
                    r = setTimeout(() => {
                        !o && s && ((i = Vh), g.end(e));
                    }, d);
                }
                function b(e) {
                    (o = !0), n.clear(), c.forEach((e) => e()), fe(h, m);
                    const t = wt(g),
                        { start_timestamp: r } = t;
                    if (!r) return;
                    (t.data || {})[a] || g.setAttribute(a, i), L.log(`[Tracing] Idle span "${t.op}" finished`);
                    const s = Tt(g).filter((e) => e !== g);
                    let d = 0;
                    s.forEach((t) => {
                        t.isRecording() && (t.setStatus({ code: pt, message: "cancelled" }), t.end(e), Pe && L.log("[Tracing] Cancelling span since span ended early", JSON.stringify(t, void 0, 2)));
                        const n = wt(t),
                            { timestamp: r = 0, start_timestamp: o = 0 } = n,
                            i = o <= e,
                            s = r - o <= (l + u) / 1e3;
                        if (Pe) {
                            const e = JSON.stringify(t, void 0, 2);
                            i ? s || L.log("[Tracing] Discarding span since it finished after idle span final timeout", e) : L.log("[Tracing] Discarding span since it happened after idle span was finished", e);
                        }
                        (s && i) ||
                            (!(function (e, t) {
                                e[xt] && e[xt].delete(t);
                            })(g, t),
                            d++);
                    }),
                        d > 0 && g.setAttribute("sentry.idle_span_discarded_spans", d);
                }
                return (
                    (g.end = new Proxy(g.end, {
                        apply(e, t, n) {
                            p && p(g);
                            const [r, ...o] = n,
                                i = _t(r || ae()),
                                s = Tt(g).filter((e) => e !== g);
                            if (!s.length) return b(i), Reflect.apply(e, t, [i, ...o]);
                            const a = s.map((e) => wt(e).timestamp).filter((e) => !!e),
                                c = a.length ? Math.max(...a) : void 0,
                                u = wt(g).start_timestamp,
                                d = Math.min(u ? u + l / 1e3 : 1 / 0, Math.max(u || -1 / 0, Math.min(i, c || 1 / 0)));
                            return b(d), Reflect.apply(e, t, [d, ...o]);
                        },
                    })),
                    c.push(
                        f.on("spanStart", (e) => {
                            if (o || e === g || wt(e).timestamp) return;
                            var t;
                            Tt(g).includes(e) && ((t = e.spanContext().spanId), v(), n.set(t, !0), _(ae() + d / 1e3));
                        })
                    ),
                    c.push(
                        f.on("spanEnd", (e) => {
                            var t;
                            o || ((t = e.spanContext().spanId), n.has(t) && n.delete(t), 0 === n.size && y(ae() + u / 1e3));
                        })
                    ),
                    c.push(
                        f.on("idleSpanEnableAutoFinish", (e) => {
                            e === g && ((s = !0), y(), n.size && _());
                        })
                    ),
                    t.disableAutoFinish || y(),
                    setTimeout(() => {
                        o || (g.setStatus({ code: pt, message: "deadline_exceeded" }), (i = Gh), g.end());
                    }, l),
                    g
                );
            }
            const Xh = { ...Wh, instrumentNavigation: !0, instrumentPageLoad: !0, markBackgroundSpan: !0, enableLongTask: !0, enableLongAnimationFrame: !1, enableInp: !0, _experiments: {}, ...kh },
                Qh = (e = {}) => {
                    En();
                    const {
                            enableInp: t,
                            enableLongTask: n,
                            enableLongAnimationFrame: o,
                            _experiments: { enableInteractions: i },
                            beforeStartSpan: c,
                            idleTimeout: u,
                            finalTimeout: l,
                            childSpanTimeout: d,
                            markBackgroundSpan: p,
                            traceFetch: f,
                            traceXHR: h,
                            shouldCreateSpanForRequest: m,
                            enableHTTPTimings: g,
                            instrumentPageLoad: v,
                            instrumentNavigation: y,
                        } = { ...Xh, ...e },
                        _ = Fh();
                    t && zh(),
                        o && PerformanceObserver.supportedEntryTypes.includes("long-animation-frame")
                            ? new PerformanceObserver((e) => {
                                  for (const t of e.getEntries()) {
                                      if (!At()) return;
                                      if (!t.scripts[0]) return;
                                      const e = Rh(ue + t.startTime),
                                          n = Rh(t.duration),
                                          r = { [s]: "auto.ui.browser.metrics" },
                                          o = t.scripts[0];
                                      if (o) {
                                          const { invoker: e, invokerType: t, sourceURL: n, sourceFunctionName: i, sourceCharPosition: s } = o;
                                          (r["browser.script.invoker"] = e), (r["browser.script.invoker_type"] = t), n && (r["code.filepath"] = n), i && (r["code.function"] = i), -1 !== s && (r["browser.script.source_char_position"] = s);
                                      }
                                      const i = fr({ name: "Main UI thread blocked", op: "ui.long-animation-frame", startTime: e, attributes: r });
                                      i && i.end(e + n);
                                  }
                              }).observe({ type: "long-animation-frame", buffered: !0 })
                            : n &&
                              ha("longtask", ({ entries: e }) => {
                                  for (const t of e) {
                                      if (!At()) return;
                                      const e = Rh(ue + t.startTime),
                                          n = Rh(t.duration),
                                          r = fr({ name: "Main UI thread blocked", op: "ui.long-task", startTime: e, attributes: { [s]: "auto.ui.browser.metrics" } });
                                      r && r.end(e + n);
                                  }
                              }),
                        i &&
                            ha("event", ({ entries: e }) => {
                                for (const t of e) {
                                    if (!At()) return;
                                    if ("click" === t.name) {
                                        const e = Rh(ue + t.startTime),
                                            n = Rh(t.duration),
                                            r = { name: C(t.target), op: `ui.interaction.${t.name}`, startTime: e, attributes: { [s]: "auto.ui.browser.metrics" } },
                                            o = R(t.target);
                                        o && (r.attributes["ui.component_name"] = o);
                                        const i = fr(r);
                                        i && i.end(e + n);
                                    }
                                }
                            });
                    const b = { name: void 0, source: void 0 };
                    function w(e, t) {
                        const n = "pageload" === t.op,
                            o = c ? c(t) : t,
                            i = o.attributes || {};
                        t.name !== o.name && ((i[r] = "custom"), (o.attributes = i)), (b.name = o.name), (b.source = i[r]);
                        const s = Jh(o, {
                            idleTimeout: u,
                            finalTimeout: l,
                            childSpanTimeout: d,
                            disableAutoFinish: n,
                            beforeSpanEnd: (e) => {
                                _(), jh(e);
                            },
                        });
                        function a() {
                            ["interactive", "complete"].includes(_o.document.readyState) && e.emit("idleSpanEnableAutoFinish", s);
                        }
                        return (
                            n &&
                                _o.document &&
                                (_o.document.addEventListener("readystatechange", () => {
                                    a();
                                }),
                                a()),
                            s
                        );
                    }
                    return {
                        name: "BrowserTracing",
                        afterAllSetup(e) {
                            let n,
                                o = _o.location && _o.location.href;
                            e.on("startNavigationSpan", (t) => {
                                Me() === e && (n && !wt(n).timestamp && (To && L.log(`[Tracing] Finishing current root span with op: ${wt(n).op}`), n.end()), (n = w(e, { op: "navigation", ...t })));
                            }),
                                e.on("startPageLoadSpan", (t, r = {}) => {
                                    if (Me() !== e) return;
                                    n && !wt(n).timestamp && (To && L.log(`[Tracing] Finishing current root span with op: ${wt(n).op}`), n.end());
                                    const o = st(r.sentryTrace || tm("sentry-trace"), r.baggage || tm("baggage"));
                                    Ee().setPropagationContext(o), (n = w(e, { op: "pageload", ...t }));
                                }),
                                e.on("spanEnd", (e) => {
                                    const t = wt(e).op;
                                    if (e !== Ct(e) || ("navigation" !== t && "pageload" !== t)) return;
                                    const n = Ee(),
                                        r = n.getPropagationContext();
                                    n.setPropagationContext({ ...r, sampled: void 0 !== r.sampled ? r.sampled : St(e), dsc: r.dsc || Pt(e) });
                                }),
                                _o.location &&
                                    (v && Zh(e, { name: _o.location.pathname, startTime: ue ? ue / 1e3 : void 0, attributes: { [r]: "url", [s]: "auto.pageload.browser" } }),
                                    y &&
                                        vi(({ to: t, from: n }) => {
                                            void 0 === n && o && -1 !== o.indexOf(t) ? (o = void 0) : n !== t && ((o = void 0), em(e, { name: _o.location.pathname, attributes: { [r]: "url", [s]: "auto.navigation.browser" } }));
                                        })),
                                p &&
                                    (_o && _o.document
                                        ? _o.document.addEventListener("visibilitychange", () => {
                                              const e = At();
                                              if (!e) return;
                                              const t = Ct(e);
                                              if (_o.document.hidden && t) {
                                                  const e = "cancelled",
                                                      { op: n, status: r } = wt(t);
                                                  To && L.log(`[Tracing] Transaction: ${e} -> since tab moved to the background, op: ${n}`),
                                                      r || t.setStatus({ code: pt, message: e }),
                                                      t.setAttribute("sentry.cancellation_reason", "document.hidden"),
                                                      t.end();
                                              }
                                          })
                                        : To && L.warn("[Tracing] Could not set up background tab detection due to lack of global document")),
                                i &&
                                    (function (e, t, n, o) {
                                        let i;
                                        const s = () => {
                                            const s = "ui.action.click",
                                                c = At(),
                                                u = c && Ct(c);
                                            if (u) {
                                                const e = wt(u).op;
                                                if (["navigation", "pageload"].includes(e)) return void (To && L.warn(`[Tracing] Did not create ${s} span because a pageload or navigation span is in progress.`));
                                            }
                                            i && (i.setAttribute(a, "interactionInterrupted"), i.end(), (i = void 0)),
                                                o.name
                                                    ? (i = Jh({ name: o.name, op: s, attributes: { [r]: o.source || "url" } }, { idleTimeout: e, finalTimeout: t, childSpanTimeout: n }))
                                                    : To && L.warn(`[Tracing] Did not create ${s} transaction because _latestRouteName is missing.`);
                                        };
                                        _o.document && addEventListener("click", s, { once: !1, capture: !0 });
                                    })(u, l, d, b),
                                t &&
                                    (function () {
                                        const e = ({ entries: e }) => {
                                            const t = At(),
                                                n = t && Ct(t);
                                            e.forEach((e) => {
                                                if (
                                                    !(function (e) {
                                                        return "duration" in e;
                                                    })(e) ||
                                                    !n
                                                )
                                                    return;
                                                const t = e.interactionId;
                                                if (null != t && !qh.has(t)) {
                                                    if (Bh.length > 10) {
                                                        const e = Bh.shift();
                                                        qh.delete(e);
                                                    }
                                                    Bh.push(t), qh.set(t, n);
                                                }
                                            });
                                        };
                                        ha("event", e), ha("first-input", e);
                                    })(),
                                xh({ traceFetch: f, traceXHR: h, tracePropagationTargets: e.getOptions().tracePropagationTargets, shouldCreateSpanForRequest: m, enableHTTPTimings: g });
                        },
                    };
                };
            function Zh(e, t, n) {
                e.emit("startPageLoadSpan", t, n), Ee().setTransactionName(t.name);
                const r = At();
                return "pageload" === (r && wt(r).op) ? r : void 0;
            }
            function em(e, t) {
                Ie().setPropagationContext(oe()), Ee().setPropagationContext(oe()), e.emit("startNavigationSpan", t), Ee().setTransactionName(t.name);
                const n = At();
                return "navigation" === (n && wt(n).op) ? n : void 0;
            }
            function tm(e) {
                const t = ((n = `meta[name=${e}]`), I.document && I.document.querySelector ? I.document.querySelector(n) : null);
                var n;
                return t ? t.getAttribute("content") : void 0;
            }
            const nm = 100,
                rm = 5e3,
                om = 36e5;
            function im(e) {
                function t(...e) {
                    Pe && L.info("[Offline]:", ...e);
                }
                return (n) => {
                    const r = e(n);
                    if (!n.createStore) throw new Error("No `createStore` function was provided");
                    const o = n.createStore(n);
                    let i,
                        s = rm;
                    function a(e) {
                        i && clearTimeout(i),
                            (i = setTimeout(async () => {
                                i = void 0;
                                const e = await o.shift();
                                e &&
                                    (t("Attempting to send previously queued event"),
                                    (e[0].sent_at = new Date().toISOString()),
                                    u(e, !0).catch((e) => {
                                        t("Failed to retry sending", e);
                                    }));
                            }, e)),
                            "number" != typeof i && i.unref && i.unref();
                    }
                    function c() {
                        i || (a(s), (s = Math.min(2 * s, om)));
                    }
                    async function u(e, i = !1) {
                        if (!i && Vn(e, ["replay_event", "replay_recording"])) return await o.push(e), a(nm), {};
                        try {
                            const t = await r.send(e);
                            let n = nm;
                            if (t)
                                if (t.headers && t.headers["retry-after"]) n = Ir(t.headers["retry-after"]);
                                else if (t.headers && t.headers["x-sentry-rate-limits"]) n = 6e4;
                                else if ((t.statusCode || 0) >= 400) return t;
                            return a(n), (s = rm), t;
                        } catch (r) {
                            if (
                                await (function (e, t, r) {
                                    return !Vn(e, ["client_report"]) && (!n.shouldStore || n.shouldStore(e, t, r));
                                })(e, r, s)
                            )
                                return i ? await o.unshift(e) : await o.push(e), c(), t("Error sending. Event queued.", r), {};
                            throw r;
                        }
                    }
                    return n.flushAtStartup && c(), { send: u, flush: (e) => r.flush(e) };
                };
            }
            function sm(e) {
                return new Promise((t, n) => {
                    (e.oncomplete = e.onsuccess = () => t(e.result)), (e.onabort = e.onerror = () => n(e.error));
                });
            }
            function am(e) {
                return sm(e.getAllKeys());
            }
            function cm(e) {
                let t;
                function n() {
                    return (
                        null == t &&
                            (t = (function (e, t) {
                                const n = indexedDB.open(e);
                                n.onupgradeneeded = () => n.result.createObjectStore(t);
                                const r = sm(n);
                                return (e) => r.then((n) => e(n.transaction(t, "readwrite").objectStore(t)));
                            })(e.dbName || "sentry-offline", e.storeName || "queue")),
                        t
                    );
                }
                return {
                    push: async (t) => {
                        try {
                            const r = await Gn(t);
                            await (function (e, t, n) {
                                return e((e) =>
                                    am(e).then((r) => {
                                        if (!(r.length >= n)) return e.put(t, Math.max(...r, 0) + 1), sm(e.transaction);
                                    })
                                );
                            })(n(), r, e.maxQueueSize || 30);
                        } catch (e) {}
                    },
                    unshift: async (t) => {
                        try {
                            const r = await Gn(t);
                            await (function (e, t, n) {
                                return e((e) =>
                                    am(e).then((r) => {
                                        if (!(r.length >= n)) return e.put(t, Math.min(...r, 0) - 1), sm(e.transaction);
                                    })
                                );
                            })(n(), r, e.maxQueueSize || 30);
                        } catch (e) {}
                    },
                    shift: async () => {
                        try {
                            const e = await (function (e) {
                                return e((e) =>
                                    am(e).then((t) => {
                                        const n = t[0];
                                        if (null != n) return sm(e.get(n)).then((t) => (e.delete(n), sm(e.transaction).then(() => t)));
                                    })
                                );
                            })(n());
                            if (e) return Kn(e);
                        } catch (e) {}
                    },
                };
            }
            function um(e = Xo) {
                return (function (e) {
                    return (t) => e({ ...t, createStore: cm });
                })(im(e));
            }
            const lm = 1e6,
                dm = String(0),
                pm = "main";
            let fm = "",
                hm = "",
                mm = "",
                gm = (_o.navigator && _o.navigator.userAgent) || "",
                vm = "";
            const ym = (_o.navigator && _o.navigator.language) || (_o.navigator && _o.navigator.languages && _o.navigator.languages[0]) || "";
            const _m = _o.navigator && _o.navigator.userAgentData;
            var bm;
            function wm(e) {
                return (function (e) {
                    return !("thread_metadata" in e);
                })(e)
                    ? (function (e) {
                          let t,
                              n = 0;
                          const r = { samples: [], stacks: [], frames: [], thread_metadata: { [dm]: { name: pm } } },
                              o = e.samples[0];
                          if (!o) return r;
                          const i = o.timestamp,
                              s = "number" == typeof performance.timeOrigin ? performance.timeOrigin : ue || 0,
                              a = s - (ue || s);
                          return (
                              e.samples.forEach((o, s) => {
                                  if (void 0 === o.stackId) return void 0 === t && ((t = n), (r.stacks[t] = []), n++), void (r.samples[s] = { elapsed_since_start_ns: ((o.timestamp + a - i) * lm).toFixed(0), stack_id: t, thread_id: dm });
                                  let c = e.stacks[o.stackId];
                                  const u = [];
                                  for (; c; ) {
                                      u.push(c.frameId);
                                      const t = e.frames[c.frameId];
                                      t && void 0 === r.frames[c.frameId] && (r.frames[c.frameId] = { function: t.name, abs_path: "number" == typeof t.resourceId ? e.resources[t.resourceId] : void 0, lineno: t.line, colno: t.column }),
                                          (c = void 0 === c.parentId ? void 0 : e.stacks[c.parentId]);
                                  }
                                  const l = { elapsed_since_start_ns: ((o.timestamp + a - i) * lm).toFixed(0), stack_id: n, thread_id: dm };
                                  (r.stacks[n] = u), (r.samples[s] = l), n++;
                              }),
                              r
                          );
                      })(e)
                    : e;
            }
            function Sm(e, t, n, r) {
                if ("transaction" !== r.type) throw new TypeError("Profiling events may only be attached to transactions, this should never occur.");
                if (null == n) throw new TypeError(`Cannot construct profiling event envelope without a valid profile. Got ${n} instead.`);
                const o = (function (e) {
                        const t = e && e.contexts && e.contexts.trace && e.contexts.trace.trace_id;
                        return "string" == typeof t && 32 !== t.length && To && L.log(`[Profiling] Invalid traceId: ${t} on profiled event`), "string" != typeof t ? "" : t;
                    })(r),
                    i = wm(n),
                    s = t || ("number" == typeof r.start_timestamp ? 1e3 * r.start_timestamp : 1e3 * ae()),
                    a = "number" == typeof r.timestamp ? 1e3 * r.timestamp : 1e3 * ae();
                return {
                    event_id: e,
                    timestamp: new Date(s).toISOString(),
                    platform: "javascript",
                    version: "1",
                    release: r.release || "",
                    environment: r.environment || Ne,
                    runtime: { name: "javascript", version: _o.navigator.userAgent },
                    os: { name: fm, version: hm, build_number: gm },
                    device: { locale: ym, model: vm, manufacturer: gm, architecture: mm, is_emulator: !1 },
                    debug_meta: { images: Em(n.resources) },
                    profile: i,
                    transactions: [{ name: r.transaction || "", id: r.event_id || X(), trace_id: o, active_thread_id: dm, relative_start_ns: "0", relative_end_ns: (1e6 * (a - s)).toFixed(0) }],
                };
            }
            function km(e) {
                return "pageload" === wt(e).op;
            }
            "object" == typeof (bm = _m) &&
                null !== bm &&
                "getHighEntropyValues" in bm &&
                _m
                    .getHighEntropyValues(["architecture", "model", "platform", "platformVersion", "fullVersionList"])
                    .then((e) => {
                        if (((fm = e.platform || ""), (mm = e.architecture || ""), (vm = e.model || ""), (hm = e.platformVersion || ""), e.fullVersionList && e.fullVersionList.length > 0)) {
                            const t = e.fullVersionList[e.fullVersionList.length - 1];
                            gm = `${t.brand} ${t.version}`;
                        }
                    })
                    .catch((e) => {});
            const xm = new WeakMap();
            function Em(e) {
                const t = x._sentryDebugIds;
                if (!t) return [];
                const n = Me(),
                    r = n && n.getOptions(),
                    o = r && r.stackParser;
                if (!o) return [];
                let i;
                const s = xm.get(o);
                s ? (i = s) : ((i = new Map()), xm.set(o, i));
                const a = Object.keys(t).reduce((e, n) => {
                        let r;
                        const s = i.get(n);
                        s ? (r = s) : ((r = o(n)), i.set(n, r));
                        for (let o = r.length - 1; o >= 0; o--) {
                            const i = r[o],
                                s = i && i.filename;
                            if (i && s) {
                                e[s] = t[n];
                                break;
                            }
                        }
                        return e;
                    }, {}),
                    c = [];
                for (const t of e) t && a[t] && c.push({ type: "sourcemap", code_file: t, debug_id: a[t] });
                return c;
            }
            let Im = !1;
            const Tm = 3e4;
            function Cm(e) {
                if (Im) return To && L.log("[Profiling] Profiling has been disabled for the duration of the current user session."), !1;
                if (!e.isRecording()) return To && L.log("[Profiling] Discarding profile because transaction was not sampled."), !1;
                const t = Me(),
                    n = t && t.getOptions();
                if (!n) return To && L.log("[Profiling] Profiling disabled, no options found."), !1;
                const r = n.profilesSampleRate;
                if (
                    !(("number" != typeof (o = r) && "boolean" != typeof o) || ("number" == typeof o && isNaN(o))
                        ? (To && L.warn(`[Profiling] Invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(o)} of type ${JSON.stringify(typeof o)}.`), 0)
                        : !0 === o || !1 === o || !(o < 0 || o > 1) || (To && L.warn(`[Profiling] Invalid sample rate. Sample rate must be between 0 and 1. Got ${o}.`), 0))
                )
                    return To && L.warn("[Profiling] Discarding profile because of invalid sample rate."), !1;
                var o;
                if (!r) return To && L.log("[Profiling] Discarding profile because a negative sampling decision was inherited or profileSampleRate is set to 0"), !1;
                return !!(!0 === r || Math.random() < r) || (To && L.log(`[Profiling] Discarding profile because it's not included in the random sample (sampling rate = ${Number(r)})`), !1);
            }
            function Am(e, t, n, r) {
                return (function (e) {
                    return e.samples.length < 2
                        ? (To && L.log("[Profiling] Discarding profile because it contains less than 2 samples"), !1)
                        : !!e.frames.length || (To && L.log("[Profiling] Discarding profile because it contains no frames"), !1);
                })(n)
                    ? Sm(e, t, n, r)
                    : null;
            }
            const Mm = new Map();
            function Rm(e) {
                const t = Mm.get(e);
                return t && Mm.delete(e), t;
            }
            function Om(e) {
                let t;
                km(e) && (t = 1e3 * ae());
                const n = (function () {
                    const e = _o.Profiler;
                    if ("function" != typeof e) return void (To && L.log("[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object."));
                    const t = Math.floor(Tm / 10);
                    try {
                        return new e({ sampleInterval: 10, maxBufferSize: t });
                    } catch (e) {
                        To &&
                            (L.log("[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header."),
                            L.log("[Profiling] Disabling profiling for current user session.")),
                            (Im = !0);
                    }
                })();
                if (!n) return;
                To && L.log(`[Profiling] started profiling span: ${wt(e).description}`);
                const r = X();
                async function o() {
                    if (e && n)
                        return n
                            .stop()
                            .then((t) => {
                                i && (_o.clearTimeout(i), (i = void 0)),
                                    To && L.log(`[Profiling] stopped profiling of span: ${wt(e).description}`),
                                    t
                                        ? (function (e, t) {
                                              if ((Mm.set(e, t), Mm.size > 30)) {
                                                  const e = Mm.keys().next().value;
                                                  Mm.delete(e);
                                              }
                                          })(r, t)
                                        : To && L.log(`[Profiling] profiler returned null profile for: ${wt(e).description}`, "this may indicate an overlapping span or a call to stopProfiling with a profile title that was never started");
                            })
                            .catch((e) => {
                                To && L.log("[Profiling] error while stopping profiler:", e);
                            });
                }
                Ee().setContext("profile", { profile_id: r, start_timestamp: t });
                let i = _o.setTimeout(() => {
                    To && L.log("[Profiling] max profile duration elapsed, stopping profiling for:", wt(e).description), o();
                }, Tm);
                const s = e.end.bind(e);
                e.end = function () {
                    return e
                        ? (o().then(
                              () => {
                                  s();
                              },
                              () => {
                                  s();
                              }
                          ),
                          e)
                        : s();
                };
            }
            const Nm = () => ({
                name: "BrowserProfiling",
                setup(e) {
                    const t = At(),
                        n = t && Ct(t);
                    n && km(n) && Cm(n) && Om(n),
                        e.on("spanStart", (e) => {
                            e === Ct(e) && Cm(e) && Om(e);
                        }),
                        e.on("beforeEnvelope", (e) => {
                            if (!Mm.size) return;
                            const t = (function (e) {
                                const t = [];
                                return (
                                    Wn(e, (e, n) => {
                                        if ("transaction" === n)
                                            for (let n = 1; n < e.length; n++) {
                                                const r = e[n];
                                                r && r.contexts && r.contexts.profile && r.contexts.profile.profile_id && t.push(e[n]);
                                            }
                                    }),
                                    t
                                );
                            })(e);
                            if (!t.length) return;
                            const n = [];
                            for (const e of t) {
                                const t = e && e.contexts,
                                    r = t && t.profile && t.profile.profile_id,
                                    o = t && t.profile && t.profile.start_timestamp;
                                if ("string" != typeof r) {
                                    To && L.log("[Profiling] cannot find profile for a span without a profile context");
                                    continue;
                                }
                                if (!r) {
                                    To && L.log("[Profiling] cannot find profile for a span without a profile context");
                                    continue;
                                }
                                t && t.profile && delete t.profile;
                                const i = Rm(r);
                                if (!i) {
                                    To && L.log(`[Profiling] Could not retrieve profile for span: ${r}`);
                                    continue;
                                }
                                const s = Am(r, o, i, e);
                                s && n.push(s);
                            }
                            !(function (e, t) {
                                if (!t.length) return e;
                                for (const n of t) e[1].push([{ type: "profile" }, n]);
                            })(e, n);
                        });
                },
            });
            let Pm = !0;
            function Dm(e) {
                if (!e) return !1;
                try {
                    const { pathname: t } = new URL(e, location.origin);
                    return t === location.pathname;
                } catch {
                    return !1;
                }
            }
            function Lm(e) {
                return globalThis.chrome?.runtime?.getManifest?.();
            }
            function Fm(e) {
                let t;
                return () => ((Pm && void 0 !== t) || (t = e()), t);
            }
            const jm = Fm(() => ["about:", "http:", "https:"].includes(location.protocol)),
                $m = Fm(() => "object" == typeof globalThis.chrome?.extension),
                Um = Fm(() => $m() && jm()),
                Bm = () => qm() || zm(),
                qm = Fm(() => {
                    const e = Lm();
                    return !(!e || !Dm(e.background_page ?? e.background?.page)) || Boolean(e?.background?.scripts && Dm("/_generated_background_page.html"));
                }),
                zm = Fm(() => Dm(Lm()?.background?.service_worker)),
                Hm =
                    (Fm(() => qm() && 2 === Lm()?.manifest_version && !1 !== Lm()?.background?.persistent),
                    Fm(() => {
                        const e = Lm()?.options_ui?.page;
                        if ("string" != typeof e) return !1;
                        return new URL(e, location.origin).pathname === location.pathname;
                    })),
                Wm = Fm(() => {
                    const e = Lm()?.side_panel?.default_path;
                    if ("string" != typeof e) return !1;
                    return new URL(e, location.origin).pathname === location.pathname;
                }),
                Vm = Fm(() => {
                    const e = $m() && chrome.devtools && Lm()?.devtools_page;
                    if ("string" != typeof e) return !1;
                    return new URL(e, location.origin).pathname === location.pathname;
                }),
                Ym = { contentScript: Um, background: Bm, options: Hm, sidePanel: Wm, devTools: () => Boolean(globalThis.chrome?.devtools), devToolsPage: Vm, extension: $m, web: jm };
            Object.keys(Ym);
            const Gm = e;
            var Km = n(9775),
                Jm = n.n(Km);
            const Xm = {
                lessThanXSeconds: { one: "less than a second", other: "less than {{count}} seconds" },
                xSeconds: { one: "1 second", other: "{{count}} seconds" },
                halfAMinute: "half a minute",
                lessThanXMinutes: { one: "less than a minute", other: "less than {{count}} minutes" },
                xMinutes: { one: "1 minute", other: "{{count}} minutes" },
                aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" },
                xHours: { one: "1 hour", other: "{{count}} hours" },
                xDays: { one: "1 day", other: "{{count}} days" },
                aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" },
                xWeeks: { one: "1 week", other: "{{count}} weeks" },
                aboutXMonths: { one: "about 1 month", other: "about {{count}} months" },
                xMonths: { one: "1 month", other: "{{count}} months" },
                aboutXYears: { one: "about 1 year", other: "about {{count}} years" },
                xYears: { one: "1 year", other: "{{count}} years" },
                overXYears: { one: "over 1 year", other: "over {{count}} years" },
                almostXYears: { one: "almost 1 year", other: "almost {{count}} years" },
            };
            function Qm(e) {
                return (t = {}) => {
                    const n = t.width ? String(t.width) : e.defaultWidth;
                    return e.formats[n] || e.formats[e.defaultWidth];
                };
            }
            const Zm = {
                    date: Qm({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }),
                    time: Qm({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }),
                    dateTime: Qm({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }),
                },
                eg = { lastWeek: "'last' eeee 'at' p", yesterday: "'yesterday at' p", today: "'today at' p", tomorrow: "'tomorrow at' p", nextWeek: "eeee 'at' p", other: "P" };
            function tg(e) {
                return (t, n) => {
                    let r;
                    if ("formatting" === (n?.context ? String(n.context) : "standalone") && e.formattingValues) {
                        const t = e.defaultFormattingWidth || e.defaultWidth,
                            o = n?.width ? String(n.width) : t;
                        r = e.formattingValues[o] || e.formattingValues[t];
                    } else {
                        const t = e.defaultWidth,
                            o = n?.width ? String(n.width) : e.defaultWidth;
                        r = e.values[o] || e.values[t];
                    }
                    return r[e.argumentCallback ? e.argumentCallback(t) : t];
                };
            }
            function ng(e) {
                return (t, n = {}) => {
                    const r = n.width,
                        o = (r && e.matchPatterns[r]) || e.matchPatterns[e.defaultMatchWidth],
                        i = t.match(o);
                    if (!i) return null;
                    const s = i[0],
                        a = (r && e.parsePatterns[r]) || e.parsePatterns[e.defaultParseWidth],
                        c = Array.isArray(a)
                            ? (function (e, t) {
                                  for (let n = 0; n < e.length; n++) if (t(e[n])) return n;
                                  return;
                              })(a, (e) => e.test(s))
                            : (function (e, t) {
                                  for (const n in e) if (Object.prototype.hasOwnProperty.call(e, n) && t(e[n])) return n;
                                  return;
                              })(a, (e) => e.test(s));
                    let u;
                    (u = e.valueCallback ? e.valueCallback(c) : c), (u = n.valueCallback ? n.valueCallback(u) : u);
                    return { value: u, rest: t.slice(s.length) };
                };
            }
            var rg;
            const og = {
                code: "en-US",
                formatDistance: (e, t, n) => {
                    let r;
                    const o = Xm[e];
                    return (r = "string" == typeof o ? o : 1 === t ? o.one : o.other.replace("{{count}}", t.toString())), n?.addSuffix ? (n.comparison && n.comparison > 0 ? "in " + r : r + " ago") : r;
                },
                formatLong: Zm,
                formatRelative: (e, t, n, r) => eg[e],
                localize: {
                    ordinalNumber: (e, t) => {
                        const n = Number(e),
                            r = n % 100;
                        if (r > 20 || r < 10)
                            switch (r % 10) {
                                case 1:
                                    return n + "st";
                                case 2:
                                    return n + "nd";
                                case 3:
                                    return n + "rd";
                            }
                        return n + "th";
                    },
                    era: tg({ values: { narrow: ["B", "A"], abbreviated: ["BC", "AD"], wide: ["Before Christ", "Anno Domini"] }, defaultWidth: "wide" }),
                    quarter: tg({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"] }, defaultWidth: "wide", argumentCallback: (e) => e - 1 }),
                    month: tg({
                        values: {
                            narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                            abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                        },
                        defaultWidth: "wide",
                    }),
                    day: tg({
                        values: {
                            narrow: ["S", "M", "T", "W", "T", "F", "S"],
                            short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                            abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                            wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                        },
                        defaultWidth: "wide",
                    }),
                    dayPeriod: tg({
                        values: {
                            narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" },
                            abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" },
                            wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" },
                        },
                        defaultWidth: "wide",
                        formattingValues: {
                            narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" },
                            abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" },
                            wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" },
                        },
                        defaultFormattingWidth: "wide",
                    }),
                },
                match: {
                    ordinalNumber:
                        ((rg = { matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: (e) => parseInt(e, 10) }),
                        (e, t = {}) => {
                            const n = e.match(rg.matchPattern);
                            if (!n) return null;
                            const r = n[0],
                                o = e.match(rg.parsePattern);
                            if (!o) return null;
                            let i = rg.valueCallback ? rg.valueCallback(o[0]) : o[0];
                            return (i = t.valueCallback ? t.valueCallback(i) : i), { value: i, rest: e.slice(r.length) };
                        }),
                    era: ng({
                        matchPatterns: { narrow: /^(b|a)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(before christ|before common era|anno domini|common era)/i },
                        defaultMatchWidth: "wide",
                        parsePatterns: { any: [/^b/i, /^(a|c)/i] },
                        defaultParseWidth: "any",
                    }),
                    quarter: ng({
                        matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](th|st|nd|rd)? quarter/i },
                        defaultMatchWidth: "wide",
                        parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] },
                        defaultParseWidth: "any",
                        valueCallback: (e) => e + 1,
                    }),
                    month: ng({
                        matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i, wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i },
                        defaultMatchWidth: "wide",
                        parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] },
                        defaultParseWidth: "any",
                    }),
                    day: ng({
                        matchPatterns: { narrow: /^[smtwf]/i, short: /^(su|mo|tu|we|th|fr|sa)/i, abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i, wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i },
                        defaultMatchWidth: "wide",
                        parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] },
                        defaultParseWidth: "any",
                    }),
                    dayPeriod: ng({
                        matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i },
                        defaultMatchWidth: "any",
                        parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } },
                        defaultParseWidth: "any",
                    }),
                },
                options: { weekStartsOn: 0, firstWeekContainsDate: 1 },
            };
            let ig = {};
            function sg() {
                return ig;
            }
            Math.pow(10, 8);
            const ag = 6048e5,
                cg = 864e5;
            function ug(e) {
                const t = Object.prototype.toString.call(e);
                return e instanceof Date || ("object" == typeof e && "[object Date]" === t)
                    ? new e.constructor(+e)
                    : "number" == typeof e || "[object Number]" === t || "string" == typeof e || "[object String]" === t
                    ? new Date(e)
                    : new Date(NaN);
            }
            function lg(e) {
                const t = ug(e);
                return t.setHours(0, 0, 0, 0), t;
            }
            function dg(e) {
                const t = ug(e),
                    n = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
                return n.setUTCFullYear(t.getFullYear()), +e - +n;
            }
            function pg(e, t) {
                const n = lg(e),
                    r = lg(t),
                    o = +n - dg(n),
                    i = +r - dg(r);
                return Math.round((o - i) / cg);
            }
            function fg(e, t) {
                return e instanceof Date ? new e.constructor(t) : new Date(t);
            }
            function hg(e) {
                const t = ug(e),
                    n = fg(e, 0);
                return n.setFullYear(t.getFullYear(), 0, 1), n.setHours(0, 0, 0, 0), n;
            }
            function mg(e) {
                const t = ug(e);
                return pg(t, hg(t)) + 1;
            }
            function gg(e, t) {
                const n = sg(),
                    r = t?.weekStartsOn ?? t?.locale?.options?.weekStartsOn ?? n.weekStartsOn ?? n.locale?.options?.weekStartsOn ?? 0,
                    o = ug(e),
                    i = o.getDay(),
                    s = (i < r ? 7 : 0) + i - r;
                return o.setDate(o.getDate() - s), o.setHours(0, 0, 0, 0), o;
            }
            function vg(e) {
                return gg(e, { weekStartsOn: 1 });
            }
            function yg(e) {
                const t = ug(e),
                    n = t.getFullYear(),
                    r = fg(e, 0);
                r.setFullYear(n + 1, 0, 4), r.setHours(0, 0, 0, 0);
                const o = vg(r),
                    i = fg(e, 0);
                i.setFullYear(n, 0, 4), i.setHours(0, 0, 0, 0);
                const s = vg(i);
                return t.getTime() >= o.getTime() ? n + 1 : t.getTime() >= s.getTime() ? n : n - 1;
            }
            function _g(e) {
                const t = yg(e),
                    n = fg(e, 0);
                return n.setFullYear(t, 0, 4), n.setHours(0, 0, 0, 0), vg(n);
            }
            function bg(e) {
                const t = ug(e),
                    n = +vg(t) - +_g(t);
                return Math.round(n / ag) + 1;
            }
            function wg(e, t) {
                const n = ug(e),
                    r = n.getFullYear(),
                    o = sg(),
                    i = t?.firstWeekContainsDate ?? t?.locale?.options?.firstWeekContainsDate ?? o.firstWeekContainsDate ?? o.locale?.options?.firstWeekContainsDate ?? 1,
                    s = fg(e, 0);
                s.setFullYear(r + 1, 0, i), s.setHours(0, 0, 0, 0);
                const a = gg(s, t),
                    c = fg(e, 0);
                c.setFullYear(r, 0, i), c.setHours(0, 0, 0, 0);
                const u = gg(c, t);
                return n.getTime() >= a.getTime() ? r + 1 : n.getTime() >= u.getTime() ? r : r - 1;
            }
            function Sg(e, t) {
                const n = sg(),
                    r = t?.firstWeekContainsDate ?? t?.locale?.options?.firstWeekContainsDate ?? n.firstWeekContainsDate ?? n.locale?.options?.firstWeekContainsDate ?? 1,
                    o = wg(e, t),
                    i = fg(e, 0);
                i.setFullYear(o, 0, r), i.setHours(0, 0, 0, 0);
                return gg(i, t);
            }
            function kg(e, t) {
                const n = ug(e),
                    r = +gg(n, t) - +Sg(n, t);
                return Math.round(r / ag) + 1;
            }
            function xg(e, t) {
                return (e < 0 ? "-" : "") + Math.abs(e).toString().padStart(t, "0");
            }
            const Eg = {
                    y(e, t) {
                        const n = e.getFullYear(),
                            r = n > 0 ? n : 1 - n;
                        return xg("yy" === t ? r % 100 : r, t.length);
                    },
                    M(e, t) {
                        const n = e.getMonth();
                        return "M" === t ? String(n + 1) : xg(n + 1, 2);
                    },
                    d: (e, t) => xg(e.getDate(), t.length),
                    a(e, t) {
                        const n = e.getHours() / 12 >= 1 ? "pm" : "am";
                        switch (t) {
                            case "a":
                            case "aa":
                                return n.toUpperCase();
                            case "aaa":
                                return n;
                            case "aaaaa":
                                return n[0];
                            default:
                                return "am" === n ? "a.m." : "p.m.";
                        }
                    },
                    h: (e, t) => xg(e.getHours() % 12 || 12, t.length),
                    H: (e, t) => xg(e.getHours(), t.length),
                    m: (e, t) => xg(e.getMinutes(), t.length),
                    s: (e, t) => xg(e.getSeconds(), t.length),
                    S(e, t) {
                        const n = t.length,
                            r = e.getMilliseconds();
                        return xg(Math.trunc(r * Math.pow(10, n - 3)), t.length);
                    },
                },
                Ig = "midnight",
                Tg = "noon",
                Cg = "morning",
                Ag = "afternoon",
                Mg = "evening",
                Rg = "night",
                Og = {
                    G: function (e, t, n) {
                        const r = e.getFullYear() > 0 ? 1 : 0;
                        switch (t) {
                            case "G":
                            case "GG":
                            case "GGG":
                                return n.era(r, { width: "abbreviated" });
                            case "GGGGG":
                                return n.era(r, { width: "narrow" });
                            default:
                                return n.era(r, { width: "wide" });
                        }
                    },
                    y: function (e, t, n) {
                        if ("yo" === t) {
                            const t = e.getFullYear(),
                                r = t > 0 ? t : 1 - t;
                            return n.ordinalNumber(r, { unit: "year" });
                        }
                        return Eg.y(e, t);
                    },
                    Y: function (e, t, n, r) {
                        const o = wg(e, r),
                            i = o > 0 ? o : 1 - o;
                        if ("YY" === t) {
                            return xg(i % 100, 2);
                        }
                        return "Yo" === t ? n.ordinalNumber(i, { unit: "year" }) : xg(i, t.length);
                    },
                    R: function (e, t) {
                        return xg(yg(e), t.length);
                    },
                    u: function (e, t) {
                        return xg(e.getFullYear(), t.length);
                    },
                    Q: function (e, t, n) {
                        const r = Math.ceil((e.getMonth() + 1) / 3);
                        switch (t) {
                            case "Q":
                                return String(r);
                            case "QQ":
                                return xg(r, 2);
                            case "Qo":
                                return n.ordinalNumber(r, { unit: "quarter" });
                            case "QQQ":
                                return n.quarter(r, { width: "abbreviated", context: "formatting" });
                            case "QQQQQ":
                                return n.quarter(r, { width: "narrow", context: "formatting" });
                            default:
                                return n.quarter(r, { width: "wide", context: "formatting" });
                        }
                    },
                    q: function (e, t, n) {
                        const r = Math.ceil((e.getMonth() + 1) / 3);
                        switch (t) {
                            case "q":
                                return String(r);
                            case "qq":
                                return xg(r, 2);
                            case "qo":
                                return n.ordinalNumber(r, { unit: "quarter" });
                            case "qqq":
                                return n.quarter(r, { width: "abbreviated", context: "standalone" });
                            case "qqqqq":
                                return n.quarter(r, { width: "narrow", context: "standalone" });
                            default:
                                return n.quarter(r, { width: "wide", context: "standalone" });
                        }
                    },
                    M: function (e, t, n) {
                        const r = e.getMonth();
                        switch (t) {
                            case "M":
                            case "MM":
                                return Eg.M(e, t);
                            case "Mo":
                                return n.ordinalNumber(r + 1, { unit: "month" });
                            case "MMM":
                                return n.month(r, { width: "abbreviated", context: "formatting" });
                            case "MMMMM":
                                return n.month(r, { width: "narrow", context: "formatting" });
                            default:
                                return n.month(r, { width: "wide", context: "formatting" });
                        }
                    },
                    L: function (e, t, n) {
                        const r = e.getMonth();
                        switch (t) {
                            case "L":
                                return String(r + 1);
                            case "LL":
                                return xg(r + 1, 2);
                            case "Lo":
                                return n.ordinalNumber(r + 1, { unit: "month" });
                            case "LLL":
                                return n.month(r, { width: "abbreviated", context: "standalone" });
                            case "LLLLL":
                                return n.month(r, { width: "narrow", context: "standalone" });
                            default:
                                return n.month(r, { width: "wide", context: "standalone" });
                        }
                    },
                    w: function (e, t, n, r) {
                        const o = kg(e, r);
                        return "wo" === t ? n.ordinalNumber(o, { unit: "week" }) : xg(o, t.length);
                    },
                    I: function (e, t, n) {
                        const r = bg(e);
                        return "Io" === t ? n.ordinalNumber(r, { unit: "week" }) : xg(r, t.length);
                    },
                    d: function (e, t, n) {
                        return "do" === t ? n.ordinalNumber(e.getDate(), { unit: "date" }) : Eg.d(e, t);
                    },
                    D: function (e, t, n) {
                        const r = mg(e);
                        return "Do" === t ? n.ordinalNumber(r, { unit: "dayOfYear" }) : xg(r, t.length);
                    },
                    E: function (e, t, n) {
                        const r = e.getDay();
                        switch (t) {
                            case "E":
                            case "EE":
                            case "EEE":
                                return n.day(r, { width: "abbreviated", context: "formatting" });
                            case "EEEEE":
                                return n.day(r, { width: "narrow", context: "formatting" });
                            case "EEEEEE":
                                return n.day(r, { width: "short", context: "formatting" });
                            default:
                                return n.day(r, { width: "wide", context: "formatting" });
                        }
                    },
                    e: function (e, t, n, r) {
                        const o = e.getDay(),
                            i = (o - r.weekStartsOn + 8) % 7 || 7;
                        switch (t) {
                            case "e":
                                return String(i);
                            case "ee":
                                return xg(i, 2);
                            case "eo":
                                return n.ordinalNumber(i, { unit: "day" });
                            case "eee":
                                return n.day(o, { width: "abbreviated", context: "formatting" });
                            case "eeeee":
                                return n.day(o, { width: "narrow", context: "formatting" });
                            case "eeeeee":
                                return n.day(o, { width: "short", context: "formatting" });
                            default:
                                return n.day(o, { width: "wide", context: "formatting" });
                        }
                    },
                    c: function (e, t, n, r) {
                        const o = e.getDay(),
                            i = (o - r.weekStartsOn + 8) % 7 || 7;
                        switch (t) {
                            case "c":
                                return String(i);
                            case "cc":
                                return xg(i, t.length);
                            case "co":
                                return n.ordinalNumber(i, { unit: "day" });
                            case "ccc":
                                return n.day(o, { width: "abbreviated", context: "standalone" });
                            case "ccccc":
                                return n.day(o, { width: "narrow", context: "standalone" });
                            case "cccccc":
                                return n.day(o, { width: "short", context: "standalone" });
                            default:
                                return n.day(o, { width: "wide", context: "standalone" });
                        }
                    },
                    i: function (e, t, n) {
                        const r = e.getDay(),
                            o = 0 === r ? 7 : r;
                        switch (t) {
                            case "i":
                                return String(o);
                            case "ii":
                                return xg(o, t.length);
                            case "io":
                                return n.ordinalNumber(o, { unit: "day" });
                            case "iii":
                                return n.day(r, { width: "abbreviated", context: "formatting" });
                            case "iiiii":
                                return n.day(r, { width: "narrow", context: "formatting" });
                            case "iiiiii":
                                return n.day(r, { width: "short", context: "formatting" });
                            default:
                                return n.day(r, { width: "wide", context: "formatting" });
                        }
                    },
                    a: function (e, t, n) {
                        const r = e.getHours() / 12 >= 1 ? "pm" : "am";
                        switch (t) {
                            case "a":
                            case "aa":
                                return n.dayPeriod(r, { width: "abbreviated", context: "formatting" });
                            case "aaa":
                                return n.dayPeriod(r, { width: "abbreviated", context: "formatting" }).toLowerCase();
                            case "aaaaa":
                                return n.dayPeriod(r, { width: "narrow", context: "formatting" });
                            default:
                                return n.dayPeriod(r, { width: "wide", context: "formatting" });
                        }
                    },
                    b: function (e, t, n) {
                        const r = e.getHours();
                        let o;
                        switch (((o = 12 === r ? Tg : 0 === r ? Ig : r / 12 >= 1 ? "pm" : "am"), t)) {
                            case "b":
                            case "bb":
                                return n.dayPeriod(o, { width: "abbreviated", context: "formatting" });
                            case "bbb":
                                return n.dayPeriod(o, { width: "abbreviated", context: "formatting" }).toLowerCase();
                            case "bbbbb":
                                return n.dayPeriod(o, { width: "narrow", context: "formatting" });
                            default:
                                return n.dayPeriod(o, { width: "wide", context: "formatting" });
                        }
                    },
                    B: function (e, t, n) {
                        const r = e.getHours();
                        let o;
                        switch (((o = r >= 17 ? Mg : r >= 12 ? Ag : r >= 4 ? Cg : Rg), t)) {
                            case "B":
                            case "BB":
                            case "BBB":
                                return n.dayPeriod(o, { width: "abbreviated", context: "formatting" });
                            case "BBBBB":
                                return n.dayPeriod(o, { width: "narrow", context: "formatting" });
                            default:
                                return n.dayPeriod(o, { width: "wide", context: "formatting" });
                        }
                    },
                    h: function (e, t, n) {
                        if ("ho" === t) {
                            let t = e.getHours() % 12;
                            return 0 === t && (t = 12), n.ordinalNumber(t, { unit: "hour" });
                        }
                        return Eg.h(e, t);
                    },
                    H: function (e, t, n) {
                        return "Ho" === t ? n.ordinalNumber(e.getHours(), { unit: "hour" }) : Eg.H(e, t);
                    },
                    K: function (e, t, n) {
                        const r = e.getHours() % 12;
                        return "Ko" === t ? n.ordinalNumber(r, { unit: "hour" }) : xg(r, t.length);
                    },
                    k: function (e, t, n) {
                        let r = e.getHours();
                        return 0 === r && (r = 24), "ko" === t ? n.ordinalNumber(r, { unit: "hour" }) : xg(r, t.length);
                    },
                    m: function (e, t, n) {
                        return "mo" === t ? n.ordinalNumber(e.getMinutes(), { unit: "minute" }) : Eg.m(e, t);
                    },
                    s: function (e, t, n) {
                        return "so" === t ? n.ordinalNumber(e.getSeconds(), { unit: "second" }) : Eg.s(e, t);
                    },
                    S: function (e, t) {
                        return Eg.S(e, t);
                    },
                    X: function (e, t, n) {
                        const r = e.getTimezoneOffset();
                        if (0 === r) return "Z";
                        switch (t) {
                            case "X":
                                return Pg(r);
                            case "XXXX":
                            case "XX":
                                return Dg(r);
                            default:
                                return Dg(r, ":");
                        }
                    },
                    x: function (e, t, n) {
                        const r = e.getTimezoneOffset();
                        switch (t) {
                            case "x":
                                return Pg(r);
                            case "xxxx":
                            case "xx":
                                return Dg(r);
                            default:
                                return Dg(r, ":");
                        }
                    },
                    O: function (e, t, n) {
                        const r = e.getTimezoneOffset();
                        switch (t) {
                            case "O":
                            case "OO":
                            case "OOO":
                                return "GMT" + Ng(r, ":");
                            default:
                                return "GMT" + Dg(r, ":");
                        }
                    },
                    z: function (e, t, n) {
                        const r = e.getTimezoneOffset();
                        switch (t) {
                            case "z":
                            case "zz":
                            case "zzz":
                                return "GMT" + Ng(r, ":");
                            default:
                                return "GMT" + Dg(r, ":");
                        }
                    },
                    t: function (e, t, n) {
                        return xg(Math.trunc(e.getTime() / 1e3), t.length);
                    },
                    T: function (e, t, n) {
                        return xg(e.getTime(), t.length);
                    },
                };
            function Ng(e, t = "") {
                const n = e > 0 ? "-" : "+",
                    r = Math.abs(e),
                    o = Math.trunc(r / 60),
                    i = r % 60;
                return 0 === i ? n + String(o) : n + String(o) + t + xg(i, 2);
            }
            function Pg(e, t) {
                if (e % 60 == 0) {
                    return (e > 0 ? "-" : "+") + xg(Math.abs(e) / 60, 2);
                }
                return Dg(e, t);
            }
            function Dg(e, t = "") {
                const n = e > 0 ? "-" : "+",
                    r = Math.abs(e);
                return n + xg(Math.trunc(r / 60), 2) + t + xg(r % 60, 2);
            }
            const Lg = (e, t) => {
                    switch (e) {
                        case "P":
                            return t.date({ width: "short" });
                        case "PP":
                            return t.date({ width: "medium" });
                        case "PPP":
                            return t.date({ width: "long" });
                        default:
                            return t.date({ width: "full" });
                    }
                },
                Fg = (e, t) => {
                    switch (e) {
                        case "p":
                            return t.time({ width: "short" });
                        case "pp":
                            return t.time({ width: "medium" });
                        case "ppp":
                            return t.time({ width: "long" });
                        default:
                            return t.time({ width: "full" });
                    }
                },
                jg = {
                    p: Fg,
                    P: (e, t) => {
                        const n = e.match(/(P+)(p+)?/) || [],
                            r = n[1],
                            o = n[2];
                        if (!o) return Lg(e, t);
                        let i;
                        switch (r) {
                            case "P":
                                i = t.dateTime({ width: "short" });
                                break;
                            case "PP":
                                i = t.dateTime({ width: "medium" });
                                break;
                            case "PPP":
                                i = t.dateTime({ width: "long" });
                                break;
                            default:
                                i = t.dateTime({ width: "full" });
                        }
                        return i.replace("{{date}}", Lg(r, t)).replace("{{time}}", Fg(o, t));
                    },
                },
                $g = /^D+$/,
                Ug = /^Y+$/,
                Bg = ["D", "DD", "YY", "YYYY"];
            function qg(e) {
                return e instanceof Date || ("object" == typeof e && "[object Date]" === Object.prototype.toString.call(e));
            }
            function zg(e) {
                if (!qg(e) && "number" != typeof e) return !1;
                const t = ug(e);
                return !isNaN(Number(t));
            }
            const Hg = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
                Wg = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
                Vg = /^'([^]*?)'?$/,
                Yg = /''/g,
                Gg = /[a-zA-Z]/;
            function Kg(e, t, n) {
                const r = sg(),
                    o = n?.locale ?? r.locale ?? og,
                    i = n?.firstWeekContainsDate ?? n?.locale?.options?.firstWeekContainsDate ?? r.firstWeekContainsDate ?? r.locale?.options?.firstWeekContainsDate ?? 1,
                    s = n?.weekStartsOn ?? n?.locale?.options?.weekStartsOn ?? r.weekStartsOn ?? r.locale?.options?.weekStartsOn ?? 0,
                    a = ug(e);
                if (!zg(a)) throw new RangeError("Invalid time value");
                let c = t
                    .match(Wg)
                    .map((e) => {
                        const t = e[0];
                        if ("p" === t || "P" === t) {
                            return (0, jg[t])(e, o.formatLong);
                        }
                        return e;
                    })
                    .join("")
                    .match(Hg)
                    .map((e) => {
                        if ("''" === e) return { isToken: !1, value: "'" };
                        const t = e[0];
                        if ("'" === t) return { isToken: !1, value: Jg(e) };
                        if (Og[t]) return { isToken: !0, value: e };
                        if (t.match(Gg)) throw new RangeError("Format string contains an unescaped latin alphabet character `" + t + "`");
                        return { isToken: !1, value: e };
                    });
                o.localize.preprocessor && (c = o.localize.preprocessor(a, c));
                const u = { firstWeekContainsDate: i, weekStartsOn: s, locale: o };
                return c
                    .map((r) => {
                        if (!r.isToken) return r.value;
                        const i = r.value;
                        ((!n?.useAdditionalWeekYearTokens &&
                            (function (e) {
                                return Ug.test(e);
                            })(i)) ||
                            (!n?.useAdditionalDayOfYearTokens &&
                                (function (e) {
                                    return $g.test(e);
                                })(i))) &&
                            (function (e, t, n) {
                                const r = (function (e, t, n) {
                                    const r = "Y" === e[0] ? "years" : "days of the month";
                                    return `Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${r} to the input \`${n}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
                                })(e, t, n);
                                if ((console.warn(r), Bg.includes(e))) throw new RangeError(r);
                            })(i, t, String(e));
                        return (0, Og[i[0]])(a, i, o.localize, u);
                    })
                    .join("");
            }
            function Jg(e) {
                const t = e.match(Vg);
                return t ? t[1].replace(Yg, "'") : e;
            }
            var Xg = n(624),
                Qg = n.n(Xg);
            function Zg(e) {
                return {
                    getItem: async (t) => {
                        const { [t]: n } = await Jm().storage[e].get(t);
                        return n;
                    },
                    setItem: async (t, n) => Jm().storage[e].set({ [t]: n }),
                    removeItem: async (t) => Jm().storage[e].remove(t),
                    clear: async () => Jm().storage[e].clear(),
                    getLength: async () => {
                        const t = await Jm().storage[e].get();
                        return Object.keys(t).length;
                    },
                    addListener: (t, n) => {
                        function r(r, o) {
                            const i = Object.values(r).some((e) => !Qg()(e.newValue, e.oldValue));
                            o === e && i && t in r && n(r[t].newValue);
                        }
                        return Jm().storage.onChanged.addListener(r), () => Jm().storage.onChanged.removeListener(r);
                    },
                };
            }
            const ev = Zg("local");
            const tv = "installDate",
                nv = "yyyy-MM-dd";
            async function rv() {
                await (async function () {
                    if (await ev.getItem(tv)) return;
                    const e = Kg(new Date(), nv);
                    await ev.setItem(tv, e);
                })();
            }
            var ov = (function (e) {
                return (e[(e.LESS_THAN = -1)] = "LESS_THAN"), (e[(e.EQUAL = 0)] = "EQUAL"), (e[(e.GREATER_THAN = 1)] = "GREATER_THAN"), e;
            })(ov || {});
            function iv(e, t) {
                const [n, ...r] = sv(e),
                    [o, ...i] = sv(t);
                return n === o && 0 === r.length && 0 === i.length ? ov.EQUAL : n !== o ? (n < o ? ov.LESS_THAN : ov.GREATER_THAN) : iv(r.join("."), i.join("."));
            }
            function sv(e) {
                return e.split(".").map((e) => (e.length > 0 ? Number(e) : 0));
            }
            function av(e, t) {
                return iv(e, t) === ov.LESS_THAN;
            }
            const cv = "messages";
            async function uv() {
                return (await ev.getItem(cv)) ?? {};
            }
            async function lv(e) {
                await ev.setItem(cv, e);
            }
            const dv = "0.0.0";
            async function pv(e) {
                av(e, dv) &&
                    (await (async function (e) {
                        const t = await uv();
                        (t[e] = !0), await lv(t);
                    })("update"));
            }
            "Easy Scraper".replace(/\s+/g, "-").toLowerCase();
            const fv = { HOME: "/", WELCOME: "/welcome", ADD_REVIEW: "/review", HELP: "/help" },
                hv = "",
                mv = "production",
                gv = !1;
            function vv(e) {
                return void 0 !== e;
            }
            const yv = { production: "https://easyscraper.com", test: "https://staging.easyscraper.com", staging: "https://staging.easyscraper.com", development: "http://localhost:3000" },
                _v = { baseUrl: yv.development, amplitude: { apiKey: "2fedb6c4fbe9439c2c4d8ea4665eec41" } },
                bv = { baseUrl: yv.staging, amplitude: { apiKey: "" } },
                wv = { development: _v, test: bv, staging: bv, production: { baseUrl: yv.production, amplitude: { apiKey: "31d8d26210941aeeb6ce60d058df53b1" } } }["undefined" != typeof APP_ENV ? APP_ENV : mv];
            var Sv = function (e, t) {
                return (
                    (Sv =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                                e.__proto__ = t;
                            }) ||
                        function (e, t) {
                            for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                        }),
                    Sv(e, t)
                );
            };
            function kv(e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                function n() {
                    this.constructor = e;
                }
                Sv(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
            }
            var xv = function () {
                return (
                    (xv =
                        Object.assign ||
                        function (e) {
                            for (var t, n = 1, r = arguments.length; n < r; n++) for (var o in (t = arguments[n])) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                            return e;
                        }),
                    xv.apply(this, arguments)
                );
            };
            function Ev(e, t) {
                var n = {};
                for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                    var o = 0;
                    for (r = Object.getOwnPropertySymbols(e); o < r.length; o++) t.indexOf(r[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[o]) && (n[r[o]] = e[r[o]]);
                }
                return n;
            }
            function Iv(e, t, n, r) {
                return new (n || (n = Promise))(function (o, i) {
                    function s(e) {
                        try {
                            c(r.next(e));
                        } catch (e) {
                            i(e);
                        }
                    }
                    function a(e) {
                        try {
                            c(r.throw(e));
                        } catch (e) {
                            i(e);
                        }
                    }
                    function c(e) {
                        var t;
                        e.done
                            ? o(e.value)
                            : ((t = e.value),
                              t instanceof n
                                  ? t
                                  : new n(function (e) {
                                        e(t);
                                    })).then(s, a);
                    }
                    c((r = r.apply(e, t || [])).next());
                });
            }
            function Tv(e, t) {
                var n,
                    r,
                    o,
                    i,
                    s = {
                        label: 0,
                        sent: function () {
                            if (1 & o[0]) throw o[1];
                            return o[1];
                        },
                        trys: [],
                        ops: [],
                    };
                return (
                    (i = { next: a(0), throw: a(1), return: a(2) }),
                    "function" == typeof Symbol &&
                        (i[Symbol.iterator] = function () {
                            return this;
                        }),
                    i
                );
                function a(a) {
                    return function (c) {
                        return (function (a) {
                            if (n) throw new TypeError("Generator is already executing.");
                            for (; i && ((i = 0), a[0] && (s = 0)), s; )
                                try {
                                    if (((n = 1), r && (o = 2 & a[0] ? r.return : a[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, a[1])).done)) return o;
                                    switch (((r = 0), o && (a = [2 & a[0], o.value]), a[0])) {
                                        case 0:
                                        case 1:
                                            o = a;
                                            break;
                                        case 4:
                                            return s.label++, { value: a[1], done: !1 };
                                        case 5:
                                            s.label++, (r = a[1]), (a = [0]);
                                            continue;
                                        case 7:
                                            (a = s.ops.pop()), s.trys.pop();
                                            continue;
                                        default:
                                            if (!((o = s.trys), (o = o.length > 0 && o[o.length - 1]) || (6 !== a[0] && 2 !== a[0]))) {
                                                s = 0;
                                                continue;
                                            }
                                            if (3 === a[0] && (!o || (a[1] > o[0] && a[1] < o[3]))) {
                                                s.label = a[1];
                                                break;
                                            }
                                            if (6 === a[0] && s.label < o[1]) {
                                                (s.label = o[1]), (o = a);
                                                break;
                                            }
                                            if (o && s.label < o[2]) {
                                                (s.label = o[2]), s.ops.push(a);
                                                break;
                                            }
                                            o[2] && s.ops.pop(), s.trys.pop();
                                            continue;
                                    }
                                    a = t.call(e, s);
                                } catch (e) {
                                    (a = [6, e]), (r = 0);
                                } finally {
                                    n = o = 0;
                                }
                            if (5 & a[0]) throw a[1];
                            return { value: a[0] ? a[1] : void 0, done: !0 };
                        })([a, c]);
                    };
                }
            }
            Object.create;
            function Cv(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    n = t && e[t],
                    r = 0;
                if (n) return n.call(e);
                if (e && "number" == typeof e.length)
                    return {
                        next: function () {
                            return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e };
                        },
                    };
                throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
            }
            function Av(e, t) {
                var n = "function" == typeof Symbol && e[Symbol.iterator];
                if (!n) return e;
                var r,
                    o,
                    i = n.call(e),
                    s = [];
                try {
                    for (; (void 0 === t || t-- > 0) && !(r = i.next()).done; ) s.push(r.value);
                } catch (e) {
                    o = { error: e };
                } finally {
                    try {
                        r && !r.done && (n = i.return) && n.call(i);
                    } finally {
                        if (o) throw o.error;
                    }
                }
                return s;
            }
            function Mv(e, t, n) {
                if (n || 2 === arguments.length) for (var r, o = 0, i = t.length; o < i; o++) (!r && o in t) || (r || (r = Array.prototype.slice.call(t, 0, o)), (r[o] = t[o]));
                return e.concat(r || Array.prototype.slice.call(t));
            }
            Object.create;
            "function" == typeof SuppressedError && SuppressedError;
            var Rv;
            !(function (e) {
                (e[(e.None = 0)] = "None"), (e[(e.Error = 1)] = "Error"), (e[(e.Warn = 2)] = "Warn"), (e[(e.Verbose = 3)] = "Verbose"), (e[(e.Debug = 4)] = "Debug");
            })(Rv || (Rv = {}));
            var Ov,
                Nv = function (e) {
                    return function () {
                        var t = xv({}, e.config);
                        return { logger: t.loggerProvider, logLevel: t.logLevel };
                    };
                },
                Pv = function (e, t) {
                    var n, r;
                    t = (t = t.replace(/\[(\w+)\]/g, ".$1")).replace(/^\./, "");
                    try {
                        for (var o = Cv(t.split(".")), i = o.next(); !i.done; i = o.next()) {
                            var s = i.value;
                            if (!(s in e)) return;
                            e = e[s];
                        }
                    } catch (e) {
                        n = { error: e };
                    } finally {
                        try {
                            i && !i.done && (r = o.return) && r.call(o);
                        } finally {
                            if (n) throw n.error;
                        }
                    }
                    return e;
                },
                Dv = function (e, t) {
                    return function () {
                        var n,
                            r,
                            o = {};
                        try {
                            for (var i = Cv(t), s = i.next(); !s.done; s = i.next()) {
                                var a = s.value;
                                o[a] = Pv(e, a);
                            }
                        } catch (e) {
                            n = { error: e };
                        } finally {
                            try {
                                s && !s.done && (r = i.return) && r.call(i);
                            } finally {
                                if (n) throw n.error;
                            }
                        }
                        return o;
                    };
                },
                Lv = function (e, t, n, r, o) {
                    return (
                        void 0 === o && (o = null),
                        function () {
                            for (var i = [], s = 0; s < arguments.length; s++) i[s] = arguments[s];
                            var a = n(),
                                c = a.logger,
                                u = a.logLevel;
                            if ((u && u < Rv.Debug) || !u || !c) return e.apply(o, i);
                            var l,
                                d = {
                                    type: "invoke public method",
                                    name: t,
                                    args: i,
                                    stacktrace:
                                        ((l = 1),
                                        void 0 === l && (l = 0),
                                        (new Error().stack || "")
                                            .split("\n")
                                            .slice(2 + l)
                                            .map(function (e) {
                                                return e.trim();
                                            })),
                                    time: { start: new Date().toISOString() },
                                    states: {},
                                };
                            r && d.states && (d.states.before = r());
                            var p = e.apply(o, i);
                            return (
                                p && p.promise
                                    ? p.promise.then(function () {
                                          r && d.states && (d.states.after = r()), d.time && (d.time.end = new Date().toISOString()), c.debug(JSON.stringify(d, null, 2));
                                      })
                                    : (r && d.states && (d.states.after = r()), d.time && (d.time.end = new Date().toISOString()), c.debug(JSON.stringify(d, null, 2))),
                                p
                            );
                        }
                    );
                },
                Fv = function (e) {
                    return { promise: e || Promise.resolve() };
                };
            !(function (e) {
                (e.Unknown = "unknown"),
                    (e.Skipped = "skipped"),
                    (e.Success = "success"),
                    (e.RateLimit = "rate_limit"),
                    (e.PayloadTooLarge = "payload_too_large"),
                    (e.Invalid = "invalid"),
                    (e.Failed = "failed"),
                    (e.Timeout = "Timeout"),
                    (e.SystemError = "SystemError");
            })(Ov || (Ov = {}));
            var jv = "AMP",
                $v = "".concat(jv, "_unsent"),
                Uv = "https://api2.amplitude.com/2/httpapi",
                Bv = function (e, t, n) {
                    return void 0 === t && (t = 0), void 0 === n && (n = Ov.Unknown), { event: e, code: t, message: n };
                },
                qv = "Amplitude Logger ",
                zv = (function () {
                    function e() {
                        this.logLevel = Rv.None;
                    }
                    return (
                        (e.prototype.disable = function () {
                            this.logLevel = Rv.None;
                        }),
                        (e.prototype.enable = function (e) {
                            void 0 === e && (e = Rv.Warn), (this.logLevel = e);
                        }),
                        (e.prototype.log = function () {
                            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                            this.logLevel < Rv.Verbose || console.log("".concat(qv, "[Log]: ").concat(e.join(" ")));
                        }),
                        (e.prototype.warn = function () {
                            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                            this.logLevel < Rv.Warn || console.warn("".concat(qv, "[Warn]: ").concat(e.join(" ")));
                        }),
                        (e.prototype.error = function () {
                            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                            this.logLevel < Rv.Error || console.error("".concat(qv, "[Error]: ").concat(e.join(" ")));
                        }),
                        (e.prototype.debug = function () {
                            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                            this.logLevel < Rv.Debug || console.log("".concat(qv, "[Debug]: ").concat(e.join(" ")));
                        }),
                        e
                    );
                })(),
                Hv = function () {
                    return {
                        flushMaxRetries: 12,
                        flushQueueSize: 200,
                        flushIntervalMillis: 1e4,
                        instanceName: "$default_instance",
                        logLevel: Rv.Warn,
                        loggerProvider: new zv(),
                        offline: !1,
                        optOut: !1,
                        serverUrl: Uv,
                        serverZone: "US",
                        useBatch: !1,
                    };
                },
                Wv = (function () {
                    function e(e) {
                        var t, n, r, o;
                        this._optOut = !1;
                        var i = Hv();
                        (this.apiKey = e.apiKey),
                            (this.flushIntervalMillis = null !== (t = e.flushIntervalMillis) && void 0 !== t ? t : i.flushIntervalMillis),
                            (this.flushMaxRetries = e.flushMaxRetries || i.flushMaxRetries),
                            (this.flushQueueSize = e.flushQueueSize || i.flushQueueSize),
                            (this.instanceName = e.instanceName || i.instanceName),
                            (this.loggerProvider = e.loggerProvider || i.loggerProvider),
                            (this.logLevel = null !== (n = e.logLevel) && void 0 !== n ? n : i.logLevel),
                            (this.minIdLength = e.minIdLength),
                            (this.plan = e.plan),
                            (this.ingestionMetadata = e.ingestionMetadata),
                            (this.offline = void 0 !== e.offline ? e.offline : i.offline),
                            (this.optOut = null !== (r = e.optOut) && void 0 !== r ? r : i.optOut),
                            (this.serverUrl = e.serverUrl),
                            (this.serverZone = e.serverZone || i.serverZone),
                            (this.storageProvider = e.storageProvider),
                            (this.transportProvider = e.transportProvider),
                            (this.useBatch = null !== (o = e.useBatch) && void 0 !== o ? o : i.useBatch),
                            this.loggerProvider.enable(this.logLevel);
                        var s = Yv(e.serverUrl, e.serverZone, e.useBatch);
                        (this.serverZone = s.serverZone), (this.serverUrl = s.serverUrl);
                    }
                    return (
                        Object.defineProperty(e.prototype, "optOut", {
                            get: function () {
                                return this._optOut;
                            },
                            set: function (e) {
                                this._optOut = e;
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        e
                    );
                })(),
                Vv = function (e, t) {
                    return "EU" === e ? (t ? "https://api.eu.amplitude.com/batch" : "https://api.eu.amplitude.com/2/httpapi") : t ? "https://api2.amplitude.com/batch" : Uv;
                },
                Yv = function (e, t, n) {
                    if ((void 0 === e && (e = ""), void 0 === t && (t = Hv().serverZone), void 0 === n && (n = Hv().useBatch), e)) return { serverUrl: e, serverZone: void 0 };
                    var r = ["US", "EU"].includes(t) ? t : Hv().serverZone;
                    return { serverZone: r, serverUrl: Vv(r, n) };
                },
                Gv = function (e) {
                    return e ? (e ^ ((16 * Math.random()) >> (e / 4))).toString(16) : (String(1e7) + String(-1e3) + String(-4e3) + String(-8e3) + String(-1e11)).replace(/[018]/g, Gv);
                };
            function Kv(e) {
                var t = "";
                try {
                    "body" in e && (t = JSON.stringify(e.body, null, 2));
                } catch (e) {}
                return t;
            }
            var Jv,
                Xv,
                Qv,
                Zv = (function () {
                    function e() {
                        (this.name = "amplitude"), (this.type = "destination"), (this.retryTimeout = 1e3), (this.throttleTimeout = 3e4), (this.storageKey = ""), (this.scheduled = null), (this.queue = []);
                    }
                    return (
                        (e.prototype.setup = function (e) {
                            var t;
                            return Iv(this, void 0, void 0, function () {
                                var n,
                                    r = this;
                                return Tv(this, function (o) {
                                    switch (o.label) {
                                        case 0:
                                            return (
                                                (this.config = e),
                                                (this.storageKey = "".concat($v, "_").concat(this.config.apiKey.substring(0, 10))),
                                                [4, null === (t = this.config.storageProvider) || void 0 === t ? void 0 : t.get(this.storageKey)]
                                            );
                                        case 1:
                                            return (
                                                (n = o.sent()) &&
                                                    n.length > 0 &&
                                                    Promise.all(
                                                        n.map(function (e) {
                                                            return r.execute(e);
                                                        })
                                                    ).catch(),
                                                [2, Promise.resolve(void 0)]
                                            );
                                    }
                                });
                            });
                        }),
                        (e.prototype.execute = function (e) {
                            var t = this;
                            return (
                                e.insert_id || (e.insert_id = Gv()),
                                new Promise(function (n) {
                                    var r = {
                                        event: e,
                                        attempts: 0,
                                        callback: function (e) {
                                            return n(e);
                                        },
                                        timeout: 0,
                                    };
                                    t.addToQueue(r);
                                })
                            );
                        }),
                        (e.prototype.getTryableList = function (e) {
                            var t = this;
                            return e.filter(function (e) {
                                return e.attempts < t.config.flushMaxRetries ? ((e.attempts += 1), !0) : (t.fulfillRequest([e], 500, "Event rejected due to exceeded retry count"), !1);
                            });
                        }),
                        (e.prototype.scheduleTryable = function (e, t) {
                            var n = this;
                            void 0 === t && (t = !1),
                                e.forEach(function (e) {
                                    t && (n.queue = n.queue.concat(e)),
                                        0 !== e.timeout
                                            ? setTimeout(function () {
                                                  (e.timeout = 0), n.schedule(0);
                                              }, e.timeout)
                                            : n.schedule(n.config.flushIntervalMillis);
                                });
                        }),
                        (e.prototype.addToQueue = function () {
                            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                            var n = this.getTryableList(e);
                            this.scheduleTryable(n, !0), this.saveEvents();
                        }),
                        (e.prototype.schedule = function (e) {
                            var t = this;
                            this.scheduled ||
                                this.config.offline ||
                                (this.scheduled = setTimeout(function () {
                                    t.flush(!0).then(function () {
                                        t.queue.length > 0 && t.schedule(e);
                                    });
                                }, e));
                        }),
                        (e.prototype.flush = function (e) {
                            return (
                                void 0 === e && (e = !1),
                                Iv(this, void 0, void 0, function () {
                                    var t,
                                        n,
                                        r,
                                        o = this;
                                    return Tv(this, function (i) {
                                        switch (i.label) {
                                            case 0:
                                                return this.config.offline
                                                    ? (this.config.loggerProvider.debug("Skipping flush while offline."), [2])
                                                    : ((t = []),
                                                      (n = []),
                                                      this.queue.forEach(function (e) {
                                                          return 0 === e.timeout ? t.push(e) : n.push(e);
                                                      }),
                                                      this.scheduled && (clearTimeout(this.scheduled), (this.scheduled = null)),
                                                      (s = t),
                                                      (a = this.config.flushQueueSize),
                                                      (c = Math.max(a, 1)),
                                                      (r = s.reduce(function (e, t, n) {
                                                          var r = Math.floor(n / c);
                                                          return e[r] || (e[r] = []), e[r].push(t), e;
                                                      }, [])),
                                                      [
                                                          4,
                                                          Promise.all(
                                                              r.map(function (t) {
                                                                  return o.send(t, e);
                                                              })
                                                          ),
                                                      ]);
                                            case 1:
                                                return i.sent(), this.scheduleTryable(n), [2];
                                        }
                                        var s, a, c;
                                    });
                                })
                            );
                        }),
                        (e.prototype.send = function (e, t) {
                            return (
                                void 0 === t && (t = !0),
                                Iv(this, void 0, void 0, function () {
                                    var n, r, o, i, s;
                                    return Tv(this, function (a) {
                                        switch (a.label) {
                                            case 0:
                                                if (!this.config.apiKey) return [2, this.fulfillRequest(e, 400, "Event rejected due to missing API key")];
                                                (n = {
                                                    api_key: this.config.apiKey,
                                                    events: e.map(function (e) {
                                                        var t = e.event;
                                                        t.extra;
                                                        return Ev(t, ["extra"]);
                                                    }),
                                                    options: { min_id_length: this.config.minIdLength },
                                                    client_upload_time: new Date().toISOString(),
                                                }),
                                                    (a.label = 1);
                                            case 1:
                                                return a.trys.push([1, 3, , 4]), (r = Yv(this.config.serverUrl, this.config.serverZone, this.config.useBatch).serverUrl), [4, this.config.transportProvider.send(r, n)];
                                            case 2:
                                                return null === (o = a.sent())
                                                    ? (this.fulfillRequest(e, 0, "Unexpected error occurred"), [2])
                                                    : t
                                                    ? (this.handleResponse(o, e), [3, 4])
                                                    : ("body" in o ? this.fulfillRequest(e, o.statusCode, "".concat(o.status, ": ").concat(Kv(o))) : this.fulfillRequest(e, o.statusCode, o.status), [2]);
                                            case 3:
                                                return (i = a.sent()), (s = (c = i) instanceof Error ? c.message : String(c)), this.config.loggerProvider.error(s), this.handleResponse({ status: Ov.Failed, statusCode: 0 }, e), [3, 4];
                                            case 4:
                                                return [2];
                                        }
                                        var c;
                                    });
                                })
                            );
                        }),
                        (e.prototype.handleResponse = function (e, t) {
                            var n = e.status;
                            switch (n) {
                                case Ov.Success:
                                    this.handleSuccessResponse(e, t);
                                    break;
                                case Ov.Invalid:
                                    this.handleInvalidResponse(e, t);
                                    break;
                                case Ov.PayloadTooLarge:
                                    this.handlePayloadTooLargeResponse(e, t);
                                    break;
                                case Ov.RateLimit:
                                    this.handleRateLimitResponse(e, t);
                                    break;
                                default:
                                    this.config.loggerProvider.warn("{code: 0, error: \"Status '".concat(n, "' provided for ").concat(t.length, ' events"}')), this.handleOtherResponse(t);
                            }
                        }),
                        (e.prototype.handleSuccessResponse = function (e, t) {
                            this.fulfillRequest(t, e.statusCode, "Event tracked successfully");
                        }),
                        (e.prototype.handleInvalidResponse = function (e, t) {
                            var n = this;
                            if (e.body.missingField || e.body.error.startsWith("Invalid API key")) this.fulfillRequest(t, e.statusCode, e.body.error);
                            else {
                                var r = Mv(
                                        Mv(Mv(Mv([], Av(Object.values(e.body.eventsWithInvalidFields)), !1), Av(Object.values(e.body.eventsWithMissingFields)), !1), Av(Object.values(e.body.eventsWithInvalidIdLengths)), !1),
                                        Av(e.body.silencedEvents),
                                        !1
                                    ).flat(),
                                    o = new Set(r),
                                    i = t.filter(function (t, r) {
                                        if (!o.has(r)) return !0;
                                        n.fulfillRequest([t], e.statusCode, e.body.error);
                                    });
                                i.length > 0 && this.config.loggerProvider.warn(Kv(e));
                                var s = this.getTryableList(i);
                                this.scheduleTryable(s);
                            }
                        }),
                        (e.prototype.handlePayloadTooLargeResponse = function (e, t) {
                            if (1 !== t.length) {
                                this.config.loggerProvider.warn(Kv(e)), (this.config.flushQueueSize /= 2);
                                var n = this.getTryableList(t);
                                this.scheduleTryable(n);
                            } else this.fulfillRequest(t, e.statusCode, e.body.error);
                        }),
                        (e.prototype.handleRateLimitResponse = function (e, t) {
                            var n = this,
                                r = Object.keys(e.body.exceededDailyQuotaUsers),
                                o = Object.keys(e.body.exceededDailyQuotaDevices),
                                i = e.body.throttledEvents,
                                s = new Set(r),
                                a = new Set(o),
                                c = new Set(i),
                                u = t.filter(function (t, r) {
                                    if (!((t.event.user_id && s.has(t.event.user_id)) || (t.event.device_id && a.has(t.event.device_id)))) return c.has(r) && (t.timeout = n.throttleTimeout), !0;
                                    n.fulfillRequest([t], e.statusCode, e.body.error);
                                });
                            u.length > 0 && this.config.loggerProvider.warn(Kv(e));
                            var l = this.getTryableList(u);
                            this.scheduleTryable(l);
                        }),
                        (e.prototype.handleOtherResponse = function (e) {
                            var t = this,
                                n = e.map(function (e) {
                                    return (e.timeout = e.attempts * t.retryTimeout), e;
                                }),
                                r = this.getTryableList(n);
                            this.scheduleTryable(r);
                        }),
                        (e.prototype.fulfillRequest = function (e, t, n) {
                            this.removeEvents(e),
                                e.forEach(function (e) {
                                    return e.callback(Bv(e.event, t, n));
                                });
                        }),
                        (e.prototype.saveEvents = function () {
                            if (this.config.storageProvider) {
                                var e = this.queue.map(function (e) {
                                    return e.event;
                                });
                                this.config.storageProvider.set(this.storageKey, e);
                            }
                        }),
                        (e.prototype.removeEvents = function (e) {
                            (this.queue = this.queue.filter(function (t) {
                                return !e.some(function (e) {
                                    return e.event.insert_id === t.event.insert_id;
                                });
                            })),
                                this.saveEvents();
                        }),
                        e
                    );
                })();
            !(function (e) {
                (e.SET = "$set"),
                    (e.SET_ONCE = "$setOnce"),
                    (e.ADD = "$add"),
                    (e.APPEND = "$append"),
                    (e.PREPEND = "$prepend"),
                    (e.REMOVE = "$remove"),
                    (e.PREINSERT = "$preInsert"),
                    (e.POSTINSERT = "$postInsert"),
                    (e.UNSET = "$unset"),
                    (e.CLEAR_ALL = "$clearAll");
            })(Jv || (Jv = {})),
                (function (e) {
                    (e.REVENUE_PRODUCT_ID = "$productId"), (e.REVENUE_QUANTITY = "$quantity"), (e.REVENUE_PRICE = "$price"), (e.REVENUE_TYPE = "$revenueType"), (e.REVENUE = "$revenue");
                })(Xv || (Xv = {})),
                (function (e) {
                    (e.IDENTIFY = "$identify"), (e.GROUP_IDENTIFY = "$groupidentify"), (e.REVENUE = "revenue_amount");
                })(Qv || (Qv = {}));
            var ey = function (e) {
                    if (Object.keys(e).length > 1e3) return !1;
                    for (var t in e) {
                        var n = e[t];
                        if (!ty(t, n)) return !1;
                    }
                    return !0;
                },
                ty = function (e, t) {
                    var n, r;
                    if ("string" != typeof e) return !1;
                    if (Array.isArray(t)) {
                        var o = !0;
                        try {
                            for (var i = Cv(t), s = i.next(); !s.done; s = i.next()) {
                                var a = s.value;
                                if (Array.isArray(a)) return !1;
                                if ("object" == typeof a) o = o && ey(a);
                                else if (!["number", "string"].includes(typeof a)) return !1;
                                if (!o) return !1;
                            }
                        } catch (e) {
                            n = { error: e };
                        } finally {
                            try {
                                s && !s.done && (r = i.return) && r.call(i);
                            } finally {
                                if (n) throw n.error;
                            }
                        }
                    } else {
                        if (null == t) return !1;
                        if ("object" == typeof t) return ey(t);
                        if (!["number", "string", "boolean"].includes(typeof t)) return !1;
                    }
                    return !0;
                },
                ny = (function () {
                    function e() {
                        (this._propertySet = new Set()), (this._properties = {});
                    }
                    return (
                        (e.prototype.getUserProperties = function () {
                            return xv({}, this._properties);
                        }),
                        (e.prototype.set = function (e, t) {
                            return this._safeSet(Jv.SET, e, t), this;
                        }),
                        (e.prototype.setOnce = function (e, t) {
                            return this._safeSet(Jv.SET_ONCE, e, t), this;
                        }),
                        (e.prototype.append = function (e, t) {
                            return this._safeSet(Jv.APPEND, e, t), this;
                        }),
                        (e.prototype.prepend = function (e, t) {
                            return this._safeSet(Jv.PREPEND, e, t), this;
                        }),
                        (e.prototype.postInsert = function (e, t) {
                            return this._safeSet(Jv.POSTINSERT, e, t), this;
                        }),
                        (e.prototype.preInsert = function (e, t) {
                            return this._safeSet(Jv.PREINSERT, e, t), this;
                        }),
                        (e.prototype.remove = function (e, t) {
                            return this._safeSet(Jv.REMOVE, e, t), this;
                        }),
                        (e.prototype.add = function (e, t) {
                            return this._safeSet(Jv.ADD, e, t), this;
                        }),
                        (e.prototype.unset = function (e) {
                            return this._safeSet(Jv.UNSET, e, "-"), this;
                        }),
                        (e.prototype.clearAll = function () {
                            return (this._properties = {}), (this._properties[Jv.CLEAR_ALL] = "-"), this;
                        }),
                        (e.prototype._safeSet = function (e, t, n) {
                            if (this._validate(e, t, n)) {
                                var r = this._properties[e];
                                return void 0 === r && ((r = {}), (this._properties[e] = r)), (r[t] = n), this._propertySet.add(t), !0;
                            }
                            return !1;
                        }),
                        (e.prototype._validate = function (e, t, n) {
                            return void 0 === this._properties[Jv.CLEAR_ALL] && !this._propertySet.has(t) && (e === Jv.ADD ? "number" == typeof n : e === Jv.UNSET || e === Jv.REMOVE || ty(t, n));
                        }),
                        e
                    );
                })(),
                ry = (function () {
                    function e() {
                        (this.productId = ""), (this.quantity = 1), (this.price = 0);
                    }
                    return (
                        (e.prototype.setProductId = function (e) {
                            return (this.productId = e), this;
                        }),
                        (e.prototype.setQuantity = function (e) {
                            return e > 0 && (this.quantity = e), this;
                        }),
                        (e.prototype.setPrice = function (e) {
                            return (this.price = e), this;
                        }),
                        (e.prototype.setRevenueType = function (e) {
                            return (this.revenueType = e), this;
                        }),
                        (e.prototype.setRevenue = function (e) {
                            return (this.revenue = e), this;
                        }),
                        (e.prototype.setEventProperties = function (e) {
                            return ey(e) && (this.properties = e), this;
                        }),
                        (e.prototype.getEventProperties = function () {
                            var e = this.properties ? xv({}, this.properties) : {};
                            return (e[Xv.REVENUE_PRODUCT_ID] = this.productId), (e[Xv.REVENUE_QUANTITY] = this.quantity), (e[Xv.REVENUE_PRICE] = this.price), (e[Xv.REVENUE_TYPE] = this.revenueType), (e[Xv.REVENUE] = this.revenue), e;
                        }),
                        e
                    );
                })(),
                oy = (function () {
                    function e(e) {
                        (this.client = e), (this.queue = []), (this.applying = !1), (this.plugins = []);
                    }
                    return (
                        (e.prototype.register = function (e, t) {
                            var n, r, o;
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (i) {
                                    switch (i.label) {
                                        case 0:
                                            return (
                                                (e.name = null !== (n = e.name) && void 0 !== n ? n : Gv()),
                                                (e.type = null !== (r = e.type) && void 0 !== r ? r : "enrichment"),
                                                [4, null === (o = e.setup) || void 0 === o ? void 0 : o.call(e, t, this.client)]
                                            );
                                        case 1:
                                            return i.sent(), this.plugins.push(e), [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.deregister = function (e) {
                            var t;
                            return Iv(this, void 0, void 0, function () {
                                var n, r;
                                return Tv(this, function (o) {
                                    switch (o.label) {
                                        case 0:
                                            return (
                                                (n = this.plugins.findIndex(function (t) {
                                                    return t.name === e;
                                                })),
                                                (r = this.plugins[n]),
                                                this.plugins.splice(n, 1),
                                                [4, null === (t = r.teardown) || void 0 === t ? void 0 : t.call(r)]
                                            );
                                        case 1:
                                            return o.sent(), [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.reset = function (e) {
                            (this.applying = !1),
                                this.plugins.map(function (e) {
                                    var t;
                                    return null === (t = e.teardown) || void 0 === t ? void 0 : t.call(e);
                                }),
                                (this.plugins = []),
                                (this.client = e);
                        }),
                        (e.prototype.push = function (e) {
                            var t = this;
                            return new Promise(function (n) {
                                t.queue.push([e, n]), t.scheduleApply(0);
                            });
                        }),
                        (e.prototype.scheduleApply = function (e) {
                            var t = this;
                            this.applying ||
                                ((this.applying = !0),
                                setTimeout(function () {
                                    t.apply(t.queue.shift()).then(function () {
                                        (t.applying = !1), t.queue.length > 0 && t.scheduleApply(0);
                                    });
                                }, e));
                        }),
                        (e.prototype.apply = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                var t, n, r, o, i, s, a, c, u, l, d, p, f, h, m, g, v, y, _, b;
                                return Tv(this, function (w) {
                                    switch (w.label) {
                                        case 0:
                                            if (!e) return [2];
                                            (t = Av(e, 1)),
                                                (n = t[0]),
                                                (r = Av(e, 2)),
                                                (o = r[1]),
                                                (i = this.plugins.filter(function (e) {
                                                    return "before" === e.type;
                                                })),
                                                (w.label = 1);
                                        case 1:
                                            w.trys.push([1, 6, 7, 8]), (s = Cv(i)), (a = s.next()), (w.label = 2);
                                        case 2:
                                            return a.done ? [3, 5] : (p = a.value).execute ? [4, p.execute(xv({}, n))] : [3, 4];
                                        case 3:
                                            if (null === (f = w.sent())) return o({ event: n, code: 0, message: "" }), [2];
                                            (n = f), (w.label = 4);
                                        case 4:
                                            return (a = s.next()), [3, 2];
                                        case 5:
                                            return [3, 8];
                                        case 6:
                                            return (c = w.sent()), (v = { error: c }), [3, 8];
                                        case 7:
                                            try {
                                                a && !a.done && (y = s.return) && y.call(s);
                                            } finally {
                                                if (v) throw v.error;
                                            }
                                            return [7];
                                        case 8:
                                            (u = this.plugins.filter(function (e) {
                                                return "enrichment" === e.type || void 0 === e.type;
                                            })),
                                                (w.label = 9);
                                        case 9:
                                            w.trys.push([9, 14, 15, 16]), (l = Cv(u)), (d = l.next()), (w.label = 10);
                                        case 10:
                                            return d.done ? [3, 13] : (p = d.value).execute ? [4, p.execute(xv({}, n))] : [3, 12];
                                        case 11:
                                            if (null === (f = w.sent())) return o({ event: n, code: 0, message: "" }), [2];
                                            (n = f), (w.label = 12);
                                        case 12:
                                            return (d = l.next()), [3, 10];
                                        case 13:
                                            return [3, 16];
                                        case 14:
                                            return (h = w.sent()), (_ = { error: h }), [3, 16];
                                        case 15:
                                            try {
                                                d && !d.done && (b = l.return) && b.call(l);
                                            } finally {
                                                if (_) throw _.error;
                                            }
                                            return [7];
                                        case 16:
                                            return (
                                                (m = this.plugins.filter(function (e) {
                                                    return "destination" === e.type;
                                                })),
                                                (g = m.map(function (e) {
                                                    var t = xv({}, n);
                                                    return e.execute(t).catch(function (e) {
                                                        return Bv(t, 0, String(e));
                                                    });
                                                })),
                                                Promise.all(g).then(function (e) {
                                                    var t = Av(e, 1)[0] || Bv(n, 100, "Event not tracked, no destination plugins on the instance");
                                                    o(t);
                                                }),
                                                [2]
                                            );
                                    }
                                });
                            });
                        }),
                        (e.prototype.flush = function () {
                            return Iv(this, void 0, void 0, function () {
                                var e,
                                    t,
                                    n,
                                    r = this;
                                return Tv(this, function (o) {
                                    switch (o.label) {
                                        case 0:
                                            return (
                                                (e = this.queue),
                                                (this.queue = []),
                                                [
                                                    4,
                                                    Promise.all(
                                                        e.map(function (e) {
                                                            return r.apply(e);
                                                        })
                                                    ),
                                                ]
                                            );
                                        case 1:
                                            return (
                                                o.sent(),
                                                (t = this.plugins.filter(function (e) {
                                                    return "destination" === e.type;
                                                })),
                                                (n = t.map(function (e) {
                                                    return e.flush && e.flush();
                                                })),
                                                [4, Promise.all(n)]
                                            );
                                        case 2:
                                            return o.sent(), [2];
                                    }
                                });
                            });
                        }),
                        e
                    );
                })(),
                iy = function (e, t) {
                    return xv(xv({}, t), { event_type: Qv.IDENTIFY, user_properties: e.getUserProperties() });
                },
                sy = (function () {
                    function e(e) {
                        void 0 === e && (e = "$default"), (this.initializing = !1), (this.isReady = !1), (this.q = []), (this.dispatchQ = []), (this.logEvent = this.track.bind(this)), (this.timeline = new oy(this)), (this.name = e);
                    }
                    return (
                        (e.prototype._init = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    switch (t.label) {
                                        case 0:
                                            return (this.config = e), this.timeline.reset(this), [4, this.runQueuedFunctions("q")];
                                        case 1:
                                            return t.sent(), (this.isReady = !0), [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.runQueuedFunctions = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                var t, n, r, o, i, s, a, c;
                                return Tv(this, function (u) {
                                    switch (u.label) {
                                        case 0:
                                            (t = this[e]), (this[e] = []), (u.label = 1);
                                        case 1:
                                            u.trys.push([1, 8, 9, 10]), (n = Cv(t)), (r = n.next()), (u.label = 2);
                                        case 2:
                                            return r.done ? [3, 7] : ((o = r.value), (i = o()) && "promise" in i ? [4, i.promise] : [3, 4]);
                                        case 3:
                                            return u.sent(), [3, 6];
                                        case 4:
                                            return [4, i];
                                        case 5:
                                            u.sent(), (u.label = 6);
                                        case 6:
                                            return (r = n.next()), [3, 2];
                                        case 7:
                                            return [3, 10];
                                        case 8:
                                            return (s = u.sent()), (a = { error: s }), [3, 10];
                                        case 9:
                                            try {
                                                r && !r.done && (c = n.return) && c.call(n);
                                            } finally {
                                                if (a) throw a.error;
                                            }
                                            return [7];
                                        case 10:
                                            return this[e].length ? [4, this.runQueuedFunctions(e)] : [3, 12];
                                        case 11:
                                            u.sent(), (u.label = 12);
                                        case 12:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.track = function (e, t, n) {
                            var r = (function (e, t, n) {
                                return xv(xv(xv({}, "string" == typeof e ? { event_type: e } : e), n), t && { event_properties: t });
                            })(e, t, n);
                            return Fv(this.dispatch(r));
                        }),
                        (e.prototype.identify = function (e, t) {
                            var n = iy(e, t);
                            return Fv(this.dispatch(n));
                        }),
                        (e.prototype.groupIdentify = function (e, t, n, r) {
                            var o = (function (e, t, n, r) {
                                var o;
                                return xv(xv({}, r), { event_type: Qv.GROUP_IDENTIFY, group_properties: n.getUserProperties(), groups: ((o = {}), (o[e] = t), o) });
                            })(e, t, n, r);
                            return Fv(this.dispatch(o));
                        }),
                        (e.prototype.setGroup = function (e, t, n) {
                            var r = (function (e, t, n) {
                                var r,
                                    o = new ny();
                                return o.set(e, t), xv(xv({}, n), { event_type: Qv.IDENTIFY, user_properties: o.getUserProperties(), groups: ((r = {}), (r[e] = t), r) });
                            })(e, t, n);
                            return Fv(this.dispatch(r));
                        }),
                        (e.prototype.revenue = function (e, t) {
                            var n = (function (e, t) {
                                return xv(xv({}, t), { event_type: Qv.REVENUE, event_properties: e.getEventProperties() });
                            })(e, t);
                            return Fv(this.dispatch(n));
                        }),
                        (e.prototype.add = function (e) {
                            return this.isReady ? this._addPlugin(e) : (this.q.push(this._addPlugin.bind(this, e)), Fv());
                        }),
                        (e.prototype._addPlugin = function (e) {
                            return Fv(this.timeline.register(e, this.config));
                        }),
                        (e.prototype.remove = function (e) {
                            return this.isReady ? this._removePlugin(e) : (this.q.push(this._removePlugin.bind(this, e)), Fv());
                        }),
                        (e.prototype._removePlugin = function (e) {
                            return Fv(this.timeline.deregister(e));
                        }),
                        (e.prototype.dispatchWithCallback = function (e, t) {
                            if (!this.isReady) return t(Bv(e, 0, "Client not initialized"));
                            this.process(e).then(t);
                        }),
                        (e.prototype.dispatch = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                var t = this;
                                return Tv(this, function (n) {
                                    return this.isReady
                                        ? [2, this.process(e)]
                                        : [
                                              2,
                                              new Promise(function (n) {
                                                  t.dispatchQ.push(t.dispatchWithCallback.bind(t, e, n));
                                              }),
                                          ];
                                });
                            });
                        }),
                        (e.prototype.process = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                var t, n, r;
                                return Tv(this, function (o) {
                                    switch (o.label) {
                                        case 0:
                                            return o.trys.push([0, 2, , 3]), this.config.optOut ? [2, Bv(e, 0, "Event skipped due to optOut config")] : [4, this.timeline.push(e)];
                                        case 1:
                                            return 200 === (r = o.sent()).code ? this.config.loggerProvider.log(r.message) : 100 === r.code ? this.config.loggerProvider.warn(r.message) : this.config.loggerProvider.error(r.message), [2, r];
                                        case 2:
                                            return (t = o.sent()), (n = String(t)), this.config.loggerProvider.error(n), [2, (r = Bv(e, 0, n))];
                                        case 3:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.setOptOut = function (e) {
                            this.isReady ? this._setOptOut(e) : this.q.push(this._setOptOut.bind(this, Boolean(e)));
                        }),
                        (e.prototype._setOptOut = function (e) {
                            this.config.optOut = Boolean(e);
                        }),
                        (e.prototype.flush = function () {
                            return Fv(this.timeline.flush());
                        }),
                        e
                    );
                })(),
                ay = function (e, t) {
                    return "boolean" == typeof e ? e : !1 !== (null == e ? void 0 : e[t]);
                },
                cy = function (e) {
                    return ay(e, "attribution");
                },
                uy = function (e) {
                    return ay(e, "pageViews");
                },
                ly = function (e) {
                    return ay(e, "sessions");
                },
                dy = function (e) {
                    var t,
                        n = function () {
                            return !1;
                        },
                        r = void 0,
                        o = e.pageCounter;
                    return (
                        uy(e.defaultTracking) &&
                            ((n = void 0),
                            (t = void 0),
                            e.defaultTracking &&
                                "object" == typeof e.defaultTracking &&
                                e.defaultTracking.pageViews &&
                                "object" == typeof e.defaultTracking.pageViews &&
                                ("trackOn" in e.defaultTracking.pageViews && (n = e.defaultTracking.pageViews.trackOn),
                                "trackHistoryChanges" in e.defaultTracking.pageViews && (r = e.defaultTracking.pageViews.trackHistoryChanges),
                                "eventType" in e.defaultTracking.pageViews && e.defaultTracking.pageViews.eventType && (t = e.defaultTracking.pageViews.eventType))),
                        { trackOn: n, trackHistoryChanges: r, eventType: t, pageCounter: o }
                    );
                },
                py = "dclid",
                fy = "fbclid",
                hy = "gbraid",
                my = "gclid",
                gy = "ko_click_id",
                vy = "li_fat_id",
                yy = "msclkid",
                _y = "rtd_cid",
                by = "ttclid",
                wy = "twclid",
                Sy = "wbraid",
                ky = {
                    utm_campaign: void 0,
                    utm_content: void 0,
                    utm_id: void 0,
                    utm_medium: void 0,
                    utm_source: void 0,
                    utm_term: void 0,
                    referrer: void 0,
                    referring_domain: void 0,
                    dclid: void 0,
                    gbraid: void 0,
                    gclid: void 0,
                    fbclid: void 0,
                    ko_click_id: void 0,
                    li_fat_id: void 0,
                    msclkid: void 0,
                    rtd_cid: void 0,
                    ttclid: void 0,
                    twclid: void 0,
                    wbraid: void 0,
                },
                xy = function (e) {
                    var t = e.split(".");
                    return t.length <= 2 ? e : t.slice(t.length - 2, t.length).join(".");
                },
                Ey = function (e, t, n, r) {
                    void 0 === r && (r = !0);
                    e.referrer;
                    var o = e.referring_domain,
                        i = Ev(e, ["referrer", "referring_domain"]),
                        s = t || {},
                        a = (s.referrer, s.referring_domain),
                        c = Ev(s, ["referrer", "referring_domain"]);
                    if (Iy(n.excludeReferrers, e.referring_domain)) return !1;
                    if (
                        !r &&
                        (function (e) {
                            return Object.values(e).every(function (e) {
                                return !e;
                            });
                        })(e) &&
                        t
                    )
                        return !1;
                    var u = JSON.stringify(i) !== JSON.stringify(c),
                        l = xy(o || "") !== xy(a || "");
                    return !t || u || l;
                },
                Iy = function (e, t) {
                    return (
                        void 0 === e && (e = []),
                        void 0 === t && (t = ""),
                        e.some(function (e) {
                            return e instanceof RegExp ? e.test(t) : e === t;
                        })
                    );
                },
                Ty = function () {
                    var e = "ampIntegrationContext";
                    return "undefined" != typeof globalThis && void 0 !== globalThis[e]
                        ? globalThis[e]
                        : "undefined" != typeof globalThis
                        ? globalThis
                        : "undefined" != typeof window
                        ? window
                        : "undefined" != typeof self
                        ? self
                        : void 0 !== n.g
                        ? n.g
                        : void 0;
                },
                Cy = function () {
                    var e,
                        t = Ty();
                    return (null === (e = null == t ? void 0 : t.location) || void 0 === e ? void 0 : e.search)
                        ? t.location.search
                              .substring(1)
                              .split("&")
                              .filter(Boolean)
                              .reduce(function (e, t) {
                                  var n = t.split("=", 2),
                                      r = Ay(n[0]),
                                      o = Ay(n[1]);
                                  return o ? ((e[r] = o), e) : e;
                              }, {})
                        : {};
                },
                Ay = function (e) {
                    void 0 === e && (e = "");
                    try {
                        return decodeURIComponent(e);
                    } catch (e) {
                        return "";
                    }
                },
                My = (function () {
                    function e() {}
                    return (
                        (e.prototype.parse = function () {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (e) {
                                    return [2, xv(xv(xv(xv({}, ky), this.getUtmParam()), this.getReferrer()), this.getClickIds())];
                                });
                            });
                        }),
                        (e.prototype.getUtmParam = function () {
                            var e = Cy();
                            return { utm_campaign: e.utm_campaign, utm_content: e.utm_content, utm_id: e.utm_id, utm_medium: e.utm_medium, utm_source: e.utm_source, utm_term: e.utm_term };
                        }),
                        (e.prototype.getReferrer = function () {
                            var e,
                                t,
                                n = { referrer: void 0, referring_domain: void 0 };
                            try {
                                (n.referrer = document.referrer || void 0), (n.referring_domain = null !== (t = null === (e = n.referrer) || void 0 === e ? void 0 : e.split("/")[2]) && void 0 !== t ? t : void 0);
                            } catch (e) {}
                            return n;
                        }),
                        (e.prototype.getClickIds = function () {
                            var e,
                                t = Cy();
                            return ((e = {})[py] = t[py]), (e[fy] = t[fy]), (e[hy] = t[hy]), (e[my] = t[my]), (e[gy] = t[gy]), (e[vy] = t[vy]), (e[yy] = t[yy]), (e[_y] = t[_y]), (e[by] = t[by]), (e[wy] = t[wy]), (e[Sy] = t[Sy]), e;
                        }),
                        e
                    );
                })(),
                Ry = function (e, t) {
                    return void 0 === t && (t = Date.now()), Date.now() - t > e;
                },
                Oy = (function () {
                    function e(e, t) {
                        var n, r, o, i, s, a;
                        (this.shouldTrackNewCampaign = !1),
                            (this.options = xv(
                                {
                                    initialEmptyValue: "EMPTY",
                                    resetSessionOnNewCampaign: !1,
                                    excludeReferrers:
                                        ((r = null === (n = t.cookieOptions) || void 0 === n ? void 0 : n.domain), (o = r), o ? (o.startsWith(".") && (o = o.substring(1)), [new RegExp("".concat(o.replace(".", "\\."), "$"))]) : []),
                                },
                                e
                            )),
                            (this.storage = t.cookieStorage),
                            (this.storageKey = ((i = t.apiKey), void 0 === (s = "MKTG") && (s = ""), void 0 === a && (a = 10), [jv, s, i.substring(0, a)].filter(Boolean).join("_"))),
                            (this.currentCampaign = ky),
                            (this.sessionTimeout = t.sessionTimeout),
                            (this.lastEventTime = t.lastEventTime),
                            t.loggerProvider.log("Installing web attribution tracking.");
                    }
                    return (
                        (e.prototype.init = function () {
                            return Iv(this, void 0, void 0, function () {
                                var e, t;
                                return Tv(this, function (n) {
                                    switch (n.label) {
                                        case 0:
                                            return [4, this.fetchCampaign()];
                                        case 1:
                                            return (
                                                (t = Av.apply(void 0, [n.sent(), 2])),
                                                (this.currentCampaign = t[0]),
                                                (this.previousCampaign = t[1]),
                                                (e = !this.lastEventTime || Ry(this.sessionTimeout, this.lastEventTime)),
                                                Ey(this.currentCampaign, this.previousCampaign, this.options, e) ? ((this.shouldTrackNewCampaign = !0), [4, this.storage.set(this.storageKey, this.currentCampaign)]) : [3, 3]
                                            );
                                        case 2:
                                            n.sent(), (n.label = 3);
                                        case 3:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.fetchCampaign = function () {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (e) {
                                    switch (e.label) {
                                        case 0:
                                            return [4, Promise.all([new My().parse(), this.storage.get(this.storageKey)])];
                                        case 1:
                                            return [2, e.sent()];
                                    }
                                });
                            });
                        }),
                        (e.prototype.generateCampaignEvent = function (e) {
                            this.shouldTrackNewCampaign = !1;
                            var t,
                                n,
                                r,
                                o,
                                i =
                                    ((t = this.currentCampaign),
                                    (n = this.options),
                                    (r = xv(xv({}, ky), t)),
                                    (o = Object.entries(r).reduce(function (e, t) {
                                        var r,
                                            o = Av(t, 2),
                                            i = o[0],
                                            s = o[1];
                                        return e.setOnce("initial_".concat(i), null !== (r = null != s ? s : n.initialEmptyValue) && void 0 !== r ? r : "EMPTY"), s ? e.set(i, s) : e.unset(i);
                                    }, new ny())),
                                    iy(o));
                            return e && (i.event_id = e), i;
                        }),
                        (e.prototype.shouldSetSessionIdOnNewCampaign = function () {
                            return this.shouldTrackNewCampaign && !!this.options.resetSessionOnNewCampaign;
                        }),
                        e
                    );
                })(),
                Ny = (function () {
                    function e() {}
                    return (
                        (e.prototype.getApplicationContext = function () {
                            return { versionName: this.versionName, language: Py(), platform: "Web", os: void 0, deviceModel: void 0 };
                        }),
                        e
                    );
                })(),
                Py = function () {
                    return ("undefined" != typeof navigator && ((navigator.languages && navigator.languages[0]) || navigator.language)) || "";
                },
                Dy = (function () {
                    function e() {
                        this.queue = [];
                    }
                    return (
                        (e.prototype.logEvent = function (e) {
                            this.receiver ? this.receiver(e) : this.queue.length < 512 && this.queue.push(e);
                        }),
                        (e.prototype.setEventReceiver = function (e) {
                            (this.receiver = e),
                                this.queue.length > 0 &&
                                    (this.queue.forEach(function (t) {
                                        e(t);
                                    }),
                                    (this.queue = []));
                        }),
                        e
                    );
                })(),
                Ly = function () {
                    return (
                        (Ly =
                            Object.assign ||
                            function (e) {
                                for (var t, n = 1, r = arguments.length; n < r; n++) for (var o in (t = arguments[n])) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                                return e;
                            }),
                        Ly.apply(this, arguments)
                    );
                },
                Fy = function (e, t) {
                    var n = typeof e;
                    if (n !== typeof t) return !1;
                    for (var r = 0, o = ["string", "number", "boolean", "undefined"]; r < o.length; r++) {
                        if (o[r] === n) return e === t;
                    }
                    if (null == e && null == t) return !0;
                    if (null == e || null == t) return !1;
                    if (e.length !== t.length) return !1;
                    var i = Array.isArray(e),
                        s = Array.isArray(t);
                    if (i !== s) return !1;
                    if (!i || !s) {
                        var a = Object.keys(e).sort(),
                            c = Object.keys(t).sort();
                        if (!Fy(a, c)) return !1;
                        var u = !0;
                        return (
                            Object.keys(e).forEach(function (n) {
                                Fy(e[n], t[n]) || (u = !1);
                            }),
                            u
                        );
                    }
                    for (var l = 0; l < e.length; l++) if (!Fy(e[l], t[l])) return !1;
                    return !0;
                };
            Object.entries ||
                (Object.entries = function (e) {
                    for (var t = Object.keys(e), n = t.length, r = new Array(n); n--; ) r[n] = [t[n], e[t[n]]];
                    return r;
                });
            var jy = (function () {
                    function e() {
                        (this.identity = { userProperties: {} }), (this.listeners = new Set());
                    }
                    return (
                        (e.prototype.editIdentity = function () {
                            var e = this,
                                t = Ly({}, this.identity.userProperties),
                                n = Ly(Ly({}, this.identity), { userProperties: t });
                            return {
                                setUserId: function (e) {
                                    return (n.userId = e), this;
                                },
                                setDeviceId: function (e) {
                                    return (n.deviceId = e), this;
                                },
                                setUserProperties: function (e) {
                                    return (n.userProperties = e), this;
                                },
                                setOptOut: function (e) {
                                    return (n.optOut = e), this;
                                },
                                updateUserProperties: function (e) {
                                    for (var t = n.userProperties || {}, r = 0, o = Object.entries(e); r < o.length; r++) {
                                        var i = o[r],
                                            s = i[0],
                                            a = i[1];
                                        switch (s) {
                                            case "$set":
                                                for (var c = 0, u = Object.entries(a); c < u.length; c++) {
                                                    var l = u[c],
                                                        d = l[0],
                                                        p = l[1];
                                                    t[d] = p;
                                                }
                                                break;
                                            case "$unset":
                                                for (var f = 0, h = Object.keys(a); f < h.length; f++) {
                                                    delete t[(d = h[f])];
                                                }
                                                break;
                                            case "$clearAll":
                                                t = {};
                                        }
                                    }
                                    return (n.userProperties = t), this;
                                },
                                commit: function () {
                                    return e.setIdentity(n), this;
                                },
                            };
                        }),
                        (e.prototype.getIdentity = function () {
                            return Ly({}, this.identity);
                        }),
                        (e.prototype.setIdentity = function (e) {
                            var t = Ly({}, this.identity);
                            (this.identity = Ly({}, e)),
                                Fy(t, this.identity) ||
                                    this.listeners.forEach(function (t) {
                                        t(e);
                                    });
                        }),
                        (e.prototype.addIdentityListener = function (e) {
                            this.listeners.add(e);
                        }),
                        (e.prototype.removeIdentityListener = function (e) {
                            this.listeners.delete(e);
                        }),
                        e
                    );
                })(),
                $y = "undefined" != typeof globalThis ? globalThis : void 0 !== n.g ? n.g : self,
                Uy = (function () {
                    function e() {
                        (this.identityStore = new jy()), (this.eventBridge = new Dy()), (this.applicationContextProvider = new Ny());
                    }
                    return (
                        (e.getInstance = function (t) {
                            return $y.analyticsConnectorInstances || ($y.analyticsConnectorInstances = {}), $y.analyticsConnectorInstances[t] || ($y.analyticsConnectorInstances[t] = new e()), $y.analyticsConnectorInstances[t];
                        }),
                        e
                    );
                })(),
                By = function (e) {
                    return void 0 === e && (e = "$default_instance"), Uy.getInstance(e);
                },
                qy = (function () {
                    function e() {
                        (this.name = "identity"), (this.type = "before"), (this.identityStore = By().identityStore);
                    }
                    return (
                        (e.prototype.execute = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                var t;
                                return Tv(this, function (n) {
                                    return (t = e.user_properties) && this.identityStore.editIdentity().updateUserProperties(t).commit(), [2, e];
                                });
                            });
                        }),
                        (e.prototype.setup = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    return e.instanceName && (this.identityStore = By(e.instanceName).identityStore), [2];
                                });
                            });
                        }),
                        e
                    );
                })(),
                zy = function (e, t) {
                    for (var n = 0; n < t.length; n++) {
                        var r = t[n],
                            o = r.name,
                            i = r.args,
                            s = r.resolve,
                            a = e && e[o];
                        if ("function" == typeof a) {
                            var c = a.apply(e, i);
                            "function" == typeof s && s(null == c ? void 0 : c.promise);
                        }
                    }
                    return e;
                },
                Hy = function (e) {
                    return e && void 0 !== e._q;
                },
                Wy = function () {
                    var e, t, n, r;
                    if ("undefined" == typeof navigator) return "";
                    var o = navigator.userLanguage;
                    return null !== (r = null !== (n = null !== (t = null === (e = navigator.languages) || void 0 === e ? void 0 : e[0]) && void 0 !== t ? t : navigator.language) && void 0 !== n ? n : o) && void 0 !== r ? r : "";
                },
                Vy = (function () {
                    function e() {
                        (this.name = "@amplitude/plugin-context-browser"), (this.type = "before"), (this.library = "amplitude-ts/".concat("2.9.3")), "undefined" != typeof navigator && (this.userAgent = navigator.userAgent);
                    }
                    return (
                        (e.prototype.setup = function (e) {
                            return (this.config = e), Promise.resolve(void 0);
                        }),
                        (e.prototype.execute = function (e) {
                            var t, n;
                            return Iv(this, void 0, void 0, function () {
                                var r, o, i;
                                return Tv(this, function (s) {
                                    return (
                                        (r = new Date().getTime()),
                                        (o = null !== (t = this.config.lastEventId) && void 0 !== t ? t : -1),
                                        (i = null !== (n = e.event_id) && void 0 !== n ? n : o + 1),
                                        (this.config.lastEventId = i),
                                        e.time || (this.config.lastEventTime = r),
                                        [
                                            2,
                                            xv(
                                                xv(
                                                    xv(
                                                        xv(
                                                            xv(
                                                                xv(
                                                                    xv(
                                                                        xv(
                                                                            { user_id: this.config.userId, device_id: this.config.deviceId, session_id: this.config.sessionId, time: r },
                                                                            this.config.appVersion && { app_version: this.config.appVersion }
                                                                        ),
                                                                        this.config.trackingOptions.platform && { platform: "Web" }
                                                                    ),
                                                                    this.config.trackingOptions.language && { language: Wy() }
                                                                ),
                                                                this.config.trackingOptions.ipAddress && { ip: "$remote" }
                                                            ),
                                                            { insert_id: Gv(), partner_id: this.config.partnerId, plan: this.config.plan }
                                                        ),
                                                        this.config.ingestionMetadata && { ingestion_metadata: { source_name: this.config.ingestionMetadata.sourceName, source_version: this.config.ingestionMetadata.sourceVersion } }
                                                    ),
                                                    e
                                                ),
                                                { event_id: i, library: this.library, user_agent: this.userAgent }
                                            ),
                                        ]
                                    );
                                });
                            });
                        }),
                        e
                    );
                })(),
                Yy = (function () {
                    function e() {
                        this.memoryStorage = new Map();
                    }
                    return (
                        (e.prototype.isEnabled = function () {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (e) {
                                    return [2, !0];
                                });
                            });
                        }),
                        (e.prototype.get = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    return [2, this.memoryStorage.get(e)];
                                });
                            });
                        }),
                        (e.prototype.getRaw = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                var t;
                                return Tv(this, function (n) {
                                    switch (n.label) {
                                        case 0:
                                            return [4, this.get(e)];
                                        case 1:
                                            return [2, (t = n.sent()) ? JSON.stringify(t) : void 0];
                                    }
                                });
                            });
                        }),
                        (e.prototype.set = function (e, t) {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (n) {
                                    return this.memoryStorage.set(e, t), [2];
                                });
                            });
                        }),
                        (e.prototype.remove = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    return this.memoryStorage.delete(e), [2];
                                });
                            });
                        }),
                        (e.prototype.reset = function () {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (e) {
                                    return this.memoryStorage.clear(), [2];
                                });
                            });
                        }),
                        e
                    );
                })(),
                Gy = function (e, t, n) {
                    return void 0 === t && (t = ""), void 0 === n && (n = 10), [jv, t, e.substring(0, n)].filter(Boolean).join("_");
                },
                Ky = (function () {
                    function e(e) {
                        this.options = xv({}, e);
                    }
                    return (
                        (e.prototype.isEnabled = function () {
                            return Iv(this, void 0, void 0, function () {
                                var t, n;
                                return Tv(this, function (r) {
                                    switch (r.label) {
                                        case 0:
                                            if (!Ty()) return [2, !1];
                                            (e.testValue = String(Date.now())), (t = new e(this.options)), (n = "AMP_TEST"), (r.label = 1);
                                        case 1:
                                            return r.trys.push([1, 4, 5, 7]), [4, t.set(n, e.testValue)];
                                        case 2:
                                            return r.sent(), [4, t.get(n)];
                                        case 3:
                                            return [2, r.sent() === e.testValue];
                                        case 4:
                                            return r.sent(), [2, !1];
                                        case 5:
                                            return [4, t.remove(n)];
                                        case 6:
                                            return r.sent(), [7];
                                        case 7:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.get = function (e) {
                            var t;
                            return Iv(this, void 0, void 0, function () {
                                var n, r;
                                return Tv(this, function (o) {
                                    switch (o.label) {
                                        case 0:
                                            return [4, this.getRaw(e)];
                                        case 1:
                                            if (!(n = o.sent())) return [2, void 0];
                                            try {
                                                return void 0 === (r = null !== (t = Jy(n)) && void 0 !== t ? t : Xy(n))
                                                    ? (console.error("Amplitude Logger [Error]: Failed to decode cookie value for key: ".concat(e, ", value: ").concat(n)), [2, void 0])
                                                    : [2, JSON.parse(r)];
                                            } catch (t) {
                                                return console.error("Amplitude Logger [Error]: Failed to parse cookie value for key: ".concat(e, ", value: ").concat(n)), [2, void 0];
                                            }
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.getRaw = function (e) {
                            var t, n;
                            return Iv(this, void 0, void 0, function () {
                                var r, o, i;
                                return Tv(this, function (s) {
                                    return (
                                        (r = Ty()),
                                        (o = null !== (n = null === (t = null == r ? void 0 : r.document) || void 0 === t ? void 0 : t.cookie.split("; ")) && void 0 !== n ? n : []),
                                        (i = o.find(function (t) {
                                            return 0 === t.indexOf(e + "=");
                                        })),
                                        i ? [2, i.substring(e.length + 1)] : [2, void 0]
                                    );
                                });
                            });
                        }),
                        (e.prototype.set = function (e, t) {
                            var n;
                            return Iv(this, void 0, void 0, function () {
                                var r, o, i, s, a, c, u;
                                return Tv(this, function (l) {
                                    try {
                                        (r = null !== (n = this.options.expirationDays) && void 0 !== n ? n : 0),
                                            (i = void 0),
                                            (o = null !== t ? r : -1) && ((s = new Date()).setTime(s.getTime() + 24 * o * 60 * 60 * 1e3), (i = s)),
                                            (a = "".concat(e, "=").concat(btoa(encodeURIComponent(JSON.stringify(t))))),
                                            i && (a += "; expires=".concat(i.toUTCString())),
                                            (a += "; path=/"),
                                            this.options.domain && (a += "; domain=".concat(this.options.domain)),
                                            this.options.secure && (a += "; Secure"),
                                            this.options.sameSite && (a += "; SameSite=".concat(this.options.sameSite)),
                                            (c = Ty()) && (c.document.cookie = a);
                                    } catch (t) {
                                        (u = t instanceof Error ? t.message : String(t)), console.error("Amplitude Logger [Error]: Failed to set cookie for key: ".concat(e, ". Error: ").concat(u));
                                    }
                                    return [2];
                                });
                            });
                        }),
                        (e.prototype.remove = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    switch (t.label) {
                                        case 0:
                                            return [4, this.set(e, null)];
                                        case 1:
                                            return t.sent(), [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.reset = function () {
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (e) {
                                    return [2];
                                });
                            });
                        }),
                        e
                    );
                })(),
                Jy = function (e) {
                    try {
                        return decodeURIComponent(atob(e));
                    } catch (e) {
                        return;
                    }
                },
                Xy = function (e) {
                    try {
                        return decodeURIComponent(atob(decodeURIComponent(e)));
                    } catch (e) {
                        return;
                    }
                },
                Qy = (function () {
                    function e() {}
                    return (
                        (e.prototype.send = function (e, t) {
                            return Promise.resolve(null);
                        }),
                        (e.prototype.buildResponse = function (e) {
                            var t, n, r, o, i, s, a, c, u, l, d, p, f, h, m, g, v, y, _, b, w, S;
                            if ("object" != typeof e) return null;
                            var k = e.code || 0,
                                x = this.buildStatus(k);
                            switch (x) {
                                case Ov.Success:
                                    return {
                                        status: x,
                                        statusCode: k,
                                        body: {
                                            eventsIngested: null !== (t = e.events_ingested) && void 0 !== t ? t : 0,
                                            payloadSizeBytes: null !== (n = e.payload_size_bytes) && void 0 !== n ? n : 0,
                                            serverUploadTime: null !== (r = e.server_upload_time) && void 0 !== r ? r : 0,
                                        },
                                    };
                                case Ov.Invalid:
                                    return {
                                        status: x,
                                        statusCode: k,
                                        body: {
                                            error: null !== (o = e.error) && void 0 !== o ? o : "",
                                            missingField: null !== (i = e.missing_field) && void 0 !== i ? i : "",
                                            eventsWithInvalidFields: null !== (s = e.events_with_invalid_fields) && void 0 !== s ? s : {},
                                            eventsWithMissingFields: null !== (a = e.events_with_missing_fields) && void 0 !== a ? a : {},
                                            eventsWithInvalidIdLengths: null !== (c = e.events_with_invalid_id_lengths) && void 0 !== c ? c : {},
                                            epsThreshold: null !== (u = e.eps_threshold) && void 0 !== u ? u : 0,
                                            exceededDailyQuotaDevices: null !== (l = e.exceeded_daily_quota_devices) && void 0 !== l ? l : {},
                                            silencedDevices: null !== (d = e.silenced_devices) && void 0 !== d ? d : [],
                                            silencedEvents: null !== (p = e.silenced_events) && void 0 !== p ? p : [],
                                            throttledDevices: null !== (f = e.throttled_devices) && void 0 !== f ? f : {},
                                            throttledEvents: null !== (h = e.throttled_events) && void 0 !== h ? h : [],
                                        },
                                    };
                                case Ov.PayloadTooLarge:
                                    return { status: x, statusCode: k, body: { error: null !== (m = e.error) && void 0 !== m ? m : "" } };
                                case Ov.RateLimit:
                                    return {
                                        status: x,
                                        statusCode: k,
                                        body: {
                                            error: null !== (g = e.error) && void 0 !== g ? g : "",
                                            epsThreshold: null !== (v = e.eps_threshold) && void 0 !== v ? v : 0,
                                            throttledDevices: null !== (y = e.throttled_devices) && void 0 !== y ? y : {},
                                            throttledUsers: null !== (_ = e.throttled_users) && void 0 !== _ ? _ : {},
                                            exceededDailyQuotaDevices: null !== (b = e.exceeded_daily_quota_devices) && void 0 !== b ? b : {},
                                            exceededDailyQuotaUsers: null !== (w = e.exceeded_daily_quota_users) && void 0 !== w ? w : {},
                                            throttledEvents: null !== (S = e.throttled_events) && void 0 !== S ? S : [],
                                        },
                                    };
                                case Ov.Timeout:
                                default:
                                    return { status: x, statusCode: k };
                            }
                        }),
                        (e.prototype.buildStatus = function (e) {
                            return e >= 200 && e < 300 ? Ov.Success : 429 === e ? Ov.RateLimit : 413 === e ? Ov.PayloadTooLarge : 408 === e ? Ov.Timeout : e >= 400 && e < 500 ? Ov.Invalid : e >= 500 ? Ov.Failed : Ov.Unknown;
                        }),
                        e
                    );
                })(),
                Zy = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        kv(t, e),
                        (t.prototype.send = function (e, t) {
                            return Iv(this, void 0, void 0, function () {
                                var n, r, o;
                                return Tv(this, function (i) {
                                    switch (i.label) {
                                        case 0:
                                            if ("undefined" == typeof fetch) throw new Error("FetchTransport is not supported");
                                            return (n = { headers: { "Content-Type": "application/json", Accept: "*/*" }, body: JSON.stringify(t), method: "POST" }), [4, fetch(e, n)];
                                        case 1:
                                            return [4, (r = i.sent()).text()];
                                        case 2:
                                            o = i.sent();
                                            try {
                                                return [2, this.buildResponse(JSON.parse(o))];
                                            } catch (e) {
                                                return [2, this.buildResponse({ code: r.status })];
                                            }
                                            return [2];
                                    }
                                });
                            });
                        }),
                        t
                    );
                })(Qy),
                e_ = (function () {
                    function e(e) {
                        this.storage = e;
                    }
                    return (
                        (e.prototype.isEnabled = function () {
                            return Iv(this, void 0, void 0, function () {
                                var t, n, r;
                                return Tv(this, function (o) {
                                    switch (o.label) {
                                        case 0:
                                            if (!this.storage) return [2, !1];
                                            (t = String(Date.now())), (n = new e(this.storage)), (r = "AMP_TEST"), (o.label = 1);
                                        case 1:
                                            return o.trys.push([1, 4, 5, 7]), [4, n.set(r, t)];
                                        case 2:
                                            return o.sent(), [4, n.get(r)];
                                        case 3:
                                            return [2, o.sent() === t];
                                        case 4:
                                            return o.sent(), [2, !1];
                                        case 5:
                                            return [4, n.remove(r)];
                                        case 6:
                                            return o.sent(), [7];
                                        case 7:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.get = function (e) {
                            return Iv(this, void 0, void 0, function () {
                                var t;
                                return Tv(this, function (n) {
                                    switch (n.label) {
                                        case 0:
                                            return n.trys.push([0, 2, , 3]), [4, this.getRaw(e)];
                                        case 1:
                                            return (t = n.sent()) ? [2, JSON.parse(t)] : [2, void 0];
                                        case 2:
                                            return n.sent(), console.error("[Amplitude] Error: Could not get value from storage"), [2, void 0];
                                        case 3:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype.getRaw = function (e) {
                            var t;
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (n) {
                                    return [2, (null === (t = this.storage) || void 0 === t ? void 0 : t.getItem(e)) || void 0];
                                });
                            });
                        }),
                        (e.prototype.set = function (e, t) {
                            var n;
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (r) {
                                    try {
                                        null === (n = this.storage) || void 0 === n || n.setItem(e, JSON.stringify(t));
                                    } catch (e) {}
                                    return [2];
                                });
                            });
                        }),
                        (e.prototype.remove = function (e) {
                            var t;
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (n) {
                                    try {
                                        null === (t = this.storage) || void 0 === t || t.removeItem(e);
                                    } catch (e) {}
                                    return [2];
                                });
                            });
                        }),
                        (e.prototype.reset = function () {
                            var e;
                            return Iv(this, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    try {
                                        null === (e = this.storage) || void 0 === e || e.clear();
                                    } catch (e) {}
                                    return [2];
                                });
                            });
                        }),
                        e
                    );
                })(),
                t_ = 1e3,
                n_ = (function (e) {
                    function t(t) {
                        var n,
                            r = this;
                        return ((r = e.call(this, null === (n = Ty()) || void 0 === n ? void 0 : n.localStorage) || this).loggerProvider = null == t ? void 0 : t.loggerProvider), r;
                    }
                    return (
                        kv(t, e),
                        (t.prototype.set = function (t, n) {
                            var r;
                            return Iv(this, void 0, void 0, function () {
                                var o;
                                return Tv(this, function (i) {
                                    switch (i.label) {
                                        case 0:
                                            return Array.isArray(n) && n.length > t_ ? ((o = n.length - t_), [4, e.prototype.set.call(this, t, n.slice(0, t_))]) : [3, 2];
                                        case 1:
                                            return i.sent(), null === (r = this.loggerProvider) || void 0 === r || r.error("Failed to save ".concat(o, " events because the queue length exceeded ").concat(t_, ".")), [3, 4];
                                        case 2:
                                            return [4, e.prototype.set.call(this, t, n)];
                                        case 3:
                                            i.sent(), (i.label = 4);
                                        case 4:
                                            return [2];
                                    }
                                });
                            });
                        }),
                        t
                    );
                })(e_),
                r_ = (function (e) {
                    function t() {
                        var t;
                        return e.call(this, null === (t = Ty()) || void 0 === t ? void 0 : t.sessionStorage) || this;
                    }
                    return kv(t, e), t;
                })(e_),
                o_ = (function (e) {
                    function t() {
                        var t = (null !== e && e.apply(this, arguments)) || this;
                        return (t.state = { done: 4 }), t;
                    }
                    return (
                        kv(t, e),
                        (t.prototype.send = function (e, t) {
                            return Iv(this, void 0, void 0, function () {
                                var n = this;
                                return Tv(this, function (r) {
                                    return [
                                        2,
                                        new Promise(function (r, o) {
                                            "undefined" == typeof XMLHttpRequest && o(new Error("XHRTransport is not supported."));
                                            var i = new XMLHttpRequest();
                                            i.open("POST", e, !0),
                                                (i.onreadystatechange = function () {
                                                    if (i.readyState === n.state.done) {
                                                        var e = i.responseText;
                                                        try {
                                                            r(n.buildResponse(JSON.parse(e)));
                                                        } catch (e) {
                                                            r(n.buildResponse({ code: i.status }));
                                                        }
                                                    }
                                                }),
                                                i.setRequestHeader("Content-Type", "application/json"),
                                                i.setRequestHeader("Accept", "*/*"),
                                                i.send(JSON.stringify(t));
                                        }),
                                    ];
                                });
                            });
                        }),
                        t
                    );
                })(Qy),
                i_ = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        kv(t, e),
                        (t.prototype.send = function (e, t) {
                            return Iv(this, void 0, void 0, function () {
                                var n = this;
                                return Tv(this, function (r) {
                                    return [
                                        2,
                                        new Promise(function (r, o) {
                                            var i = Ty();
                                            if (!(null == i ? void 0 : i.navigator.sendBeacon)) throw new Error("SendBeaconTransport is not supported");
                                            try {
                                                var s = JSON.stringify(t);
                                                return r(
                                                    i.navigator.sendBeacon(e, JSON.stringify(t))
                                                        ? n.buildResponse({ code: 200, events_ingested: t.events.length, payload_size_bytes: s.length, server_upload_time: Date.now() })
                                                        : n.buildResponse({ code: 500 })
                                                );
                                            } catch (e) {
                                                o(e);
                                            }
                                        }),
                                    ];
                                });
                            });
                        }),
                        t
                    );
                })(Qy),
                s_ = function (e, t, n) {
                    return (
                        void 0 === n && (n = !0),
                        Iv(void 0, void 0, void 0, function () {
                            var r, o, i, s, a, c, u, l, d;
                            return Tv(this, function (p) {
                                switch (p.label) {
                                    case 0:
                                        return (
                                            (r = (function (e) {
                                                return "".concat(jv.toLowerCase(), "_").concat(e.substring(0, 6));
                                            })(e)),
                                            [4, t.getRaw(r)]
                                        );
                                    case 1:
                                        return (o = p.sent()) ? (n ? [4, t.remove(r)] : [3, 3]) : [2, { optOut: !1 }];
                                    case 2:
                                        p.sent(), (p.label = 3);
                                    case 3:
                                        return (
                                            (i = Av(o.split("."), 6)),
                                            (s = i[0]),
                                            (a = i[1]),
                                            (c = i[2]),
                                            (u = i[3]),
                                            (l = i[4]),
                                            (d = i[5]),
                                            [2, { deviceId: s, userId: c_(a), sessionId: a_(u), lastEventId: a_(d), lastEventTime: a_(l), optOut: Boolean(c) }]
                                        );
                                }
                            });
                        })
                    );
                },
                a_ = function (e) {
                    var t = parseInt(e, 32);
                    if (!isNaN(t)) return t;
                },
                c_ = function (e) {
                    if (atob && escape && e)
                        try {
                            return decodeURIComponent(escape(atob(e)));
                        } catch (e) {
                            return;
                        }
                },
                u_ = "[Amplitude]",
                l_ = ("".concat(u_, " Page Viewed"), "".concat(u_, " Form Started")),
                d_ = "".concat(u_, " Form Submitted"),
                p_ = "".concat(u_, " File Downloaded"),
                f_ = "session_start",
                h_ = "session_end",
                m_ = "".concat(u_, " File Extension"),
                g_ = "".concat(u_, " File Name"),
                v_ = "".concat(u_, " Link ID"),
                y_ = "".concat(u_, " Link Text"),
                __ = "".concat(u_, " Link URL"),
                b_ = "".concat(u_, " Form ID"),
                w_ = "".concat(u_, " Form Name"),
                S_ = "".concat(u_, " Form Destination"),
                k_ = "cookie",
                x_ = (function (e) {
                    function t(t, n, r, o, i, s, a, c, u, l, d, p, f, h, m, g, v, y, _, b, w, S, k, x, E, I, T, C, A, M, R, O) {
                        void 0 === r && (r = new Yy()),
                            void 0 === o && (o = { domain: "", expiration: 365, sameSite: "Lax", secure: !1, upgrade: !0 }),
                            void 0 === a && (a = 1e3),
                            void 0 === c && (c = 5),
                            void 0 === u && (u = 30),
                            void 0 === l && (l = k_),
                            void 0 === m && (m = new zv()),
                            void 0 === g && (g = Rv.Warn),
                            void 0 === y && (y = !1),
                            void 0 === _ && (_ = !1),
                            void 0 === S && (S = ""),
                            void 0 === k && (k = "US"),
                            void 0 === E && (E = 18e5),
                            void 0 === I && (I = new n_({ loggerProvider: m })),
                            void 0 === T && (T = { ipAddress: !0, language: !0, platform: !0 }),
                            void 0 === C && (C = "fetch"),
                            void 0 === A && (A = !1);
                        var N = e.call(this, { apiKey: t, storageProvider: I, transportProvider: T_(C) }) || this;
                        return (
                            (N.apiKey = t),
                            (N.appVersion = n),
                            (N.cookieOptions = o),
                            (N.defaultTracking = i),
                            (N.flushIntervalMillis = a),
                            (N.flushMaxRetries = c),
                            (N.flushQueueSize = u),
                            (N.identityStorage = l),
                            (N.ingestionMetadata = d),
                            (N.instanceName = p),
                            (N.loggerProvider = m),
                            (N.logLevel = g),
                            (N.minIdLength = v),
                            (N.offline = y),
                            (N.partnerId = b),
                            (N.plan = w),
                            (N.serverUrl = S),
                            (N.serverZone = k),
                            (N.sessionTimeout = E),
                            (N.storageProvider = I),
                            (N.trackingOptions = T),
                            (N.transport = C),
                            (N.useBatch = A),
                            (N._optOut = !1),
                            (N._cookieStorage = r),
                            (N.deviceId = s),
                            (N.lastEventId = f),
                            (N.lastEventTime = h),
                            (N.optOut = _),
                            (N.sessionId = x),
                            (N.pageCounter = R),
                            (N.userId = M),
                            (N.debugLogsEnabled = O),
                            N.loggerProvider.enable(O ? Rv.Debug : N.logLevel),
                            N
                        );
                    }
                    return (
                        kv(t, e),
                        Object.defineProperty(t.prototype, "cookieStorage", {
                            get: function () {
                                return this._cookieStorage;
                            },
                            set: function (e) {
                                this._cookieStorage !== e && ((this._cookieStorage = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "deviceId", {
                            get: function () {
                                return this._deviceId;
                            },
                            set: function (e) {
                                this._deviceId !== e && ((this._deviceId = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "userId", {
                            get: function () {
                                return this._userId;
                            },
                            set: function (e) {
                                this._userId !== e && ((this._userId = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "sessionId", {
                            get: function () {
                                return this._sessionId;
                            },
                            set: function (e) {
                                this._sessionId !== e && ((this._sessionId = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "optOut", {
                            get: function () {
                                return this._optOut;
                            },
                            set: function (e) {
                                this._optOut !== e && ((this._optOut = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "lastEventTime", {
                            get: function () {
                                return this._lastEventTime;
                            },
                            set: function (e) {
                                this._lastEventTime !== e && ((this._lastEventTime = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "lastEventId", {
                            get: function () {
                                return this._lastEventId;
                            },
                            set: function (e) {
                                this._lastEventId !== e && ((this._lastEventId = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "pageCounter", {
                            get: function () {
                                return this._pageCounter;
                            },
                            set: function (e) {
                                this._pageCounter !== e && ((this._pageCounter = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        Object.defineProperty(t.prototype, "debugLogsEnabled", {
                            set: function (e) {
                                this._debugLogsEnabled !== e && ((this._debugLogsEnabled = e), this.updateStorage());
                            },
                            enumerable: !1,
                            configurable: !0,
                        }),
                        (t.prototype.updateStorage = function () {
                            var e = {
                                deviceId: this._deviceId,
                                userId: this._userId,
                                sessionId: this._sessionId,
                                optOut: this._optOut,
                                lastEventTime: this._lastEventTime,
                                lastEventId: this._lastEventId,
                                pageCounter: this._pageCounter,
                                debugLogsEnabled: this._debugLogsEnabled,
                            };
                            this.cookieStorage.set(Gy(this.apiKey), e);
                        }),
                        t
                    );
                })(Wv),
                E_ = function (e, t, n) {
                    return (
                        void 0 === t && (t = {}),
                        Iv(void 0, void 0, void 0, function () {
                            var r, o, i, s, a, c, u, l, d, p, f, h, m, g, v, y, _, b, w, S, k, x, E, I, T, C, A, M, R, O, N, P, D, L, F, j, $, U, B, q, z, H, W;
                            return Tv(this, function (V) {
                                switch (V.label) {
                                    case 0:
                                        return (r = t.identityStorage || k_), (w = {}), r === k_ ? [3, 1] : ((i = ""), [3, 5]);
                                    case 1:
                                        return null === (k = null === (S = t.cookieOptions) || void 0 === S ? void 0 : S.domain) || void 0 === k ? [3, 2] : ((s = k), [3, 4]);
                                    case 2:
                                        return [4, C_()];
                                    case 3:
                                        (s = V.sent()), (V.label = 4);
                                    case 4:
                                        (i = s), (V.label = 5);
                                    case 5:
                                        return (
                                            (o = xv.apply(void 0, [((w.domain = i), (w.expiration = 365), (w.sameSite = "Lax"), (w.secure = !1), (w.upgrade = !0), w), t.cookieOptions])),
                                            (a = I_(t.identityStorage, o)),
                                            [4, s_(e, a, null === (E = null === (x = t.cookieOptions) || void 0 === x ? void 0 : x.upgrade) || void 0 === E || E)]
                                        );
                                    case 6:
                                        return (c = V.sent()), [4, a.get(Gy(e))];
                                    case 7:
                                        return (
                                            (u = V.sent()),
                                            (l = Cy()),
                                            (d =
                                                null !==
                                                    (M =
                                                        null !==
                                                            (A =
                                                                null !== (C = null !== (T = null !== (I = t.deviceId) && void 0 !== I ? I : l.ampDeviceId) && void 0 !== T ? T : l.deviceId) && void 0 !== C
                                                                    ? C
                                                                    : null == u
                                                                    ? void 0
                                                                    : u.deviceId) && void 0 !== A
                                                            ? A
                                                            : c.deviceId) && void 0 !== M
                                                    ? M
                                                    : Gv()),
                                            (p = null !== (R = null == u ? void 0 : u.lastEventId) && void 0 !== R ? R : c.lastEventId),
                                            (f = null !== (O = null == u ? void 0 : u.lastEventTime) && void 0 !== O ? O : c.lastEventTime),
                                            (h = null !== (P = null !== (N = t.optOut) && void 0 !== N ? N : null == u ? void 0 : u.optOut) && void 0 !== P ? P : c.optOut),
                                            (m = null !== (D = null == u ? void 0 : u.sessionId) && void 0 !== D ? D : c.sessionId),
                                            (g = null !== (F = null !== (L = t.userId) && void 0 !== L ? L : null == u ? void 0 : u.userId) && void 0 !== F ? F : c.userId),
                                            (n.previousSessionDeviceId = null !== (j = null == u ? void 0 : u.deviceId) && void 0 !== j ? j : c.deviceId),
                                            (n.previousSessionUserId = null !== ($ = null == u ? void 0 : u.userId) && void 0 !== $ ? $ : c.userId),
                                            (v = {
                                                ipAddress: null === (B = null === (U = t.trackingOptions) || void 0 === U ? void 0 : U.ipAddress) || void 0 === B || B,
                                                language: null === (z = null === (q = t.trackingOptions) || void 0 === q ? void 0 : q.language) || void 0 === z || z,
                                                platform: null === (W = null === (H = t.trackingOptions) || void 0 === H ? void 0 : H.platform) || void 0 === W || W,
                                            }),
                                            (y = null == u ? void 0 : u.pageCounter),
                                            (_ = null == u ? void 0 : u.debugLogsEnabled),
                                            [
                                                4,
                                                (b = new x_(
                                                    e,
                                                    t.appVersion,
                                                    a,
                                                    o,
                                                    t.defaultTracking,
                                                    d,
                                                    t.flushIntervalMillis,
                                                    t.flushMaxRetries,
                                                    t.flushQueueSize,
                                                    r,
                                                    t.ingestionMetadata,
                                                    t.instanceName,
                                                    p,
                                                    f,
                                                    t.loggerProvider,
                                                    t.logLevel,
                                                    t.minIdLength,
                                                    t.offline,
                                                    h,
                                                    t.partnerId,
                                                    t.plan,
                                                    t.serverUrl,
                                                    t.serverZone,
                                                    m,
                                                    t.sessionTimeout,
                                                    t.storageProvider,
                                                    v,
                                                    t.transport,
                                                    t.useBatch,
                                                    g,
                                                    y,
                                                    _
                                                )).storageProvider.isEnabled(),
                                            ]
                                        );
                                    case 8:
                                        return V.sent() || (b.loggerProvider.warn("Storage provider ".concat(b.storageProvider.constructor.name, " is not enabled. Falling back to MemoryStorage.")), (b.storageProvider = new Yy())), [2, b];
                                }
                            });
                        })
                    );
                },
                I_ = function (e, t) {
                    switch ((void 0 === e && (e = k_), void 0 === t && (t = {}), e)) {
                        case "localStorage":
                            return new n_();
                        case "sessionStorage":
                            return new r_();
                        case "none":
                            return new Yy();
                        default:
                            return new Ky(xv(xv({}, t), { expirationDays: t.expiration }));
                    }
                },
                T_ = function (e) {
                    return "xhr" === e ? new o_() : "beacon" === e ? new i_() : new Zy();
                },
                C_ = function (e) {
                    return Iv(void 0, void 0, void 0, function () {
                        var t, n, r, o, i, s, a;
                        return Tv(this, function (c) {
                            switch (c.label) {
                                case 0:
                                    return [4, new Ky().isEnabled()];
                                case 1:
                                    if (!c.sent() || (!e && ("undefined" == typeof location || !location.hostname))) return [2, ""];
                                    for (t = null != e ? e : location.hostname, n = t.split("."), r = [], o = "AMP_TLDTEST", i = n.length - 2; i >= 0; --i) r.push(n.slice(i).join("."));
                                    (i = 0), (c.label = 2);
                                case 2:
                                    return i < r.length ? ((s = r[i]), [4, (a = new Ky({ domain: "." + s })).set(o, 1)]) : [3, 7];
                                case 3:
                                    return c.sent(), [4, a.get(o)];
                                case 4:
                                    return c.sent() ? [4, a.remove(o)] : [3, 6];
                                case 5:
                                    return c.sent(), [2, "." + s];
                                case 6:
                                    return i++, [3, 2];
                                case 7:
                                    return [2, ""];
                            }
                        });
                    });
                },
                A_ = function (e) {
                    var t = {};
                    for (var n in e) {
                        var r = e[n];
                        r && (t[n] = r);
                    }
                    return t;
                },
                M_ = function (e) {
                    var t;
                    void 0 === e && (e = {});
                    var n,
                        r,
                        o = Ty(),
                        i = void 0,
                        s = e.trackOn,
                        a = e.trackHistoryChanges,
                        c = e.eventType,
                        u = void 0 === c ? "[Amplitude] Page Viewed" : c,
                        l = function () {
                            return Iv(void 0, void 0, void 0, function () {
                                var e, t;
                                return Tv(this, function (n) {
                                    switch (n.label) {
                                        case 0:
                                            return (t = { event_type: u }), (e = [{}]), [4, R_()];
                                        case 1:
                                            return [
                                                2,
                                                ((t.event_properties = xv.apply(void 0, [
                                                    xv.apply(void 0, e.concat([n.sent()])),
                                                    {
                                                        "[Amplitude] Page Domain": ("undefined" != typeof location && location.hostname) || "",
                                                        "[Amplitude] Page Location": ("undefined" != typeof location && location.href) || "",
                                                        "[Amplitude] Page Path": ("undefined" != typeof location && location.pathname) || "",
                                                        "[Amplitude] Page Title": ("undefined" != typeof document && document.title) || "",
                                                        "[Amplitude] Page URL": ("undefined" != typeof location && location.href.split("?")[0]) || "",
                                                    },
                                                ])),
                                                t),
                                            ];
                                    }
                                });
                            });
                        },
                        d = function () {
                            return void 0 === s || ("function" == typeof s && s());
                        },
                        p = "undefined" != typeof location ? location.href : null,
                        f = function () {
                            return Iv(void 0, void 0, void 0, function () {
                                var e, n, r, o;
                                return Tv(this, function (s) {
                                    switch (s.label) {
                                        case 0:
                                            return (e = location.href), (n = N_(a, e, p || "") && d()), (p = e), n ? (null == i || i.log("Tracking page view event"), null != t ? [3, 1] : [3, 3]) : [3, 4];
                                        case 1:
                                            return (o = (r = t).track), [4, l()];
                                        case 2:
                                            o.apply(r, [s.sent()]), (s.label = 3);
                                        case 3:
                                            s.label = 4;
                                        case 4:
                                            return [2];
                                    }
                                });
                            });
                        },
                        h = function () {
                            f();
                        },
                        m = {
                            name: "@amplitude/plugin-page-view-tracking-browser",
                            type: "enrichment",
                            setup: function (e, s) {
                                return Iv(void 0, void 0, void 0, function () {
                                    var a, c;
                                    return Tv(this, function (u) {
                                        switch (u.label) {
                                            case 0:
                                                return (
                                                    (t = s),
                                                    (r = e),
                                                    (i = e.loggerProvider).log("Installing @amplitude/plugin-page-view-tracking-browser"),
                                                    o &&
                                                        (o.addEventListener("popstate", h),
                                                        (n = o.history.pushState),
                                                        (o.history.pushState = new Proxy(o.history.pushState, {
                                                            apply: function (e, t, n) {
                                                                var r = Av(n, 3),
                                                                    o = r[0],
                                                                    i = r[1],
                                                                    s = r[2];
                                                                e.apply(t, [o, i, s]), f();
                                                            },
                                                        }))),
                                                    d() ? (i.log("Tracking page view event"), (c = (a = t).track), [4, l()]) : [3, 2]
                                                );
                                            case 1:
                                                c.apply(a, [u.sent()]), (u.label = 2);
                                            case 2:
                                                return [2];
                                        }
                                    });
                                });
                            },
                            execute: function (e) {
                                return Iv(void 0, void 0, void 0, function () {
                                    var t;
                                    return Tv(this, function (n) {
                                        switch (n.label) {
                                            case 0:
                                                return "attribution" === s && O_(e) ? (null == i || i.log("Enriching campaign event to page view event with campaign parameters"), [4, l()]) : [3, 2];
                                            case 1:
                                                (t = n.sent()), (e.event_type = t.event_type), (e.event_properties = xv(xv({}, e.event_properties), t.event_properties)), (n.label = 2);
                                            case 2:
                                                return (
                                                    r && e.event_type === u && ((r.pageCounter = r.pageCounter ? r.pageCounter + 1 : 1), (e.event_properties = xv(xv({}, e.event_properties), { "[Amplitude] Page Counter": r.pageCounter }))),
                                                    [2, e]
                                                );
                                        }
                                    });
                                });
                            },
                            teardown: function () {
                                return Iv(void 0, void 0, void 0, function () {
                                    return Tv(this, function (e) {
                                        return o && (o.removeEventListener("popstate", h), n && (o.history.pushState = n)), [2];
                                    });
                                });
                            },
                        };
                    return m;
                },
                R_ = function () {
                    return Iv(void 0, void 0, void 0, function () {
                        var e;
                        return Tv(this, function (t) {
                            switch (t.label) {
                                case 0:
                                    return (e = A_), [4, new My().parse()];
                                case 1:
                                    return [2, e.apply(void 0, [t.sent()])];
                            }
                        });
                    });
                },
                O_ = function (e) {
                    if ("$identify" === e.event_type && e.user_properties) {
                        var t = e.user_properties,
                            n = t[Jv.SET] || {},
                            r = t[Jv.UNSET] || {},
                            o = Mv(Mv([], Av(Object.keys(n)), !1), Av(Object.keys(r)), !1);
                        return Object.keys(ky).every(function (e) {
                            return o.includes(e);
                        });
                    }
                    return !1;
                },
                N_ = function (e, t, n) {
                    return "pathOnly" === e ? t.split("?")[0] !== n.split("?")[0] : t !== n;
                },
                P_ = function () {
                    var e,
                        t = [],
                        n = function (e, n, r) {
                            e.addEventListener(n, r), t.push({ element: e, type: n, handler: r });
                        };
                    return {
                        name: "@amplitude/plugin-form-interaction-tracking-browser",
                        type: "enrichment",
                        setup: function (t, r) {
                            return Iv(void 0, void 0, void 0, function () {
                                var o;
                                return Tv(this, function (i) {
                                    return (
                                        null === (o = Ty()) ||
                                            void 0 === o ||
                                            o.addEventListener("load", function () {
                                                if (r) {
                                                    if ("undefined" != typeof document) {
                                                        var o = function (e) {
                                                            var t = !1;
                                                            n(e, "change", function () {
                                                                var n;
                                                                t || r.track(l_, (((n = {})[b_] = D_(e.id)), (n[w_] = D_(e.name)), (n[S_] = e.action), n)), (t = !0);
                                                            }),
                                                                n(e, "submit", function () {
                                                                    var n, o;
                                                                    t || r.track(l_, (((n = {})[b_] = D_(e.id)), (n[w_] = D_(e.name)), (n[S_] = e.action), n)),
                                                                        r.track(d_, (((o = {})[b_] = D_(e.id)), (o[w_] = D_(e.name)), (o[S_] = e.action), o)),
                                                                        (t = !1);
                                                                });
                                                        };
                                                        Array.from(document.getElementsByTagName("form")).forEach(o),
                                                            "undefined" != typeof MutationObserver &&
                                                                (e = new MutationObserver(function (e) {
                                                                    e.forEach(function (e) {
                                                                        e.addedNodes.forEach(function (e) {
                                                                            "FORM" === e.nodeName && o(e), "querySelectorAll" in e && "function" == typeof e.querySelectorAll && Array.from(e.querySelectorAll("form")).map(o);
                                                                        });
                                                                    });
                                                                })).observe(document.body, { subtree: !0, childList: !0 });
                                                    }
                                                } else t.loggerProvider.warn("Form interaction tracking requires a later version of @amplitude/analytics-browser. Form interaction events are not tracked.");
                                            }),
                                        [2]
                                    );
                                });
                            });
                        },
                        execute: function (e) {
                            return Iv(void 0, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    return [2, e];
                                });
                            });
                        },
                        teardown: function () {
                            return Iv(void 0, void 0, void 0, function () {
                                return Tv(this, function (n) {
                                    return (
                                        null == e || e.disconnect(),
                                        t.forEach(function (e) {
                                            var t = e.element,
                                                n = e.type,
                                                r = e.handler;
                                            null == t || t.removeEventListener(n, r);
                                        }),
                                        (t = []),
                                        [2]
                                    );
                                });
                            });
                        },
                    };
                },
                D_ = function (e) {
                    if ("string" == typeof e) return e;
                },
                L_ = function () {
                    var e,
                        t = [];
                    return {
                        name: "@amplitude/plugin-file-download-tracking-browser",
                        type: "enrichment",
                        setup: function (n, r) {
                            return Iv(void 0, void 0, void 0, function () {
                                var o;
                                return Tv(this, function (i) {
                                    return (
                                        null === (o = Ty()) ||
                                            void 0 === o ||
                                            o.addEventListener("load", function () {
                                                if (r) {
                                                    if ("undefined" != typeof document) {
                                                        var o = function (e) {
                                                                var n;
                                                                try {
                                                                    n = new URL(e.href, window.location.href);
                                                                } catch (e) {
                                                                    return;
                                                                }
                                                                var o = i.exec(n.href),
                                                                    s = null == o ? void 0 : o[1];
                                                                s &&
                                                                    (function (e, n, r) {
                                                                        e.addEventListener(n, r), t.push({ element: e, type: n, handler: r });
                                                                    })(e, "click", function () {
                                                                        var t;
                                                                        s && r.track(p_, (((t = {})[m_] = s), (t[g_] = n.pathname), (t[v_] = e.id), (t[y_] = e.text), (t[__] = e.href), t));
                                                                    });
                                                            },
                                                            i = /\.(pdf|xlsx?|docx?|txt|rtf|csv|exe|key|pp(s|t|tx)|7z|pkg|rar|gz|zip|avi|mov|mp4|mpe?g|wmv|midi?|mp3|wav|wma)$/;
                                                        Array.from(document.getElementsByTagName("a")).forEach(o),
                                                            "undefined" != typeof MutationObserver &&
                                                                (e = new MutationObserver(function (e) {
                                                                    e.forEach(function (e) {
                                                                        e.addedNodes.forEach(function (e) {
                                                                            "A" === e.nodeName && o(e), "querySelectorAll" in e && "function" == typeof e.querySelectorAll && Array.from(e.querySelectorAll("a")).map(o);
                                                                        });
                                                                    });
                                                                })).observe(document.body, { subtree: !0, childList: !0 });
                                                    }
                                                } else n.loggerProvider.warn("File download tracking requires a later version of @amplitude/analytics-browser. File download events are not tracked.");
                                            }),
                                        [2]
                                    );
                                });
                            });
                        },
                        execute: function (e) {
                            return Iv(void 0, void 0, void 0, function () {
                                return Tv(this, function (t) {
                                    return [2, e];
                                });
                            });
                        },
                        teardown: function () {
                            return Iv(void 0, void 0, void 0, function () {
                                return Tv(this, function (n) {
                                    return (
                                        null == e || e.disconnect(),
                                        t.forEach(function (e) {
                                            var t = e.element,
                                                n = e.type,
                                                r = e.handler;
                                            null == t || t.removeEventListener(n, r);
                                        }),
                                        (t = []),
                                        [2]
                                    );
                                });
                            });
                        },
                    };
                },
                F_ = !1,
                j_ = function () {
                    var e = Ty(),
                        t = [],
                        n = function (n, r) {
                            e && (e.addEventListener(n, r), t.push({ type: n, handler: r }));
                        };
                    return {
                        name: "@amplitude/plugin-network-checker-browser",
                        type: "before",
                        setup: function (e, t) {
                            return Iv(void 0, void 0, void 0, function () {
                                return Tv(this, function (r) {
                                    return (
                                        (e.offline = !navigator.onLine),
                                        n("online", function () {
                                            e.loggerProvider.debug("Network connectivity changed to online."),
                                                (e.offline = !1),
                                                setTimeout(function () {
                                                    t.flush();
                                                }, e.flushIntervalMillis);
                                        }),
                                        n("offline", function () {
                                            e.loggerProvider.debug("Network connectivity changed to offline."), (e.offline = !0);
                                        }),
                                        [2]
                                    );
                                });
                            });
                        },
                        teardown: function () {
                            return Iv(void 0, void 0, void 0, function () {
                                return Tv(this, function (n) {
                                    return (
                                        t.forEach(function (t) {
                                            var n = t.type,
                                                r = t.handler;
                                            e && e.removeEventListener(n, r);
                                        }),
                                        (t = []),
                                        [2]
                                    );
                                });
                            });
                        },
                    };
                },
                $_ = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        kv(t, e),
                        (t.prototype.init = function (e, t, n) {
                            var r, o;
                            return (
                                void 0 === e && (e = ""),
                                arguments.length > 2 ? ((r = t), (o = n)) : "string" == typeof t ? ((r = t), (o = void 0)) : ((r = null == t ? void 0 : t.userId), (o = t)),
                                Fv(this._init(xv(xv({}, o), { userId: r, apiKey: e })))
                            );
                        }),
                        (t.prototype._init = function (t) {
                            var n, r, o;
                            return Iv(this, void 0, void 0, function () {
                                var i,
                                    s,
                                    a,
                                    c,
                                    u,
                                    l = this;
                                return Tv(this, function (d) {
                                    switch (d.label) {
                                        case 0:
                                            return this.initializing ? [2] : ((this.initializing = !0), [4, E_(t.apiKey, t, this)]);
                                        case 1:
                                            return (i = d.sent()), [4, e.prototype._init.call(this, i)];
                                        case 2:
                                            return (
                                                d.sent(),
                                                this.logBrowserOptions(t),
                                                cy(this.config.defaultTracking)
                                                    ? ((s = (function (e) {
                                                          return cy(e.defaultTracking) && e.defaultTracking && "object" == typeof e.defaultTracking && e.defaultTracking.attribution && "object" == typeof e.defaultTracking.attribution
                                                              ? xv({}, e.defaultTracking.attribution)
                                                              : {};
                                                      })(this.config)),
                                                      (this.webAttribution = new Oy(s, this.config)),
                                                      [4, this.webAttribution.init()])
                                                    : [3, 4]
                                            );
                                        case 3:
                                            d.sent(), (d.label = 4);
                                        case 4:
                                            return (
                                                (a = Cy()),
                                                (c = Number.isNaN(Number(a.ampSessionId)) ? void 0 : Number(a.ampSessionId)),
                                                this.setSessionId(null !== (o = null !== (r = null !== (n = t.sessionId) && void 0 !== n ? n : c) && void 0 !== r ? r : this.config.sessionId) && void 0 !== o ? o : Date.now()),
                                                (u = By(t.instanceName)).identityStore.setIdentity({ userId: this.config.userId, deviceId: this.config.deviceId }),
                                                null === this.config.offline ? [3, 6] : [4, this.add(j_()).promise]
                                            );
                                        case 5:
                                            d.sent(), (d.label = 6);
                                        case 6:
                                            return [4, this.add(new Zv()).promise];
                                        case 7:
                                            return d.sent(), [4, this.add(new Vy()).promise];
                                        case 8:
                                            return d.sent(), [4, this.add(new qy()).promise];
                                        case 9:
                                            return (
                                                d.sent(),
                                                (function (e) {
                                                    F_ ||
                                                        void 0 !== e.defaultTracking ||
                                                        (e.loggerProvider.warn(
                                                            "`options.defaultTracking` is set to undefined. This implicitly configures your Amplitude instance to track Page Views, Sessions, File Downloads, and Form Interactions. You can suppress this warning by explicitly setting a value to `options.defaultTracking`. The value must either be a boolean, to enable and disable all default events, or an object, for advanced configuration. For example:\n\namplitude.init(<YOUR_API_KEY>, {\n  defaultTracking: true,\n});\n\nVisit https://www.docs.developers.amplitude.com/data/sdks/browser-2/#tracking-default-events for more details."
                                                        ),
                                                        (F_ = !0));
                                                })(this.config),
                                                (p = this.config.defaultTracking),
                                                ay(p, "fileDownloads") ? (this.config.loggerProvider.debug("Adding file download tracking plugin"), [4, this.add(L_()).promise]) : [3, 11]
                                            );
                                        case 10:
                                            d.sent(), (d.label = 11);
                                        case 11:
                                            return (function (e) {
                                                return ay(e, "formInteractions");
                                            })(this.config.defaultTracking)
                                                ? (this.config.loggerProvider.debug("Adding form interaction plugin"), [4, this.add(P_()).promise])
                                                : [3, 13];
                                        case 12:
                                            d.sent(), (d.label = 13);
                                        case 13:
                                            return uy(this.config.defaultTracking) ? (this.config.loggerProvider.debug("Adding page view tracking plugin"), [4, this.add(M_(dy(this.config))).promise]) : [3, 15];
                                        case 14:
                                            d.sent(), (d.label = 15);
                                        case 15:
                                            return (this.initializing = !1), [4, this.runQueuedFunctions("dispatchQ")];
                                        case 16:
                                            return (
                                                d.sent(),
                                                u.eventBridge.setEventReceiver(function (e) {
                                                    l.track(e.eventType, e.eventProperties);
                                                }),
                                                [2]
                                            );
                                    }
                                    var p;
                                });
                            });
                        }),
                        (t.prototype.getUserId = function () {
                            var e;
                            return null === (e = this.config) || void 0 === e ? void 0 : e.userId;
                        }),
                        (t.prototype.setUserId = function (e) {
                            this.config
                                ? (this.config.loggerProvider.debug("function setUserId: ", e),
                                  (e === this.config.userId && void 0 !== e) ||
                                      ((this.config.userId = e),
                                      (function (e, t) {
                                          By(t).identityStore.editIdentity().setUserId(e).commit();
                                      })(e, this.config.instanceName)))
                                : this.q.push(this.setUserId.bind(this, e));
                        }),
                        (t.prototype.getDeviceId = function () {
                            var e;
                            return null === (e = this.config) || void 0 === e ? void 0 : e.deviceId;
                        }),
                        (t.prototype.setDeviceId = function (e) {
                            this.config
                                ? (this.config.loggerProvider.debug("function setDeviceId: ", e),
                                  (this.config.deviceId = e),
                                  (function (e, t) {
                                      By(t).identityStore.editIdentity().setDeviceId(e).commit();
                                  })(e, this.config.instanceName))
                                : this.q.push(this.setDeviceId.bind(this, e));
                        }),
                        (t.prototype.reset = function () {
                            this.setDeviceId(Gv()), this.setUserId(void 0);
                        }),
                        (t.prototype.getSessionId = function () {
                            var e;
                            return null === (e = this.config) || void 0 === e ? void 0 : e.sessionId;
                        }),
                        (t.prototype.setSessionId = function (e) {
                            var t,
                                n = [];
                            if (!this.config) return this.q.push(this.setSessionId.bind(this, e)), Fv(Promise.resolve());
                            if (e === this.config.sessionId) return Fv(Promise.resolve());
                            this.config.loggerProvider.debug("function setSessionId: ", e);
                            var r = this.getSessionId(),
                                o = this.config.lastEventTime,
                                i = null !== (t = this.config.lastEventId) && void 0 !== t ? t : -1;
                            (this.config.sessionId = e),
                                (this.config.lastEventTime = void 0),
                                (this.config.pageCounter = 0),
                                ly(this.config.defaultTracking) &&
                                    (r && o && n.push(this.track(h_, void 0, { device_id: this.previousSessionDeviceId, event_id: ++i, session_id: r, time: o + 1, user_id: this.previousSessionUserId }).promise),
                                    (this.config.lastEventTime = this.config.sessionId));
                            var s = this.trackCampaignEventIfNeeded(++i, n);
                            return (
                                ly(this.config.defaultTracking) && n.push(this.track(f_, void 0, { event_id: s ? ++i : i, session_id: this.config.sessionId, time: this.config.lastEventTime }).promise),
                                (this.previousSessionDeviceId = this.config.deviceId),
                                (this.previousSessionUserId = this.config.userId),
                                Fv(Promise.all(n))
                            );
                        }),
                        (t.prototype.extendSession = function () {
                            this.config ? (this.config.lastEventTime = Date.now()) : this.q.push(this.extendSession.bind(this));
                        }),
                        (t.prototype.setTransport = function (e) {
                            this.config ? (this.config.transportProvider = T_(e)) : this.q.push(this.setTransport.bind(this, e));
                        }),
                        (t.prototype.identify = function (t, n) {
                            if (Hy(t)) {
                                var r = t._q;
                                (t._q = []), (t = zy(new ny(), r));
                            }
                            return (null == n ? void 0 : n.user_id) && this.setUserId(n.user_id), (null == n ? void 0 : n.device_id) && this.setDeviceId(n.device_id), e.prototype.identify.call(this, t, n);
                        }),
                        (t.prototype.groupIdentify = function (t, n, r, o) {
                            if (Hy(r)) {
                                var i = r._q;
                                (r._q = []), (r = zy(new ny(), i));
                            }
                            return e.prototype.groupIdentify.call(this, t, n, r, o);
                        }),
                        (t.prototype.revenue = function (t, n) {
                            if (Hy(t)) {
                                var r = t._q;
                                (t._q = []), (t = zy(new ry(), r));
                            }
                            return e.prototype.revenue.call(this, t, n);
                        }),
                        (t.prototype.trackCampaignEventIfNeeded = function (e, t) {
                            if (!this.webAttribution || !this.webAttribution.shouldTrackNewCampaign) return !1;
                            var n = this.webAttribution.generateCampaignEvent(e);
                            return t ? t.push(this.track(n).promise) : this.track(n), this.config.loggerProvider.log("Tracking attribution."), !0;
                        }),
                        (t.prototype.process = function (t) {
                            return Iv(this, void 0, void 0, function () {
                                var n, r, o;
                                return Tv(this, function (i) {
                                    return (
                                        (n = Date.now()),
                                        (r = Ry(this.config.sessionTimeout, this.config.lastEventTime)),
                                        (o = this.webAttribution && this.webAttribution.shouldSetSessionIdOnNewCampaign()),
                                        t.event_type === f_ ||
                                            t.event_type === h_ ||
                                            (t.session_id && t.session_id !== this.getSessionId()) ||
                                            (r || o ? (this.setSessionId(n), o && this.config.loggerProvider.log("Created a new session for new campaign.")) : r || this.trackCampaignEventIfNeeded()),
                                        [2, e.prototype.process.call(this, t)]
                                    );
                                });
                            });
                        }),
                        (t.prototype.logBrowserOptions = function (e) {
                            try {
                                var t = xv(xv({}, e), { apiKey: e.apiKey.substring(0, 10) + "********" });
                                this.config.loggerProvider.debug("Initialized Amplitude with BrowserConfig:", JSON.stringify(t));
                            } catch (e) {
                                this.config.loggerProvider.error("Error logging browser config", e);
                            }
                        }),
                        t
                    );
                })(sy);
            const U_ =
                ((B_ = new $_()),
                {
                    init: Lv(B_.init.bind(B_), "init", Nv(B_), Dv(B_, ["config"])),
                    add: Lv(B_.add.bind(B_), "add", Nv(B_), Dv(B_, ["config.apiKey", "timeline.plugins"])),
                    remove: Lv(B_.remove.bind(B_), "remove", Nv(B_), Dv(B_, ["config.apiKey", "timeline.plugins"])),
                    track: Lv(B_.track.bind(B_), "track", Nv(B_), Dv(B_, ["config.apiKey", "timeline.queue.length"])),
                    logEvent: Lv(B_.logEvent.bind(B_), "logEvent", Nv(B_), Dv(B_, ["config.apiKey", "timeline.queue.length"])),
                    identify: Lv(B_.identify.bind(B_), "identify", Nv(B_), Dv(B_, ["config.apiKey", "timeline.queue.length"])),
                    groupIdentify: Lv(B_.groupIdentify.bind(B_), "groupIdentify", Nv(B_), Dv(B_, ["config.apiKey", "timeline.queue.length"])),
                    setGroup: Lv(B_.setGroup.bind(B_), "setGroup", Nv(B_), Dv(B_, ["config.apiKey", "timeline.queue.length"])),
                    revenue: Lv(B_.revenue.bind(B_), "revenue", Nv(B_), Dv(B_, ["config.apiKey", "timeline.queue.length"])),
                    flush: Lv(B_.flush.bind(B_), "flush", Nv(B_), Dv(B_, ["config.apiKey", "timeline.queue.length"])),
                    getUserId: Lv(B_.getUserId.bind(B_), "getUserId", Nv(B_), Dv(B_, ["config", "config.userId"])),
                    setUserId: Lv(B_.setUserId.bind(B_), "setUserId", Nv(B_), Dv(B_, ["config", "config.userId"])),
                    getDeviceId: Lv(B_.getDeviceId.bind(B_), "getDeviceId", Nv(B_), Dv(B_, ["config", "config.deviceId"])),
                    setDeviceId: Lv(B_.setDeviceId.bind(B_), "setDeviceId", Nv(B_), Dv(B_, ["config", "config.deviceId"])),
                    reset: Lv(B_.reset.bind(B_), "reset", Nv(B_), Dv(B_, ["config", "config.userId", "config.deviceId"])),
                    getSessionId: Lv(B_.getSessionId.bind(B_), "getSessionId", Nv(B_), Dv(B_, ["config"])),
                    setSessionId: Lv(B_.setSessionId.bind(B_), "setSessionId", Nv(B_), Dv(B_, ["config"])),
                    extendSession: Lv(B_.extendSession.bind(B_), "extendSession", Nv(B_), Dv(B_, ["config"])),
                    setOptOut: Lv(B_.setOptOut.bind(B_), "setOptOut", Nv(B_), Dv(B_, ["config"])),
                    setTransport: Lv(B_.setTransport.bind(B_), "setTransport", Nv(B_), Dv(B_, ["config"])),
                });
            var B_,
                q_ = U_.init,
                z_ = U_.logEvent;
            const H_ = { randomUUID: "undefined" != typeof crypto && crypto.randomUUID && crypto.randomUUID.bind(crypto) };
            var W_,
                V_ = new Uint8Array(16);
            function Y_() {
                if (!W_ && !(W_ = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)))
                    throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
                return W_(V_);
            }
            for (var G_ = [], K_ = 0; K_ < 256; ++K_) G_.push((K_ + 256).toString(16).slice(1));
            function J_(e, t = 0) {
                return (
                    G_[e[t + 0]] +
                    G_[e[t + 1]] +
                    G_[e[t + 2]] +
                    G_[e[t + 3]] +
                    "-" +
                    G_[e[t + 4]] +
                    G_[e[t + 5]] +
                    "-" +
                    G_[e[t + 6]] +
                    G_[e[t + 7]] +
                    "-" +
                    G_[e[t + 8]] +
                    G_[e[t + 9]] +
                    "-" +
                    G_[e[t + 10]] +
                    G_[e[t + 11]] +
                    G_[e[t + 12]] +
                    G_[e[t + 13]] +
                    G_[e[t + 14]] +
                    G_[e[t + 15]]
                ).toLowerCase();
            }
            const X_ = function (e, t, n) {
                    if (H_.randomUUID && !t && !e) return H_.randomUUID();
                    var r = (e = e || {}).random || (e.rng || Y_)();
                    if (((r[6] = (15 & r[6]) | 64), (r[8] = (63 & r[8]) | 128), t)) {
                        n = n || 0;
                        for (var o = 0; o < 16; ++o) t[n + o] = r[o];
                        return t;
                    }
                    return J_(r);
                },
                Q_ = "deviceId";
            function Z_() {
                if (!Bm()) throw new Error("Analytics listener must be added from background");
                const e = (function (e, t) {
                    const n = (n, r) => {
                        if (n.type === e) return t(n, r);
                    };
                    return Jm().runtime.onMessage.addListener(n), () => Jm().runtime.onMessage.removeListener(n);
                })("LOG_EVENT", async (e) => {
                    const { event: t, properties: n } = e;
                    eb(t, n);
                });
                return () => {
                    e();
                };
            }
            async function eb(e, t) {
                if (!Bm())
                    return void (async function (e, t) {
                        null === t ? Jm().runtime.sendMessage(e) : Jm().tabs.sendMessage(t, e);
                    })({ type: "LOG_EVENT", event: e, properties: t }, null);
                const n = await (async function () {
                    let e = await ev.getItem(Q_);
                    return e || ((e = X_()), await ev.setItem(Q_, e)), e;
                })();
                q_(wv.amplitude.apiKey, { deviceId: n, appVersion: Jm().runtime.getManifest().version, defaultTracking: !1 }), z_(e, t);
            }
            function tb() {
                gv || Jm().runtime.setUninstallURL(hv);
                const e = async (e) => {
                    const { reason: t, previousVersion: n } = e;
                    "install" === t
                        ? (await rv(), await Jm().tabs.create({ url: `${wv.baseUrl}${fv.WELCOME}` }), eb("install extension"))
                        : "update" === t &&
                          n &&
                          (await pv(n),
                          await (async function () {
                              const e = await Jm().windows.getAll({ populate: !0, windowTypes: ["popup"] });
                              await Promise.all(
                                  e.map((e) => {
                                      if (!e.tabs || 0 === e.tabs.length) throw new Error("Unable to get popup window tabs");
                                      return Promise.all(
                                          e.tabs.map((e) => {
                                              if (!vv(e.id)) throw new Error("Unable to get tab ID");
                                              return Jm().tabs.reload(e.id);
                                          })
                                      );
                                  })
                              );
                          })());
                };
                return Jm().runtime.onInstalled.addListener(e), () => Jm().runtime.onInstalled.removeListener(e);
            }
            const nb = Zg("session");
            const rb = "popupMap";
            async function ob() {
                return (await nb.getItem(rb)) ?? {};
            }
            async function ib(e) {
                const t = await Jm().windows.create({ type: "popup", url: ab(e), width: 720, height: 650 });
                if (!vv(t.id)) throw new Error("Unable to get window ID");
                return (
                    await (async function ({ activeTabId: e, popupWindowId: t }) {
                        const n = await ob();
                        (n[e] = t), await nb.setItem(rb, n);
                    })({ activeTabId: e, popupWindowId: t.id }),
                    t
                );
            }
            async function sb(e) {
                const t = await (async function (e) {
                    const t = (await ob())[e];
                    return void 0 === t ? -1 : t;
                })(e);
                if (-1 === t) return null;
                let n;
                try {
                    n = await Jm().windows.get(t);
                } catch (t) {
                    return (
                        await (async function (e) {
                            const t = await ob();
                            delete t[e], await nb.setItem(rb, t);
                        })(e),
                        null
                    );
                }
                return n;
            }
            function ab(e) {
                return `${Jm().runtime.getURL("popup.html")}?tabId=${e}`;
            }
            function cb(e, t) {
                const n = (n, r) => {
                    const o = Object.values(yv).includes(r.origin);
                    if (n.type === e && o) return t(n, r);
                };
                return Jm().runtime.onMessageExternal.addListener(n), () => Jm().runtime.onMessageExternal.removeListener(n);
            }
            Gm.setTag("page", "background"),
                (function () {
                    const e = tb(),
                        t = (function () {
                            const e = cb("ANALYTICS", async (e) => {
                                    const { event: t, properties: n } = e;
                                    return eb(t, n);
                                }),
                                t = cb("VERSION", async () => Jm().runtime.getManifest().version);
                            return () => {
                                e(), t();
                            };
                        })(),
                        n = (function () {
                            const e = async (e) => {
                                if (!vv(e.id)) return;
                                const t = e.id,
                                    n = await sb(t);
                                if (n) {
                                    if (!vv(n.id)) throw new Error("Unable to get window id");
                                    await Jm().windows.update(n.id, { focused: !0 });
                                } else await ib(t), eb("open extension");
                            };
                            return Jm().action.onClicked.addListener(e), () => Jm().action.onClicked.removeListener(e);
                        })(),
                        r = Z_();
                })();
        })();
})();
